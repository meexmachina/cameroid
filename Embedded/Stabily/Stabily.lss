
Stabily.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000014a  00800100  000051e0  00005274  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000051e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002b9  0080024a  0080024a  000053be  2**0
                  ALLOC
  3 .stab         00001608  00000000  00000000  000053c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000061e  00000000  00000000  000069c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000a40  00000000  00000000  00006fe6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00001674  00000000  00000000  00007a26  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00011735  00000000  00000000  0000909a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000042d6  00000000  00000000  0001a7cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000d232  00000000  00000000  0001eaa5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000f80  00000000  00000000  0002bcd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00007560  00000000  00000000  0002cc58  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00009ad2  00000000  00000000  000341b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00002398  00000000  00000000  0003dc8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000d70  00000000  00000000  00040022  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c7       	rjmp	.+3972   	; 0xf86 <__ctors_end>
	for (; arrayLength>0; arrayLength--, (*count)-=2, (*pp)+=2)
	{
		printf_P(PSTR("%c"), (char)(**pp) );
	}
	return (arrayLength == 0);
}
       2:	00 00       	nop
       4:	de c7       	rjmp	.+4028   	; 0xfc2 <__bad_interrupt>
       6:	00 00       	nop
       8:	dc c7       	rjmp	.+4024   	; 0xfc2 <__bad_interrupt>
       a:	00 00       	nop
       c:	da c7       	rjmp	.+4020   	; 0xfc2 <__bad_interrupt>
       e:	00 00       	nop
      10:	d8 c7       	rjmp	.+4016   	; 0xfc2 <__bad_interrupt>
      12:	00 00       	nop
      14:	d6 c7       	rjmp	.+4012   	; 0xfc2 <__bad_interrupt>
      16:	00 00       	nop
      18:	d4 c7       	rjmp	.+4008   	; 0xfc2 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d2 c7       	rjmp	.+4004   	; 0xfc2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d0 c7       	rjmp	.+4000   	; 0xfc2 <__bad_interrupt>
      22:	00 00       	nop
      24:	ce c7       	rjmp	.+3996   	; 0xfc2 <__bad_interrupt>
      26:	00 00       	nop
      28:	0c 94 35 0c 	jmp	0x186a	; 0x186a <__vector_10>
      2c:	ca c7       	rjmp	.+3988   	; 0xfc2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	c8 c7       	rjmp	.+3984   	; 0xfc2 <__bad_interrupt>
      32:	00 00       	nop
      34:	c6 c7       	rjmp	.+3980   	; 0xfc2 <__bad_interrupt>
      36:	00 00       	nop
      38:	c4 c7       	rjmp	.+3976   	; 0xfc2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c2 c7       	rjmp	.+3972   	; 0xfc2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c0 c7       	rjmp	.+3968   	; 0xfc2 <__bad_interrupt>
      42:	00 00       	nop
      44:	be c7       	rjmp	.+3964   	; 0xfc2 <__bad_interrupt>
      46:	00 00       	nop
      48:	bc c7       	rjmp	.+3960   	; 0xfc2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ba c7       	rjmp	.+3956   	; 0xfc2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	b8 c7       	rjmp	.+3952   	; 0xfc2 <__bad_interrupt>
      52:	00 00       	nop
      54:	b6 c7       	rjmp	.+3948   	; 0xfc2 <__bad_interrupt>
      56:	00 00       	nop
      58:	b4 c7       	rjmp	.+3944   	; 0xfc2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b2 c7       	rjmp	.+3940   	; 0xfc2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b0 c7       	rjmp	.+3936   	; 0xfc2 <__bad_interrupt>
      62:	00 00       	nop
      64:	ae c7       	rjmp	.+3932   	; 0xfc2 <__bad_interrupt>
      66:	00 00       	nop
      68:	ac c7       	rjmp	.+3928   	; 0xfc2 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	aa c7       	rjmp	.+3924   	; 0xfc2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	a8 c7       	rjmp	.+3920   	; 0xfc2 <__bad_interrupt>
      72:	00 00       	nop
      74:	a6 c7       	rjmp	.+3916   	; 0xfc2 <__bad_interrupt>
      76:	00 00       	nop
      78:	a4 c7       	rjmp	.+3912   	; 0xfc2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a2 c7       	rjmp	.+3908   	; 0xfc2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a0 c7       	rjmp	.+3904   	; 0xfc2 <__bad_interrupt>
      82:	00 00       	nop
      84:	9e c7       	rjmp	.+3900   	; 0xfc2 <__bad_interrupt>
      86:	00 00       	nop
      88:	9c c7       	rjmp	.+3896   	; 0xfc2 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9a c7       	rjmp	.+3892   	; 0xfc2 <__bad_interrupt>
      8e:	00 00       	nop
      90:	98 c7       	rjmp	.+3888   	; 0xfc2 <__bad_interrupt>
      92:	00 00       	nop
      94:	96 c7       	rjmp	.+3884   	; 0xfc2 <__bad_interrupt>
      96:	00 00       	nop
      98:	e7 12       	cpse	r14, r23
      9a:	eb 12       	cpse	r14, r27
      9c:	ef 12       	cpse	r14, r31
      9e:	f3 12       	cpse	r15, r19
      a0:	f7 12       	cpse	r15, r23
      a2:	fb 12       	cpse	r15, r27
      a4:	ff 12       	cpse	r15, r31
      a6:	03 13       	cpse	r16, r19
      a8:	07 13       	cpse	r16, r23
      aa:	0b 13       	cpse	r16, r27
      ac:	0f 13       	cpse	r16, r31
      ae:	13 13       	cpse	r17, r19
      b0:	17 13       	cpse	r17, r23
      b2:	1b 13       	cpse	r17, r27
      b4:	1f 13       	cpse	r17, r31
      b6:	23 13       	cpse	r18, r19
      b8:	27 13       	cpse	r18, r23
      ba:	2b 13       	cpse	r18, r27
      bc:	2f 13       	cpse	r18, r31
      be:	33 13       	cpse	r19, r19
      c0:	37 13       	cpse	r19, r23
      c2:	3b 13       	cpse	r19, r27
      c4:	3f 13       	cpse	r19, r31
      c6:	43 13       	cpse	r20, r19
      c8:	47 13       	cpse	r20, r23
      ca:	4b 13       	cpse	r20, r27
      cc:	4f 13       	cpse	r20, r31
      ce:	53 13       	cpse	r21, r19
      d0:	57 13       	cpse	r21, r23
      d2:	5b 13       	cpse	r21, r27
      d4:	5f 13       	cpse	r21, r31
      d6:	63 13       	cpse	r22, r19

000000d8 <__c.4461>:
      d8:	1b 5b 33 36 6d 53 74 61 62 69 6c 79 20 76 31 2e     .[36mStabily v1.
      e8:	30 20 72 75 6e 6e 69 6e 67 2e 0d 0a 1b 5b 33 37     0 running....[37
      f8:	6d 00                                               m.

000000fa <__c.4436>:
      fa:	1b 5b 33 31 6d 44 65 76 20 45 6e 75 6d 20 45 72     .[31mDev Enum Er
     10a:	72 6f 72 0d 0a 20 2d 2d 20 45 72 72 6f 72 20 43     ror.. -- Error C
     11a:	6f 64 65 20 25 64 0d 0a 20 2d 2d 20 53 75 62 20     ode %d.. -- Sub 
     12a:	45 72 72 6f 72 20 43 6f 64 65 20 25 64 0d 0a 20     Error Code %d.. 
     13a:	2d 2d 20 49 6e 20 53 74 61 74 65 20 25 64 0d 0a     -- In State %d..
     14a:	1b 5b 33 37 6d 00                                   .[37m.

00000150 <__c.4429>:
     150:	1b 5b 33 31 6d 48 6f 73 74 20 4d 6f 64 65 20 45     .[31mHost Mode E
     160:	72 72 6f 72 0d 0a 20 2d 2d 20 56 42 55 53 20 76     rror.. -- VBUS v
     170:	6f 6c 74 61 67 65 20 64 72 6f 70 70 65 64 20 75     oltage dropped u
     180:	6e 64 65 72 20 34 2e 35 56 0d 0a 1b 5b 33 37 6d     nder 4.5V...[37m
     190:	00                                                  .

00000191 <__c.4424>:
     191:	43 61 6d 65 72 61 20 44 65 76 69 63 65 20 45 6e     Camera Device En
     1a1:	75 6d 65 72 61 74 65 64 2e 0d 0a 00                 umerated....

000001ad <__c.4422>:
     1ad:	45 72 72 6f 72 20 53 65 74 74 69 6e 67 20 44 65     Error Setting De
     1bd:	76 69 63 65 20 43 6f 6e 66 69 67 75 72 61 74 69     vice Configurati
     1cd:	6f 6e 2e 0d 0a 00                                   on....

000001d3 <__c.4420>:
     1d3:	41 74 74 61 63 68 65 64 20 44 65 76 69 63 65 20     Attached Device 
     1e3:	4e 6f 74 20 61 20 56 61 6c 69 64 20 53 74 69 6c     Not a Valid Stil
     1f3:	6c 20 49 6d 61 67 65 20 43 6c 61 73 73 20 44 65     l Image Class De
     203:	76 69 63 65 2e 0d 0a 00                             vice....

0000020b <__c.4418>:
     20b:	45 72 72 6f 72 20 52 65 74 72 69 65 76 69 6e 67     Error Retrieving
     21b:	20 43 6f 6e 66 69 67 75 72 61 74 69 6f 6e 20 44      Configuration D
     22b:	65 73 63 72 69 70 74 6f 72 2e 0d 0a 00              escriptor....

00000238 <__c.4411>:
     238:	0d 0a 44 65 76 69 63 65 20 55 6e 61 74 74 61 63     ..Device Unattac
     248:	68 65 64 2e 0d 0a 00                                hed....

0000024f <__c.4406>:
     24f:	44 65 76 69 63 65 20 41 74 74 61 63 68 65 64 2e     Device Attached.
     25f:	0d 0a 00                                            ...

00000262 <__c.4567>:
     262:	44 65 76 69 63 65 20 6e 6f 74 20 63 6f 6e 6e 65     Device not conne
     272:	63 74 65 64 2e 0d 0a 00                             cted....

0000027a <__c.4559>:
     27a:	44 65 76 69 63 65 20 6e 6f 74 20 63 6f 6e 6e 65     Device not conne
     28a:	63 74 65 64 2e 0d 0a 00                             cted....

00000292 <__c.4553>:
     292:	44 65 76 69 63 65 20 6e 6f 74 20 63 6f 6e 6e 65     Device not conne
     2a2:	63 74 65 64 2e 0d 0a 00                             cted....

000002aa <__c.4546>:
     2aa:	44 65 76 69 63 65 20 6e 6f 74 20 63 6f 6e 6e 65     Device not conne
     2ba:	63 74 65 64 2e 0d 0a 00                             cted....

000002c2 <__c.4531>:
     2c2:	55 6e 72 65 63 6f 67 6e 69 7a 65 64 20 65 72 72     Unrecognized err
     2d2:	6f 72 2e 0d 0a 00                                   or....

000002d8 <__c.4528>:
     2d8:	45 72 72 6f 72 20 63 6f 64 65 20 66 6f 72 20 73     Error code for s
     2e8:	6f 6d 65 20 53 74 69 6c 6c 20 49 6d 61 67 65 20     ome Still Image 
     2f8:	48 6f 73 74 20 66 75 6e 63 74 69 6f 6e 73 2c 20     Host functions, 
     308:	69 6e 64 69 63 61 74 69 6e 67 20 61 20 6c 6f 67     indicating a log
     318:	69 63 61 6c 20 28 61 6e 64 20 6e 6f 74 20 68 61     ical (and not ha
     328:	72 64 77 61 72 65 29 20 65 72 72 6f 72 2e 0d 0a     rdware) error...
     338:	00                                                  .

00000339 <__c.4525>:
     339:	49 6e 64 69 63 61 74 65 73 20 74 68 61 74 20 74     Indicates that t
     349:	68 65 20 70 69 70 65 20 62 61 6e 6b 20 62 65 63     he pipe bank bec
     359:	61 6d 65 20 66 75 6c 6c 2f 65 6d 70 74 79 20 62     ame full/empty b
     369:	65 66 6f 72 65 20 74 68 65 20 63 6f 6d 70 6c 65     efore the comple
     379:	74 65 20 63 6f 6e 74 65 6e 74 73 20 6f 66 20 74     te contents of t
     389:	68 65 20 73 74 72 65 61 6d 20 63 6f 75 6c 64 20     he stream could 
     399:	62 65 20 74 72 61 6e 73 66 65 72 72 65 64 2e 0d     be transferred..
     3a9:	0a 00                                               ..

000003ab <__c.4522>:
     3ab:	54 68 65 20 64 65 76 69 63 65 20 66 61 69 6c 65     The device faile
     3bb:	64 20 74 6f 20 61 63 63 65 70 74 20 6f 72 20 73     d to accept or s
     3cb:	65 6e 64 20 74 68 65 20 6e 65 78 74 20 70 61 63     end the next pac
     3db:	6b 65 74 20 77 69 74 68 69 6e 20 74 68 65 20 73     ket within the s
     3eb:	6f 66 74 77 61 72 65 20 74 69 6d 65 6f 75 74 20     oftware timeout 
     3fb:	70 65 72 69 6f 64 20 73 65 74 20 62 79 20 74 68     period set by th
     40b:	65 20 55 53 42 5f 53 54 52 45 41 4d 5f 54 49 4d     e USB_STREAM_TIM
     41b:	45 4f 55 54 5f 4d 53 20 6d 61 63 72 6f 2e 0d 0a     EOUT_MS macro...
     42b:	00                                                  .

0000042c <__c.4519>:
     42c:	44 65 76 69 63 65 20 77 61 73 20 64 69 73 63 6f     Device was disco
     43c:	6e 6e 65 63 74 65 64 20 66 72 6f 6d 20 74 68 65     nnected from the
     44c:	20 68 6f 73 74 20 64 75 72 69 6e 67 20 74 68 65      host during the
     45c:	20 74 72 61 6e 73 66 65 72 2e 0d 0a 00               transfer....

00000469 <__c.4515>:
     469:	54 68 65 20 64 65 76 69 63 65 20 73 74 61 6c 6c     The device stall
     479:	65 64 20 74 68 65 20 70 69 70 65 20 64 75 72 69     ed the pipe duri
     489:	6e 67 20 74 68 65 20 74 72 61 6e 73 66 65 72 2e     ng the transfer.
     499:	0d 0a 00                                            ...

0000049c <__c.4512>:
     49c:	50 49 4d 41 20 45 72 72 6f 72 20 28 25 64 29 3a     PIMA Error (%d):
     4ac:	20 00                                                .

000004ae <__c.4507>:
     4ae:	1b 5b 33 31 6d 55 6e 64 65 66 69 6e 65 64 20 6f     .[31mUndefined o
     4be:	72 20 56 65 6e 64 6f 72 20 53 70 65 63 69 66 69     r Vendor Specifi
     4ce:	63 0d 0a 1b 5b 33 37 6d 00                          c...[37m.

000004d7 <__c.4504>:
     4d7:	1b 5b 33 31 6d 53 70 65 63 69 66 69 63 61 74 69     .[31mSpecificati
     4e7:	6f 6e 20 6f 66 20 44 65 73 74 69 6e 61 74 69 6f     on of Destinatio
     4f7:	6e 20 55 6e 73 75 70 70 6f 72 74 65 64 0d 0a 1b     n Unsupported...
     507:	5b 33 37 6d 00                                      [37m.

0000050c <__c.4501>:
     50c:	1b 5b 33 31 6d 54 72 61 6e 73 61 63 74 69 6f 6e     .[31mTransaction
     51c:	20 43 61 6e 63 65 6c 6c 65 64 0d 0a 1b 5b 33 37      Cancelled...[37
     52c:	6d 00                                               m.

0000052e <__c.4498>:
     52e:	1b 5b 33 31 6d 53 65 73 73 69 6f 6e 20 41 6c 72     .[31mSession Alr
     53e:	65 61 64 79 20 4f 70 65 6e 0d 0a 1b 5b 33 37 6d     eady Open...[37m
     54e:	00                                                  .

0000054f <__c.4495>:
     54f:	1b 5b 33 31 6d 49 6e 76 61 6c 69 64 20 50 61 72     .[31mInvalid Par
     55f:	61 6d 65 74 65 72 0d 0a 1b 5b 33 37 6d 00           ameter...[37m.

0000056d <__c.4492>:
     56d:	1b 5b 33 31 6d 49 6e 76 61 6c 69 64 20 44 65 76     .[31mInvalid Dev
     57d:	69 63 65 50 72 6f 70 20 56 61 6c 75 65 0d 0a 1b     iceProp Value...
     58d:	5b 33 37 6d 00                                      [37m.

00000592 <__c.4489>:
     592:	1b 5b 33 31 6d 49 6e 76 61 6c 69 64 20 44 65 76     .[31mInvalid Dev
     5a2:	69 63 65 50 72 6f 70 20 46 6f 72 6d 61 74 0d 0a     iceProp Format..
     5b2:	1b 5b 33 37 6d 00                                   .[37m.

000005b8 <__c.4486>:
     5b8:	1b 5b 33 31 6d 49 6e 76 61 6c 69 64 20 50 61 72     .[31mInvalid Par
     5c8:	65 6e 74 4f 62 6a 65 63 74 0d 0a 1b 5b 33 37 6d     entObject...[37m
     5d8:	00                                                  .

000005d9 <__c.4483>:
     5d9:	1b 5b 33 31 6d 44 65 76 69 63 65 20 42 75 73 79     .[31mDevice Busy
     5e9:	0d 0a 1b 5b 33 37 6d 00                             ...[37m.

000005f1 <__c.4480>:
     5f1:	1b 5b 33 31 6d 43 61 70 74 75 72 65 20 41 6c 72     .[31mCapture Alr
     601:	65 61 64 79 20 54 65 72 6d 69 6e 61 74 65 64 0d     eady Terminated.
     611:	0a 1b 5b 33 37 6d 00                                ..[37m.

00000618 <__c.4477>:
     618:	1b 5b 33 31 6d 55 6e 6b 6e 6f 77 6e 20 56 65 6e     .[31mUnknown Ven
     628:	64 6f 72 20 43 6f 64 65 0d 0a 1b 5b 33 37 6d 00     dor Code...[37m.

00000638 <__c.4474>:
     638:	1b 5b 33 31 6d 49 6e 76 61 6c 69 64 20 43 6f 64     .[31mInvalid Cod
     648:	65 20 46 6f 72 6d 61 74 0d 0a 1b 5b 33 37 6d 00     e Format...[37m.

00000658 <__c.4471>:
     658:	1b 5b 33 31 6d 4e 6f 20 56 61 6c 69 64 20 4f 62     .[31mNo Valid Ob
     668:	6a 65 63 74 49 6e 66 6f 0d 0a 1b 5b 33 37 6d 00     jectInfo...[37m.

00000678 <__c.4468>:
     678:	1b 5b 33 31 6d 53 70 65 63 69 66 69 63 61 74 69     .[31mSpecificati
     688:	6f 6e 20 42 79 20 46 6f 72 6d 61 74 20 55 6e 73     on By Format Uns
     698:	75 70 70 6f 72 74 65 64 0d 0a 1b 5b 33 37 6d 00     upported...[37m.

000006a8 <__c.4465>:
     6a8:	1b 5b 33 31 6d 53 74 6f 72 65 20 4e 6f 74 20 41     .[31mStore Not A
     6b8:	76 61 69 6c 61 62 6c 65 0d 0a 1b 5b 33 37 6d 00     vailable...[37m.

000006c8 <__c.4462>:
     6c8:	1b 5b 33 31 6d 50 61 72 74 69 61 6c 20 44 65 6c     .[31mPartial Del
     6d8:	65 74 69 6f 6e 0d 0a 1b 5b 33 37 6d 00              etion...[37m.

000006e5 <__c.4459>:
     6e5:	1b 5b 33 31 6d 53 65 6c 66 54 65 73 74 20 46 61     .[31mSelfTest Fa
     6f5:	69 6c 65 64 0d 0a 1b 5b 33 37 6d 00                 iled...[37m.

00000701 <__c.4456>:
     701:	1b 5b 33 31 6d 4e 6f 20 54 68 75 6d 62 6e 61 69     .[31mNo Thumbnai
     711:	6c 20 50 72 65 73 65 6e 74 0d 0a 1b 5b 33 37 6d     l Present...[37m
     721:	00                                                  .

00000722 <__c.4453>:
     722:	1b 5b 33 31 6d 41 63 63 65 73 73 20 44 65 6e 69     .[31mAccess Deni
     732:	65 64 0d 0a 1b 5b 33 37 6d 00                       ed...[37m.

0000073c <__c.4450>:
     73c:	1b 5b 33 31 6d 53 74 6f 72 65 20 52 65 61 64 2d     .[31mStore Read-
     74c:	4f 6e 6c 79 0d 0a 1b 5b 33 37 6d 00                 Only...[37m.

00000758 <__c.4447>:
     758:	1b 5b 33 31 6d 4f 62 6a 65 63 74 20 57 72 69 74     .[31mObject Writ
     768:	65 50 72 6f 74 65 63 74 65 64 0d 0a 1b 5b 33 37     eProtected...[37
     778:	6d 00                                               m.

0000077a <__c.4444>:
     77a:	1b 5b 33 31 6d 53 74 6f 72 65 20 46 75 6c 6c 0d     .[31mStore Full.
     78a:	0a 1b 5b 33 37 6d 00                                ..[37m.

00000791 <__c.4441>:
     791:	1b 5b 33 31 6d 49 6e 76 61 6c 69 64 20 4f 62 6a     .[31mInvalid Obj
     7a1:	65 63 74 46 6f 72 6d 61 74 43 6f 64 65 0d 0a 1b     ectFormatCode...
     7b1:	5b 33 37 6d 00                                      [37m.

000007b6 <__c.4438>:
     7b6:	1b 5b 33 31 6d 44 65 76 69 63 65 50 72 6f 70 20     .[31mDeviceProp 
     7c6:	4e 6f 74 20 53 75 70 70 6f 72 74 65 64 0d 0a 1b     Not Supported...
     7d6:	5b 33 37 6d 00                                      [37m.

000007db <__c.4435>:
     7db:	1b 5b 33 31 6d 49 6e 76 61 6c 69 64 20 4f 62 6a     .[31mInvalid Obj
     7eb:	65 63 74 48 61 6e 64 6c 65 0d 0a 1b 5b 33 37 6d     ectHandle...[37m
     7fb:	00                                                  .

000007fc <__c.4432>:
     7fc:	1b 5b 33 31 6d 49 6e 76 61 6c 69 64 20 53 74 6f     .[31mInvalid Sto
     80c:	72 61 67 65 49 44 0d 0a 1b 5b 33 37 6d 00           rageID...[37m.

0000081a <__c.4429>:
     81a:	1b 5b 33 31 6d 49 6e 63 6f 6d 70 6c 65 74 65 20     .[31mIncomplete 
     82a:	54 72 61 6e 73 66 65 72 0d 0a 1b 5b 33 37 6d 00     Transfer...[37m.

0000083a <__c.4426>:
     83a:	1b 5b 33 31 6d 50 61 72 61 6d 65 74 65 72 20 4e     .[31mParameter N
     84a:	6f 74 20 53 75 70 70 6f 72 74 65 64 0d 0a 1b 5b     ot Supported...[
     85a:	33 37 6d 00                                         37m.

0000085e <__c.4423>:
     85e:	1b 5b 33 31 6d 4f 70 65 72 61 74 69 6f 6e 20 4e     .[31mOperation N
     86e:	6f 74 20 53 75 70 70 6f 72 74 65 64 0d 0a 1b 5b     ot Supported...[
     87e:	33 37 6d 00                                         37m.

00000882 <__c.4420>:
     882:	1b 5b 33 31 6d 49 6e 76 61 6c 69 64 20 54 72 61     .[31mInvalid Tra
     892:	6e 73 61 63 74 69 6f 6e 49 44 0d 0a 1b 5b 33 37     nsactionID...[37
     8a2:	6d 00                                               m.

000008a4 <__c.4417>:
     8a4:	1b 5b 33 31 6d 53 65 73 73 69 6f 6e 20 4e 6f 74     .[31mSession Not
     8b4:	20 4f 70 65 6e 0d 0a 1b 5b 33 37 6d 00               Open...[37m.

000008c1 <__c.4414>:
     8c1:	1b 5b 33 31 6d 47 65 6e 65 72 61 6c 20 45 72 72     .[31mGeneral Err
     8d1:	6f 72 0d 0a 1b 5b 33 37 6d 00                       or...[37m.

000008db <__c.4410>:
     8db:	1b 5b 33 36 6d 4f 4b 0d 0a 1b 5b 33 37 6d 00        .[36mOK...[37m.

000008ea <__c.4407>:
     8ea:	1b 5b 33 31 6d 09 09 5b 30 78 25 30 34 78 5d 20     .[31m..[0x%04x] 
     8fa:	1b 5b 33 37 6d 00                                   .[37m.

00000900 <__c.4405>:
     900:	1b 5b 33 36 6d 09 09 5b 30 78 25 30 34 78 5d 20     .[36m..[0x%04x] 
     910:	1b 5b 33 37 6d 00                                   .[37m.

00000916 <__c.4597>:
     916:	53 65 72 69 61 6c 20 4e 75 6d 2e 3a 09 25 73 0d     Serial Num.:.%s.
     926:	0a 00                                               ..

00000928 <__c.4595>:
     928:	44 65 76 69 63 65 20 76 65 72 2e 3a 09 25 73 0d     Device ver.:.%s.
     938:	0a 00                                               ..

0000093a <__c.4593>:
     93a:	4d 6f 64 65 6c 3a 09 09 25 73 0d 0a 00              Model:..%s...

00000947 <__c.4591>:
     947:	0d 0a 4d 61 6e 75 66 61 63 74 75 72 65 72 3a 09     ..Manufacturer:.
     957:	25 73 0d 0a 00                                      %s...

0000095c <__c.4586>:
     95c:	09 28 2d 29 20 30 78 25 30 34 78 0d 0a 00           .(-) 0x%04x...

0000096a <__c.4584>:
     96a:	0d 0a 49 6d 61 67 65 20 46 6f 72 6d 61 74 73 3a     ..Image Formats:
     97a:	0d 0a 00                                            ...

0000097d <__c.4577>:
     97d:	09 28 2d 29 20 30 78 25 30 34 78 0d 0a 00           .(-) 0x%04x...

0000098b <__c.4575>:
     98b:	0d 0a 43 61 70 74 75 72 65 20 66 6f 72 6d 61 74     ..Capture format
     99b:	73 3a 0d 0a 00                                      s:...

000009a0 <__c.4568>:
     9a0:	09 28 2d 29 20 30 78 25 30 34 78 0d 0a 00           .(-) 0x%04x...

000009ae <__c.4566>:
     9ae:	0d 0a 44 65 76 69 63 65 20 70 72 6f 70 65 72 74     ..Device propert
     9be:	69 65 73 20 73 75 70 70 6f 72 74 65 64 3a 0d 0a     ies supported:..
     9ce:	00                                                  .

000009cf <__c.4559>:
     9cf:	09 28 2d 29 20 30 78 25 30 34 78 0d 0a 00           .(-) 0x%04x...

000009dd <__c.4557>:
     9dd:	0d 0a 45 76 65 6e 74 73 20 73 75 70 70 6f 72 74     ..Events support
     9ed:	65 64 3a 0d 0a 00                                   ed:...

000009f3 <__c.4550>:
     9f3:	09 28 2d 29 20 30 78 25 30 34 78 0d 0a 00           .(-) 0x%04x...

00000a01 <__c.4548>:
     a01:	0d 0a 4f 70 65 72 61 74 69 6f 6e 73 20 73 75 70     ..Operations sup
     a11:	70 6f 72 74 65 64 3a 0d 0a 00                       ported:...

00000a1b <__c.4544>:
     a1b:	46 75 6e 63 2e 4d 6f 64 65 3a 09 25 64 0d 0a 00     Func.Mode:.%d...

00000a2b <__c.4542>:
     a2b:	0d 0a 56 65 6e 64 2e 45 78 74 2e 44 65 73 63 2e     ..Vend.Ext.Desc.
     a3b:	3a 09 25 73 0d 0a 00                                :.%s...

00000a42 <__c.4540>:
     a42:	56 65 6e 64 2e 45 78 74 2e 56 65 72 2e 3a 09 25     Vend.Ext.Ver.:.%
     a52:	64 0d 0a 00                                         d...

00000a56 <__c.4538>:
     a56:	56 65 6e 64 2e 45 78 74 2e 49 44 2e 3a 09 25 64     Vend.Ext.ID.:.%d
     a66:	0d 0a 00                                            ...

00000a69 <__c.4536>:
     a69:	53 74 64 2e 56 65 72 2e 3a 09 25 64 0d 0a 00        Std.Ver.:.%d...

00000a78 <__c.4534>:
     a78:	45 72 72 6f 72 20 72 65 61 64 69 6e 67 20 64 65     Error reading de
     a88:	76 69 63 65 20 69 6e 66 6f 0d 0a 00                 vice info...

00000a94 <__c.4532>:
     a94:	44 65 76 69 63 65 20 6e 6f 74 20 63 6f 6e 6e 65     Device not conne
     aa4:	63 74 65 64 2e 0d 0a 00                             cted....

00000aac <__c.4524>:
     aac:	1b 5b 33 36 6d 09 47 6f 74 20 64 65 76 69 63 65     .[36m.Got device
     abc:	20 69 6e 66 6f 20 6f 66 20 25 64 20 62 79 74 65      info of %d byte
     acc:	73 2e 0d 0a 1b 5b 33 37 6d 00                       s....[37m.

00000ad6 <__c.4520>:
     ad6:	44 65 76 69 63 65 20 6e 6f 74 20 63 6f 6e 6e 65     Device not conne
     ae6:	63 74 65 64 2e 0d 0a 00                             cted....

00000aee <__c.4492>:
     aee:	09 28 2d 29 20 30 78 25 30 34 78 0d 0a 00           .(-) 0x%04x...

00000afc <__c.4490>:
     afc:	09 25 64 20 76 61 6c 75 65 73 20 61 72 72 61 79     .%d values array
     b0c:	0d 0a 00                                            ...

00000b0f <__c.4452>:
     b0f:	25 63 00                                            %c.

00000b12 <__c.4450>:
     b12:	28 6c 65 6e 2e 25 64 29 00                          (len.%d).

00000b1b <__c.4490>:
     b1b:	09 56 6f 6c 75 6d 65 20 6c 61 62 65 6c 3a 20 27     .Volume label: '
     b2b:	25 73 27 0d 0a 00                                   %s'...

00000b31 <__c.4488>:
     b31:	09 53 74 6f 72 61 67 65 20 64 65 73 63 72 69 70     .Storage descrip
     b41:	74 69 6f 6e 3a 20 27 25 73 27 0d 0a 00              tion: '%s'...

00000b4e <__c.4486>:
     b4e:	09 46 72 65 65 20 73 70 61 63 65 20 66 6f 72 20     .Free space for 
     b5e:	69 6d 61 67 65 73 3a 20 30 78 25 58 0d 0a 00        images: 0x%X...

00000b6d <__c.4484>:
     b6d:	09 46 72 65 65 20 73 70 61 63 65 3a 20 30 78 25     .Free space: 0x%
     b7d:	58 0d 0a 00                                         X...

00000b81 <__c.4482>:
     b81:	09 4d 61 78 20 63 61 70 61 63 69 74 79 3a 20 30     .Max capacity: 0
     b91:	78 25 58 0d 0a 00                                   x%X...

00000b97 <__c.4480>:
     b97:	09 41 63 63 65 73 73 20 63 61 70 61 62 69 6c 69     .Access capabili
     ba7:	74 79 3a 20 30 78 25 58 0d 0a 00                    ty: 0x%X...

00000bb2 <__c.4478>:
     bb2:	09 46 69 6c 65 2d 73 79 73 74 65 6d 20 74 79 70     .File-system typ
     bc2:	65 3a 20 30 78 25 58 0d 0a 00                       e: 0x%X...

00000bcc <__c.4476>:
     bcc:	09 53 74 6f 72 61 67 65 20 74 79 70 65 3a 20 30     .Storage type: 0
     bdc:	78 25 58 0d 0a 00                                   x%X...

00000be2 <__c.4474>:
     be2:	52 65 74 72 69 65 76 69 6e 67 20 73 74 6f 72 61     Retrieving stora
     bf2:	67 65 20 69 6e 64 65 78 20 25 64 20 28 49 44 3d     ge index %d (ID=
     c02:	30 78 25 58 29 0d 0a 00                             0x%X)...

00000c0a <__c.4472>:
     c0a:	44 65 76 69 63 65 20 6e 6f 74 20 63 6f 6e 6e 65     Device not conne
     c1a:	63 74 65 64 2e 0d 0a 00                             cted....

00000c22 <__c.4457>:
     c22:	1b 5b 33 36 6d 09 47 6f 74 20 73 74 6f 72 61 67     .[36m.Got storag
     c32:	65 20 69 6e 66 6f 20 6f 66 20 25 64 20 62 79 74     e info of %d byt
     c42:	65 73 2e 0d 0a 1b 5b 33 37 6d 00                    es....[37m.

00000c4d <__c.4453>:
     c4d:	45 72 72 6f 72 20 67 65 74 74 69 6e 67 20 73 74     Error getting st
     c5d:	6f 72 61 67 65 20 69 6e 66 6f 20 2d 20 73 74 6f     orage info - sto
     c6d:	72 61 67 65 20 69 6e 64 65 78 20 25 64 20 69 73     rage index %d is
     c7d:	20 62 69 67 67 65 72 20 74 68 65 6e 20 6e 75 6d      bigger then num
     c8d:	20 6f 66 20 73 74 6f 72 61 67 65 73 20 25 64 2e      of storages %d.
     c9d:	0d 0a 00                                            ...

00000ca0 <__c.4451>:
     ca0:	44 65 76 69 63 65 20 6e 6f 74 20 63 6f 6e 6e 65     Device not conne
     cb0:	63 74 65 64 2e 0d 0a 00                             cted....

00000cb8 <__c.4435>:
     cb8:	1b 5b 33 36 6d 09 47 6f 74 20 73 74 6f 72 61 67     .[36m.Got storag
     cc8:	65 20 49 44 73 20 6f 66 20 25 64 20 62 79 74 65     e IDs of %d byte
     cd8:	73 2e 0d 0a 1b 5b 33 37 6d 00                       s....[37m.

00000ce2 <__c.4431>:
     ce2:	44 65 76 69 63 65 20 6e 6f 74 20 63 6f 6e 6e 65     Device not conne
     cf2:	63 74 65 64 2e 0d 0a 00                             cted....

00000cfa <__c.4440>:
     cfa:	25 30 32 78 20 00                                   %02x .

00000d00 <__c.4436>:
     d00:	1b 5b 33 36 6d 09 47 6f 74 20 70 72 6f 70 65 72     .[36m.Got proper
     d10:	74 79 20 69 6e 66 6f 20 6f 66 20 25 64 20 62 79     ty info of %d by
     d20:	74 65 73 2e 0d 0a 1b 5b 33 37 6d 00                 tes....[37m.

00000d2c <__c.4431>:
     d2c:	44 65 76 69 63 65 20 6e 6f 74 20 63 6f 6e 6e 65     Device not conne
     d3c:	63 74 65 64 2e 0d 0a 00                             cted....

00000d44 <__c.4419>:
     d44:	0d 0a 53 74 6f 72 61 67 65 20 6e 6f 74 20 66 6f     ..Storage not fo
     d54:	75 6e 64 2e 20 52 75 6e 20 67 65 74 5f 73 74 6f     und. Run get_sto
     d64:	72 61 67 65 5f 69 6e 66 6f 2e 2e 2e 00              rage_info....

00000d71 <__c.4415>:
     d71:	44 65 76 69 63 65 20 6e 6f 74 20 63 6f 6e 6e 65     Device not conne
     d81:	63 74 65 64 2e 0d 0a 00                             cted....

00000d89 <__c.4464>:
     d89:	45 56 45 4e 54 20 5b 4e 49 4b 4f 4e 5d 3a 20 43     EVENT [NIKON]: C
     d99:	61 70 74 75 72 65 20 6f 76 65 72 66 6c 6f 77 20     apture overflow 
     da9:	49 44 3a 20 30 78 25 78 2e 0d 0a 00                 ID: 0x%x....

00000db5 <__c.4461>:
     db5:	45 56 45 4e 54 20 5b 4e 49 4b 4f 4e 5d 3a 20 4f     EVENT [NIKON]: O
     dc5:	62 6a 65 63 74 20 72 65 61 64 79 20 49 44 3a 20     bject ready ID: 
     dd5:	30 78 25 78 2e 0d 0a 00                             0x%x....

00000ddd <__c.4454>:
     ddd:	45 56 45 4e 54 3a 20 43 61 70 74 75 72 65 20 63     EVENT: Capture c
     ded:	6f 6d 70 6c 65 74 65 20 54 72 61 6e 73 49 44 3a     omplete TransID:
     dfd:	20 30 78 25 78 2e 0d 0a 00                           0x%x....

00000e06 <__c.4451>:
     e06:	45 56 45 4e 54 3a 20 53 74 6f 72 61 67 65 20 69     EVENT: Storage i
     e16:	6e 66 6f 20 63 68 61 6e 67 65 64 20 49 44 3a 20     nfo changed ID: 
     e26:	30 78 25 78 2e 0d 0a 00                             0x%x....

00000e2e <__c.4447>:
     e2e:	45 56 45 4e 54 3a 20 53 74 6f 72 61 67 65 20 66     EVENT: Storage f
     e3e:	75 6c 6c 20 49 44 3a 20 30 78 25 78 2e 0d 0a 00     ull ID: 0x%x....

00000e4e <__c.4443>:
     e4e:	45 56 45 4e 54 3a 20 44 65 76 20 69 6e 66 6f 20     EVENT: Dev info 
     e5e:	63 68 61 6e 67 65 64 2e 0d 0a 00                    changed....

00000e69 <__c.4440>:
     e69:	45 56 45 4e 54 3a 20 4f 62 6a 65 63 74 20 69 6e     EVENT: Object in
     e79:	66 6f 20 63 68 61 6e 67 65 64 20 49 44 3a 20 30     fo changed ID: 0
     e89:	78 25 78 2e 0d 0a 00                                x%x....

00000e90 <__c.4437>:
     e90:	45 56 45 4e 54 3a 20 50 72 6f 70 65 72 74 79 20     EVENT: Property 
     ea0:	63 68 61 6e 67 65 64 20 43 4f 44 45 3a 20 30 78     changed CODE: 0x
     eb0:	25 78 2e 0d 0a 00                                   %x....

00000eb6 <__c.4434>:
     eb6:	45 56 45 4e 54 3a 20 4f 62 6a 65 63 74 20 72 65     EVENT: Object re
     ec6:	6d 6f 76 65 64 20 49 44 3a 20 30 78 25 78 2e 0d     moved ID: 0x%x..
     ed6:	0a 00                                               ..

00000ed8 <__c.4431>:
     ed8:	45 56 45 4e 54 3a 20 53 74 6f 72 61 67 65 20 61     EVENT: Storage a
     ee8:	64 64 65 64 20 49 44 3a 20 30 78 25 78 2e 0d 0a     dded ID: 0x%x...
     ef8:	00                                                  .

00000ef9 <__c.4428>:
     ef9:	45 56 45 4e 54 3a 20 4f 62 6a 65 63 74 20 72 65     EVENT: Object re
     f09:	6d 6f 76 65 64 20 49 44 3a 20 30 78 25 78 2e 0d     moved ID: 0x%x..
     f19:	0a 00                                               ..

00000f1b <__c.4425>:
     f1b:	45 56 45 4e 54 3a 20 4f 62 6a 65 63 74 20 61 64     EVENT: Object ad
     f2b:	64 65 64 20 49 44 3a 20 30 78 25 78 2e 0d 0a 00     ded ID: 0x%x....

00000f3b <__c.4422>:
     f3b:	45 56 45 4e 54 3a 20 43 61 6e 63 65 6c 20 74 72     EVENT: Cancel tr
     f4b:	61 6e 73 61 63 74 69 6f 6e 2e 0d 0a 00              ansaction....

00000f58 <__c.4419>:
     f58:	45 56 45 4e 54 3a 20 55 6e 64 65 66 69 6e 65 64     EVENT: Undefined
     f68:	2e 0d 0a 00                                         ....

00000f6c <__c.4414>:
     f6c:	0d 0a 4e 65 77 20 65 76 65 6e 74 3a 00              ..New event:.

00000f79 <__c.2050>:
     f79:	63 64 69 6e 6f 70 73 75 78 58 5b 00 00              cdinopsuxX[..

00000f86 <__ctors_end>:
     f86:	11 24       	eor	r1, r1
     f88:	1f be       	out	0x3f, r1	; 63
     f8a:	cf ef       	ldi	r28, 0xFF	; 255
     f8c:	d0 e2       	ldi	r29, 0x20	; 32
     f8e:	de bf       	out	0x3e, r29	; 62
     f90:	cd bf       	out	0x3d, r28	; 61

00000f92 <__do_copy_data>:
     f92:	12 e0       	ldi	r17, 0x02	; 2
     f94:	a0 e0       	ldi	r26, 0x00	; 0
     f96:	b1 e0       	ldi	r27, 0x01	; 1
     f98:	e0 ee       	ldi	r30, 0xE0	; 224
     f9a:	f1 e5       	ldi	r31, 0x51	; 81
     f9c:	00 e0       	ldi	r16, 0x00	; 0
     f9e:	0b bf       	out	0x3b, r16	; 59
     fa0:	02 c0       	rjmp	.+4      	; 0xfa6 <__do_copy_data+0x14>
     fa2:	07 90       	elpm	r0, Z+
     fa4:	0d 92       	st	X+, r0
     fa6:	aa 34       	cpi	r26, 0x4A	; 74
     fa8:	b1 07       	cpc	r27, r17
     faa:	d9 f7       	brne	.-10     	; 0xfa2 <__do_copy_data+0x10>

00000fac <__do_clear_bss>:
     fac:	15 e0       	ldi	r17, 0x05	; 5
     fae:	aa e4       	ldi	r26, 0x4A	; 74
     fb0:	b2 e0       	ldi	r27, 0x02	; 2
     fb2:	01 c0       	rjmp	.+2      	; 0xfb6 <.do_clear_bss_start>

00000fb4 <.do_clear_bss_loop>:
     fb4:	1d 92       	st	X+, r1

00000fb6 <.do_clear_bss_start>:
     fb6:	a3 30       	cpi	r26, 0x03	; 3
     fb8:	b1 07       	cpc	r27, r17
     fba:	e1 f7       	brne	.-8      	; 0xfb4 <.do_clear_bss_loop>
     fbc:	2e d1       	rcall	.+604    	; 0x121a <main>
     fbe:	0c 94 ee 28 	jmp	0x51dc	; 0x51dc <_exit>

00000fc2 <__bad_interrupt>:
     fc2:	1e c8       	rjmp	.-4036   	; 0x0 <__vectors>

00000fc4 <__lshrdi3>:
     fc4:	0f 93       	push	r16
     fc6:	df 93       	push	r29
     fc8:	cf 93       	push	r28
     fca:	cd b7       	in	r28, 0x3d	; 61
     fcc:	de b7       	in	r29, 0x3e	; 62
     fce:	60 97       	sbiw	r28, 0x10	; 16
     fd0:	0f b6       	in	r0, 0x3f	; 63
     fd2:	f8 94       	cli
     fd4:	de bf       	out	0x3e, r29	; 62
     fd6:	0f be       	out	0x3f, r0	; 63
     fd8:	cd bf       	out	0x3d, r28	; 61
     fda:	00 23       	and	r16, r16
     fdc:	09 f4       	brne	.+2      	; 0xfe0 <__lshrdi3+0x1c>
     fde:	59 c0       	rjmp	.+178    	; 0x1092 <__lshrdi3+0xce>
     fe0:	29 83       	std	Y+1, r18	; 0x01
     fe2:	3a 83       	std	Y+2, r19	; 0x02
     fe4:	4b 83       	std	Y+3, r20	; 0x03
     fe6:	5c 83       	std	Y+4, r21	; 0x04
     fe8:	6d 83       	std	Y+5, r22	; 0x05
     fea:	7e 83       	std	Y+6, r23	; 0x06
     fec:	8f 83       	std	Y+7, r24	; 0x07
     fee:	98 87       	std	Y+8, r25	; 0x08
     ff0:	e0 e2       	ldi	r30, 0x20	; 32
     ff2:	e0 1b       	sub	r30, r16
     ff4:	2d 81       	ldd	r18, Y+5	; 0x05
     ff6:	3e 81       	ldd	r19, Y+6	; 0x06
     ff8:	4f 81       	ldd	r20, Y+7	; 0x07
     ffa:	58 85       	ldd	r21, Y+8	; 0x08
     ffc:	1e 16       	cp	r1, r30
     ffe:	bc f0       	brlt	.+46     	; 0x102e <__lshrdi3+0x6a>
    1000:	1d 86       	std	Y+13, r1	; 0x0d
    1002:	1e 86       	std	Y+14, r1	; 0x0e
    1004:	1f 86       	std	Y+15, r1	; 0x0f
    1006:	18 8a       	std	Y+16, r1	; 0x10
    1008:	8e 2f       	mov	r24, r30
    100a:	99 27       	eor	r25, r25
    100c:	87 fd       	sbrc	r24, 7
    100e:	90 95       	com	r25
    1010:	90 95       	com	r25
    1012:	81 95       	neg	r24
    1014:	9f 4f       	sbci	r25, 0xFF	; 255
    1016:	04 c0       	rjmp	.+8      	; 0x1020 <__lshrdi3+0x5c>
    1018:	56 95       	lsr	r21
    101a:	47 95       	ror	r20
    101c:	37 95       	ror	r19
    101e:	27 95       	ror	r18
    1020:	8a 95       	dec	r24
    1022:	d2 f7       	brpl	.-12     	; 0x1018 <__lshrdi3+0x54>
    1024:	29 87       	std	Y+9, r18	; 0x09
    1026:	3a 87       	std	Y+10, r19	; 0x0a
    1028:	4b 87       	std	Y+11, r20	; 0x0b
    102a:	5c 87       	std	Y+12, r21	; 0x0c
    102c:	2a c0       	rjmp	.+84     	; 0x1082 <__lshrdi3+0xbe>
    102e:	ca 01       	movw	r24, r20
    1030:	b9 01       	movw	r22, r18
    1032:	00 2e       	mov	r0, r16
    1034:	04 c0       	rjmp	.+8      	; 0x103e <__lshrdi3+0x7a>
    1036:	96 95       	lsr	r25
    1038:	87 95       	ror	r24
    103a:	77 95       	ror	r23
    103c:	67 95       	ror	r22
    103e:	0a 94       	dec	r0
    1040:	d2 f7       	brpl	.-12     	; 0x1036 <__lshrdi3+0x72>
    1042:	6d 87       	std	Y+13, r22	; 0x0d
    1044:	7e 87       	std	Y+14, r23	; 0x0e
    1046:	8f 87       	std	Y+15, r24	; 0x0f
    1048:	98 8b       	std	Y+16, r25	; 0x10
    104a:	da 01       	movw	r26, r20
    104c:	c9 01       	movw	r24, r18
    104e:	04 c0       	rjmp	.+8      	; 0x1058 <__lshrdi3+0x94>
    1050:	88 0f       	add	r24, r24
    1052:	99 1f       	adc	r25, r25
    1054:	aa 1f       	adc	r26, r26
    1056:	bb 1f       	adc	r27, r27
    1058:	ea 95       	dec	r30
    105a:	d2 f7       	brpl	.-12     	; 0x1050 <__lshrdi3+0x8c>
    105c:	29 81       	ldd	r18, Y+1	; 0x01
    105e:	3a 81       	ldd	r19, Y+2	; 0x02
    1060:	4b 81       	ldd	r20, Y+3	; 0x03
    1062:	5c 81       	ldd	r21, Y+4	; 0x04
    1064:	04 c0       	rjmp	.+8      	; 0x106e <__lshrdi3+0xaa>
    1066:	56 95       	lsr	r21
    1068:	47 95       	ror	r20
    106a:	37 95       	ror	r19
    106c:	27 95       	ror	r18
    106e:	0a 95       	dec	r16
    1070:	d2 f7       	brpl	.-12     	; 0x1066 <__lshrdi3+0xa2>
    1072:	82 2b       	or	r24, r18
    1074:	93 2b       	or	r25, r19
    1076:	a4 2b       	or	r26, r20
    1078:	b5 2b       	or	r27, r21
    107a:	89 87       	std	Y+9, r24	; 0x09
    107c:	9a 87       	std	Y+10, r25	; 0x0a
    107e:	ab 87       	std	Y+11, r26	; 0x0b
    1080:	bc 87       	std	Y+12, r27	; 0x0c
    1082:	29 85       	ldd	r18, Y+9	; 0x09
    1084:	3a 85       	ldd	r19, Y+10	; 0x0a
    1086:	4b 85       	ldd	r20, Y+11	; 0x0b
    1088:	5c 85       	ldd	r21, Y+12	; 0x0c
    108a:	6d 85       	ldd	r22, Y+13	; 0x0d
    108c:	7e 85       	ldd	r23, Y+14	; 0x0e
    108e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1090:	98 89       	ldd	r25, Y+16	; 0x10
    1092:	60 96       	adiw	r28, 0x10	; 16
    1094:	0f b6       	in	r0, 0x3f	; 63
    1096:	f8 94       	cli
    1098:	de bf       	out	0x3e, r29	; 62
    109a:	0f be       	out	0x3f, r0	; 63
    109c:	cd bf       	out	0x3d, r28	; 61
    109e:	cf 91       	pop	r28
    10a0:	df 91       	pop	r29
    10a2:	0f 91       	pop	r16
    10a4:	08 95       	ret

000010a6 <__ashldi3>:
    10a6:	0f 93       	push	r16
    10a8:	df 93       	push	r29
    10aa:	cf 93       	push	r28
    10ac:	cd b7       	in	r28, 0x3d	; 61
    10ae:	de b7       	in	r29, 0x3e	; 62
    10b0:	60 97       	sbiw	r28, 0x10	; 16
    10b2:	0f b6       	in	r0, 0x3f	; 63
    10b4:	f8 94       	cli
    10b6:	de bf       	out	0x3e, r29	; 62
    10b8:	0f be       	out	0x3f, r0	; 63
    10ba:	cd bf       	out	0x3d, r28	; 61
    10bc:	00 23       	and	r16, r16
    10be:	09 f4       	brne	.+2      	; 0x10c2 <__ashldi3+0x1c>
    10c0:	59 c0       	rjmp	.+178    	; 0x1174 <__ashldi3+0xce>
    10c2:	29 83       	std	Y+1, r18	; 0x01
    10c4:	3a 83       	std	Y+2, r19	; 0x02
    10c6:	4b 83       	std	Y+3, r20	; 0x03
    10c8:	5c 83       	std	Y+4, r21	; 0x04
    10ca:	6d 83       	std	Y+5, r22	; 0x05
    10cc:	7e 83       	std	Y+6, r23	; 0x06
    10ce:	8f 83       	std	Y+7, r24	; 0x07
    10d0:	98 87       	std	Y+8, r25	; 0x08
    10d2:	e0 e2       	ldi	r30, 0x20	; 32
    10d4:	e0 1b       	sub	r30, r16
    10d6:	29 81       	ldd	r18, Y+1	; 0x01
    10d8:	3a 81       	ldd	r19, Y+2	; 0x02
    10da:	4b 81       	ldd	r20, Y+3	; 0x03
    10dc:	5c 81       	ldd	r21, Y+4	; 0x04
    10de:	1e 16       	cp	r1, r30
    10e0:	bc f0       	brlt	.+46     	; 0x1110 <__ashldi3+0x6a>
    10e2:	19 86       	std	Y+9, r1	; 0x09
    10e4:	1a 86       	std	Y+10, r1	; 0x0a
    10e6:	1b 86       	std	Y+11, r1	; 0x0b
    10e8:	1c 86       	std	Y+12, r1	; 0x0c
    10ea:	8e 2f       	mov	r24, r30
    10ec:	99 27       	eor	r25, r25
    10ee:	87 fd       	sbrc	r24, 7
    10f0:	90 95       	com	r25
    10f2:	90 95       	com	r25
    10f4:	81 95       	neg	r24
    10f6:	9f 4f       	sbci	r25, 0xFF	; 255
    10f8:	04 c0       	rjmp	.+8      	; 0x1102 <__ashldi3+0x5c>
    10fa:	22 0f       	add	r18, r18
    10fc:	33 1f       	adc	r19, r19
    10fe:	44 1f       	adc	r20, r20
    1100:	55 1f       	adc	r21, r21
    1102:	8a 95       	dec	r24
    1104:	d2 f7       	brpl	.-12     	; 0x10fa <__ashldi3+0x54>
    1106:	2d 87       	std	Y+13, r18	; 0x0d
    1108:	3e 87       	std	Y+14, r19	; 0x0e
    110a:	4f 87       	std	Y+15, r20	; 0x0f
    110c:	58 8b       	std	Y+16, r21	; 0x10
    110e:	2a c0       	rjmp	.+84     	; 0x1164 <__ashldi3+0xbe>
    1110:	ca 01       	movw	r24, r20
    1112:	b9 01       	movw	r22, r18
    1114:	00 2e       	mov	r0, r16
    1116:	04 c0       	rjmp	.+8      	; 0x1120 <__ashldi3+0x7a>
    1118:	66 0f       	add	r22, r22
    111a:	77 1f       	adc	r23, r23
    111c:	88 1f       	adc	r24, r24
    111e:	99 1f       	adc	r25, r25
    1120:	0a 94       	dec	r0
    1122:	d2 f7       	brpl	.-12     	; 0x1118 <__ashldi3+0x72>
    1124:	69 87       	std	Y+9, r22	; 0x09
    1126:	7a 87       	std	Y+10, r23	; 0x0a
    1128:	8b 87       	std	Y+11, r24	; 0x0b
    112a:	9c 87       	std	Y+12, r25	; 0x0c
    112c:	da 01       	movw	r26, r20
    112e:	c9 01       	movw	r24, r18
    1130:	04 c0       	rjmp	.+8      	; 0x113a <__ashldi3+0x94>
    1132:	b6 95       	lsr	r27
    1134:	a7 95       	ror	r26
    1136:	97 95       	ror	r25
    1138:	87 95       	ror	r24
    113a:	ea 95       	dec	r30
    113c:	d2 f7       	brpl	.-12     	; 0x1132 <__ashldi3+0x8c>
    113e:	2d 81       	ldd	r18, Y+5	; 0x05
    1140:	3e 81       	ldd	r19, Y+6	; 0x06
    1142:	4f 81       	ldd	r20, Y+7	; 0x07
    1144:	58 85       	ldd	r21, Y+8	; 0x08
    1146:	04 c0       	rjmp	.+8      	; 0x1150 <__ashldi3+0xaa>
    1148:	22 0f       	add	r18, r18
    114a:	33 1f       	adc	r19, r19
    114c:	44 1f       	adc	r20, r20
    114e:	55 1f       	adc	r21, r21
    1150:	0a 95       	dec	r16
    1152:	d2 f7       	brpl	.-12     	; 0x1148 <__ashldi3+0xa2>
    1154:	82 2b       	or	r24, r18
    1156:	93 2b       	or	r25, r19
    1158:	a4 2b       	or	r26, r20
    115a:	b5 2b       	or	r27, r21
    115c:	8d 87       	std	Y+13, r24	; 0x0d
    115e:	9e 87       	std	Y+14, r25	; 0x0e
    1160:	af 87       	std	Y+15, r26	; 0x0f
    1162:	b8 8b       	std	Y+16, r27	; 0x10
    1164:	29 85       	ldd	r18, Y+9	; 0x09
    1166:	3a 85       	ldd	r19, Y+10	; 0x0a
    1168:	4b 85       	ldd	r20, Y+11	; 0x0b
    116a:	5c 85       	ldd	r21, Y+12	; 0x0c
    116c:	6d 85       	ldd	r22, Y+13	; 0x0d
    116e:	7e 85       	ldd	r23, Y+14	; 0x0e
    1170:	8f 85       	ldd	r24, Y+15	; 0x0f
    1172:	98 89       	ldd	r25, Y+16	; 0x10
    1174:	60 96       	adiw	r28, 0x10	; 16
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	cf 91       	pop	r28
    1182:	df 91       	pop	r29
    1184:	0f 91       	pop	r16
    1186:	08 95       	ret

00001188 <Stabily_SetupHardware>:
/*********************************************************************************************************************
 *  Configures the board hardware and chip peripherals for the demo's functionality. */
void Stabily_SetupHardware(void)
{
	/* Disable watchdog if enabled by bootloader/fuses */
	MCUSR &= ~(1 << WDRF);
    1188:	84 b7       	in	r24, 0x34	; 52
    118a:	87 7f       	andi	r24, 0xF7	; 247
    118c:	84 bf       	out	0x34, r24	; 52
	wdt_disable();
    118e:	28 e1       	ldi	r18, 0x18	; 24
    1190:	0f b6       	in	r0, 0x3f	; 63
    1192:	f8 94       	cli
    1194:	20 93 60 00 	sts	0x0060, r18
    1198:	10 92 60 00 	sts	0x0060, r1
    119c:	0f be       	out	0x3f, r0	; 63
The type of x is clock_div_t.
*/
void clock_prescale_set(clock_div_t __x)
{
    uint8_t __tmp = _BV(CLKPCE);
    __asm__ __volatile__ (
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	80 e8       	ldi	r24, 0x80	; 128
    11a2:	0f b6       	in	r0, 0x3f	; 63
    11a4:	f8 94       	cli
    11a6:	80 93 61 00 	sts	0x0061, r24
    11aa:	90 93 61 00 	sts	0x0061, r25
    11ae:	0f be       	out	0x3f, r0	; 63
			 *  \param[in] DoubleSpeed  Enables double speed mode when set, halving the sample time to double the baud rate.
			 */
			static inline void Serial_Init(const uint32_t BaudRate,
			                               const bool DoubleSpeed)
			{
				UBRR1  = (DoubleSpeed ? SERIAL_2X_UBBRVAL(BaudRate) : SERIAL_UBBRVAL(BaudRate));
    11b0:	87 e6       	ldi	r24, 0x67	; 103
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	90 93 cd 00 	sts	0x00CD, r25
    11b8:	80 93 cc 00 	sts	0x00CC, r24

				UCSR1C = ((1 << UCSZ11) | (1 << UCSZ10));
    11bc:	86 e0       	ldi	r24, 0x06	; 6
    11be:	80 93 ca 00 	sts	0x00CA, r24
				UCSR1A = (DoubleSpeed ? (1 << U2X1) : 0);
    11c2:	10 92 c8 00 	sts	0x00C8, r1
				UCSR1B = ((1 << TXEN1)  | (1 << RXEN1));
    11c6:	20 93 c9 00 	sts	0x00C9, r18

				DDRD  |= (1 << 3);
    11ca:	53 9a       	sbi	0x0a, 3	; 10
				PORTD |= (1 << 2);
    11cc:	5a 9a       	sbi	0x0b, 2	; 11

		/* Inline Functions: */
		#if !defined(__DOXYGEN__)
			static inline void LEDs_Init(void)
			{
				DDRD  |=  LEDS_ALL_LEDS;
    11ce:	8a b1       	in	r24, 0x0a	; 10
    11d0:	80 6f       	ori	r24, 0xF0	; 240
    11d2:	8a b9       	out	0x0a, r24	; 10
				PORTD &= ~LEDS_ALL_LEDS;
    11d4:	8b b1       	in	r24, 0x0b	; 11
    11d6:	8f 70       	andi	r24, 0x0F	; 15
    11d8:	8b b9       	out	0x0b, r24	; 11
	clock_prescale_set(clock_div_1);

	/* Hardware Initialization */
	Serial_Init(9600, false);
	LEDs_Init();
	USB_Init();
    11da:	31 d3       	rcall	.+1634   	; 0x183e <USB_Init>
			static inline void Serial_CreateStream(FILE* Stream)
			{
				if (!(Stream))
				{
					Stream = &USARTSerialStream;
					stdin  = Stream;
    11dc:	e7 ef       	ldi	r30, 0xF7	; 247
    11de:	f3 e0       	ldi	r31, 0x03	; 3
    11e0:	f0 93 fe 04 	sts	0x04FE, r31
    11e4:	e0 93 fd 04 	sts	0x04FD, r30
					stdout = Stream;
    11e8:	f0 93 00 05 	sts	0x0500, r31
    11ec:	e0 93 ff 04 	sts	0x04FF, r30
				}
			
				*Stream = (FILE)FDEV_SETUP_STREAM(Serial_putchar, Serial_getchar, _FDEV_SETUP_RW);
    11f0:	8e e0       	ldi	r24, 0x0E	; 14
    11f2:	df 01       	movw	r26, r30
    11f4:	1d 92       	st	X+, r1
    11f6:	8a 95       	dec	r24
    11f8:	e9 f7       	brne	.-6      	; 0x11f4 <Stabily_SetupHardware+0x6c>
    11fa:	83 e0       	ldi	r24, 0x03	; 3
    11fc:	80 93 fa 03 	sts	0x03FA, r24
    1200:	80 ee       	ldi	r24, 0xE0	; 224
    1202:	91 e1       	ldi	r25, 0x11	; 17
    1204:	90 93 00 04 	sts	0x0400, r25
    1208:	80 93 ff 03 	sts	0x03FF, r24
    120c:	89 ee       	ldi	r24, 0xE9	; 233
    120e:	91 e1       	ldi	r25, 0x11	; 17
    1210:	90 93 02 04 	sts	0x0402, r25
    1214:	80 93 01 04 	sts	0x0401, r24

	/* Create a stdio stream for the serial port for stdin and stdout */
	Serial_CreateStream(NULL);
}
    1218:	08 95       	ret

0000121a <main>:
 *  Main program entry point. This routine configures the hardware required by the application, then
 *  enters a loop to run the application tasks in sequence.
 */
int main(void)
{
	Stabily_SetupHardware();
    121a:	b6 df       	rcall	.-148    	; 0x1188 <Stabily_SetupHardware>
	puts_P(PSTR(ESC_FG_CYAN "Stabily v1.0 running.\r\n" ESC_FG_WHITE));
    121c:	88 ed       	ldi	r24, 0xD8	; 216
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	0e 94 e7 22 	call	0x45ce	; 0x45ce <puts_P>
	sei();
    1224:	78 94       	sei

	for (;;)
	{
		Stabily_ShellRX ( );
    1226:	0e 94 7f 21 	call	0x42fe	; 0x42fe <Stabily_ShellRX>

		CameraControl_DeviceEvents_PollEvents(&DigitalCamera_SI_Interface);
    122a:	80 e0       	ldi	r24, 0x00	; 0
    122c:	91 e0       	ldi	r25, 0x01	; 1
    122e:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <CameraControl_DeviceEvents_PollEvents>
		SI_Host_USBTask(&DigitalCamera_SI_Interface);
		USB_USBTask();
    1232:	73 d6       	rcall	.+3302   	; 0x1f1a <USB_USBTask>
    1234:	f8 cf       	rjmp	.-16     	; 0x1226 <main+0xc>

00001236 <USB_Host_ResetDevice>:
    1236:	80 91 9e 00 	lds	r24, 0x009E
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	81 70       	andi	r24, 0x01	; 1
    123e:	90 70       	andi	r25, 0x00	; 0
    1240:	20 91 a0 00 	lds	r18, 0x00A0
    1244:	2d 7f       	andi	r18, 0xFD	; 253
    1246:	20 93 a0 00 	sts	0x00A0, r18
    124a:	20 91 9e 00 	lds	r18, 0x009E
    124e:	22 60       	ori	r18, 0x02	; 2
    1250:	20 93 9e 00 	sts	0x009E, r18
    1254:	20 91 9e 00 	lds	r18, 0x009E
    1258:	21 fd       	sbrc	r18, 1
    125a:	fc cf       	rjmp	.-8      	; 0x1254 <USB_Host_ResetDevice+0x1e>
    125c:	20 91 9e 00 	lds	r18, 0x009E
    1260:	21 60       	ori	r18, 0x01	; 1
    1262:	20 93 9e 00 	sts	0x009E, r18
    1266:	10 92 ec 03 	sts	0x03EC, r1
    126a:	20 91 a0 00 	lds	r18, 0x00A0
    126e:	30 e0       	ldi	r19, 0x00	; 0
    1270:	20 72       	andi	r18, 0x20	; 32
    1272:	30 70       	andi	r19, 0x00	; 0
    1274:	40 91 a0 00 	lds	r20, 0x00A0
    1278:	4f 7d       	andi	r20, 0xDF	; 223
    127a:	40 93 a0 00 	sts	0x00A0, r20
    127e:	40 91 9f 00 	lds	r20, 0x009F
    1282:	4f 7d       	andi	r20, 0xDF	; 223
    1284:	40 93 9f 00 	sts	0x009F, r20
    1288:	4a e0       	ldi	r20, 0x0A	; 10
    128a:	50 91 9f 00 	lds	r21, 0x009F
    128e:	55 ff       	sbrs	r21, 5
    1290:	0b c0       	rjmp	.+22     	; 0x12a8 <USB_Host_ResetDevice+0x72>
    1292:	40 91 9f 00 	lds	r20, 0x009F
    1296:	4f 7d       	andi	r20, 0xDF	; 223
    1298:	40 93 9f 00 	sts	0x009F, r20
    129c:	40 91 9f 00 	lds	r20, 0x009F
    12a0:	4d 7f       	andi	r20, 0xFD	; 253
    12a2:	40 93 9f 00 	sts	0x009F, r20
    12a6:	08 c0       	rjmp	.+16     	; 0x12b8 <USB_Host_ResetDevice+0x82>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    12a8:	ef e9       	ldi	r30, 0x9F	; 159
    12aa:	ff e0       	ldi	r31, 0x0F	; 15
    12ac:	31 97       	sbiw	r30, 0x01	; 1
    12ae:	f1 f7       	brne	.-4      	; 0x12ac <USB_Host_ResetDevice+0x76>
    12b0:	00 c0       	rjmp	.+0      	; 0x12b2 <USB_Host_ResetDevice+0x7c>
    12b2:	00 00       	nop
    12b4:	41 50       	subi	r20, 0x01	; 1
    12b6:	49 f7       	brne	.-46     	; 0x128a <USB_Host_ResetDevice+0x54>
    12b8:	21 15       	cp	r18, r1
    12ba:	31 05       	cpc	r19, r1
    12bc:	29 f0       	breq	.+10     	; 0x12c8 <USB_Host_ResetDevice+0x92>
    12be:	20 91 a0 00 	lds	r18, 0x00A0
    12c2:	20 62       	ori	r18, 0x20	; 32
    12c4:	20 93 a0 00 	sts	0x00A0, r18
    12c8:	00 97       	sbiw	r24, 0x00	; 0
    12ca:	29 f4       	brne	.+10     	; 0x12d6 <USB_Host_ResetDevice+0xa0>
    12cc:	80 91 9e 00 	lds	r24, 0x009E
    12d0:	8e 7f       	andi	r24, 0xFE	; 254
    12d2:	80 93 9e 00 	sts	0x009E, r24
    12d6:	80 91 a0 00 	lds	r24, 0x00A0
    12da:	82 60       	ori	r24, 0x02	; 2
    12dc:	80 93 a0 00 	sts	0x00A0, r24
    12e0:	08 95       	ret

000012e2 <USB_Host_WaitMS>:
    12e2:	40 91 9e 00 	lds	r20, 0x009E
    12e6:	50 e0       	ldi	r21, 0x00	; 0
    12e8:	41 70       	andi	r20, 0x01	; 1
    12ea:	50 70       	andi	r21, 0x00	; 0
    12ec:	20 91 a0 00 	lds	r18, 0x00A0
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	20 72       	andi	r18, 0x20	; 32
    12f4:	30 70       	andi	r19, 0x00	; 0
    12f6:	90 91 a0 00 	lds	r25, 0x00A0
    12fa:	9f 7d       	andi	r25, 0xDF	; 223
    12fc:	90 93 a0 00 	sts	0x00A0, r25
    1300:	90 91 9f 00 	lds	r25, 0x009F
    1304:	9f 7d       	andi	r25, 0xDF	; 223
    1306:	90 93 9f 00 	sts	0x009F, r25
    130a:	90 91 9e 00 	lds	r25, 0x009E
    130e:	91 60       	ori	r25, 0x01	; 1
    1310:	90 93 9e 00 	sts	0x009E, r25
    1314:	26 c0       	rjmp	.+76     	; 0x1362 <USB_Host_WaitMS+0x80>
    1316:	90 91 9f 00 	lds	r25, 0x009F
    131a:	95 ff       	sbrs	r25, 5
    131c:	06 c0       	rjmp	.+12     	; 0x132a <USB_Host_WaitMS+0x48>
    131e:	90 91 9f 00 	lds	r25, 0x009F
    1322:	9f 7d       	andi	r25, 0xDF	; 223
    1324:	90 93 9f 00 	sts	0x009F, r25
    1328:	81 50       	subi	r24, 0x01	; 1
    132a:	90 91 f6 03 	lds	r25, 0x03F6
    132e:	91 30       	cpi	r25, 0x01	; 1
    1330:	d9 f0       	breq	.+54     	; 0x1368 <USB_Host_WaitMS+0x86>
    1332:	90 91 a6 00 	lds	r25, 0x00A6
    1336:	94 ff       	sbrs	r25, 4
    1338:	09 c0       	rjmp	.+18     	; 0x134c <USB_Host_WaitMS+0x6a>
    133a:	10 92 f5 00 	sts	0x00F5, r1
    133e:	80 91 a6 00 	lds	r24, 0x00A6
    1342:	8f 7e       	andi	r24, 0xEF	; 239
    1344:	80 93 a6 00 	sts	0x00A6, r24
    1348:	82 e0       	ldi	r24, 0x02	; 2
    134a:	0f c0       	rjmp	.+30     	; 0x136a <USB_Host_WaitMS+0x88>
    134c:	90 91 a6 00 	lds	r25, 0x00A6
    1350:	91 ff       	sbrs	r25, 1
    1352:	07 c0       	rjmp	.+14     	; 0x1362 <USB_Host_WaitMS+0x80>
    1354:	80 91 a6 00 	lds	r24, 0x00A6
    1358:	8d 7f       	andi	r24, 0xFD	; 253
    135a:	80 93 a6 00 	sts	0x00A6, r24
    135e:	83 e0       	ldi	r24, 0x03	; 3
    1360:	04 c0       	rjmp	.+8      	; 0x136a <USB_Host_WaitMS+0x88>
    1362:	88 23       	and	r24, r24
    1364:	c1 f6       	brne	.-80     	; 0x1316 <USB_Host_WaitMS+0x34>
    1366:	01 c0       	rjmp	.+2      	; 0x136a <USB_Host_WaitMS+0x88>
    1368:	81 e0       	ldi	r24, 0x01	; 1
    136a:	41 15       	cp	r20, r1
    136c:	51 05       	cpc	r21, r1
    136e:	29 f4       	brne	.+10     	; 0x137a <USB_Host_WaitMS+0x98>
    1370:	90 91 9e 00 	lds	r25, 0x009E
    1374:	9e 7f       	andi	r25, 0xFE	; 254
    1376:	90 93 9e 00 	sts	0x009E, r25
    137a:	21 15       	cp	r18, r1
    137c:	31 05       	cpc	r19, r1
    137e:	29 f0       	breq	.+10     	; 0x138a <USB_Host_WaitMS+0xa8>
    1380:	90 91 a0 00 	lds	r25, 0x00A0
    1384:	90 62       	ori	r25, 0x20	; 32
    1386:	90 93 a0 00 	sts	0x00A0, r25
    138a:	08 95       	ret

0000138c <USB_Host_ProcessNextHostState>:
    138c:	ef 92       	push	r14
    138e:	0f 93       	push	r16
    1390:	1f 93       	push	r17
    1392:	df 93       	push	r29
    1394:	cf 93       	push	r28
    1396:	cd b7       	in	r28, 0x3d	; 61
    1398:	de b7       	in	r29, 0x3e	; 62
    139a:	28 97       	sbiw	r28, 0x08	; 8
    139c:	0f b6       	in	r0, 0x3f	; 63
    139e:	f8 94       	cli
    13a0:	de bf       	out	0x3e, r29	; 62
    13a2:	0f be       	out	0x3f, r0	; 63
    13a4:	cd bf       	out	0x3d, r28	; 61
    13a6:	80 91 f6 03 	lds	r24, 0x03F6
    13aa:	85 30       	cpi	r24, 0x05	; 5
    13ac:	09 f4       	brne	.+2      	; 0x13b0 <USB_Host_ProcessNextHostState+0x24>
    13ae:	99 c0       	rjmp	.+306    	; 0x14e2 <USB_Host_ProcessNextHostState+0x156>
    13b0:	86 30       	cpi	r24, 0x06	; 6
    13b2:	68 f4       	brcc	.+26     	; 0x13ce <USB_Host_ProcessNextHostState+0x42>
    13b4:	82 30       	cpi	r24, 0x02	; 2
    13b6:	c1 f1       	breq	.+112    	; 0x1428 <USB_Host_ProcessNextHostState+0x9c>
    13b8:	83 30       	cpi	r24, 0x03	; 3
    13ba:	18 f4       	brcc	.+6      	; 0x13c2 <USB_Host_ProcessNextHostState+0x36>
    13bc:	88 23       	and	r24, r24
    13be:	a1 f0       	breq	.+40     	; 0x13e8 <USB_Host_ProcessNextHostState+0x5c>
    13c0:	08 c1       	rjmp	.+528    	; 0x15d2 <USB_Host_ProcessNextHostState+0x246>
    13c2:	83 30       	cpi	r24, 0x03	; 3
    13c4:	d9 f1       	breq	.+118    	; 0x143c <USB_Host_ProcessNextHostState+0xb0>
    13c6:	84 30       	cpi	r24, 0x04	; 4
    13c8:	09 f0       	breq	.+2      	; 0x13cc <USB_Host_ProcessNextHostState+0x40>
    13ca:	03 c1       	rjmp	.+518    	; 0x15d2 <USB_Host_ProcessNextHostState+0x246>
    13cc:	62 c0       	rjmp	.+196    	; 0x1492 <USB_Host_ProcessNextHostState+0x106>
    13ce:	87 30       	cpi	r24, 0x07	; 7
    13d0:	09 f4       	brne	.+2      	; 0x13d4 <USB_Host_ProcessNextHostState+0x48>
    13d2:	a0 c0       	rjmp	.+320    	; 0x1514 <USB_Host_ProcessNextHostState+0x188>
    13d4:	87 30       	cpi	r24, 0x07	; 7
    13d6:	08 f4       	brcc	.+2      	; 0x13da <USB_Host_ProcessNextHostState+0x4e>
    13d8:	8f c0       	rjmp	.+286    	; 0x14f8 <USB_Host_ProcessNextHostState+0x16c>
    13da:	88 30       	cpi	r24, 0x08	; 8
    13dc:	09 f4       	brne	.+2      	; 0x13e0 <USB_Host_ProcessNextHostState+0x54>
    13de:	b8 c0       	rjmp	.+368    	; 0x1550 <USB_Host_ProcessNextHostState+0x1c4>
    13e0:	89 30       	cpi	r24, 0x09	; 9
    13e2:	09 f0       	breq	.+2      	; 0x13e6 <USB_Host_ProcessNextHostState+0x5a>
    13e4:	f6 c0       	rjmp	.+492    	; 0x15d2 <USB_Host_ProcessNextHostState+0x246>
    13e6:	dc c0       	rjmp	.+440    	; 0x15a0 <USB_Host_ProcessNextHostState+0x214>
    13e8:	00 91 4b 02 	lds	r16, 0x024B
    13ec:	10 91 4c 02 	lds	r17, 0x024C
    13f0:	01 15       	cp	r16, r1
    13f2:	11 05       	cpc	r17, r1
    13f4:	09 f4       	brne	.+2      	; 0x13f8 <USB_Host_ProcessNextHostState+0x6c>
    13f6:	ed c0       	rjmp	.+474    	; 0x15d2 <USB_Host_ProcessNextHostState+0x246>
    13f8:	81 e0       	ldi	r24, 0x01	; 1
    13fa:	73 df       	rcall	.-282    	; 0x12e2 <USB_Host_WaitMS>
    13fc:	68 2f       	mov	r22, r24
    13fe:	88 23       	and	r24, r24
    1400:	31 f0       	breq	.+12     	; 0x140e <USB_Host_ProcessNextHostState+0x82>
    1402:	80 91 4a 02 	lds	r24, 0x024A
    1406:	80 93 f6 03 	sts	0x03F6, r24
    140a:	81 e0       	ldi	r24, 0x01	; 1
    140c:	de c0       	rjmp	.+444    	; 0x15ca <USB_Host_ProcessNextHostState+0x23e>
    140e:	01 50       	subi	r16, 0x01	; 1
    1410:	10 40       	sbci	r17, 0x00	; 0
    1412:	10 93 4c 02 	sts	0x024C, r17
    1416:	00 93 4b 02 	sts	0x024B, r16
    141a:	01 15       	cp	r16, r1
    141c:	11 05       	cpc	r17, r1
    141e:	09 f0       	breq	.+2      	; 0x1422 <USB_Host_ProcessNextHostState+0x96>
    1420:	d8 c0       	rjmp	.+432    	; 0x15d2 <USB_Host_ProcessNextHostState+0x246>
    1422:	80 91 4a 02 	lds	r24, 0x024A
    1426:	07 c0       	rjmp	.+14     	; 0x1436 <USB_Host_ProcessNextHostState+0xaa>
    1428:	88 ee       	ldi	r24, 0xE8	; 232
    142a:	93 e0       	ldi	r25, 0x03	; 3
    142c:	90 93 4c 02 	sts	0x024C, r25
    1430:	80 93 4b 02 	sts	0x024B, r24
    1434:	83 e0       	ldi	r24, 0x03	; 3
    1436:	80 93 f6 03 	sts	0x03F6, r24
    143a:	cb c0       	rjmp	.+406    	; 0x15d2 <USB_Host_ProcessNextHostState+0x246>
    143c:	80 91 4b 02 	lds	r24, 0x024B
    1440:	90 91 4c 02 	lds	r25, 0x024C
    1444:	9c 01       	movw	r18, r24
    1446:	21 50       	subi	r18, 0x01	; 1
    1448:	30 40       	sbci	r19, 0x00	; 0
    144a:	30 93 4c 02 	sts	0x024C, r19
    144e:	20 93 4b 02 	sts	0x024B, r18
    1452:	00 97       	sbiw	r24, 0x00	; 0
    1454:	39 f0       	breq	.+14     	; 0x1464 <USB_Host_ProcessNextHostState+0xd8>
    1456:	8f e9       	ldi	r24, 0x9F	; 159
    1458:	9f e0       	ldi	r25, 0x0F	; 15
    145a:	01 97       	sbiw	r24, 0x01	; 1
    145c:	f1 f7       	brne	.-4      	; 0x145a <USB_Host_ProcessNextHostState+0xce>
    145e:	00 c0       	rjmp	.+0      	; 0x1460 <USB_Host_ProcessNextHostState+0xd4>
    1460:	00 00       	nop
    1462:	b7 c0       	rjmp	.+366    	; 0x15d2 <USB_Host_ProcessNextHostState+0x246>
    1464:	77 98       	cbi	0x0e, 7	; 14
    1466:	80 91 d8 00 	lds	r24, 0x00D8
    146a:	80 61       	ori	r24, 0x10	; 16
    146c:	80 93 d8 00 	sts	0x00D8, r24
    1470:	80 91 dd 00 	lds	r24, 0x00DD
    1474:	8b 7f       	andi	r24, 0xFB	; 251
    1476:	80 93 dd 00 	sts	0x00DD, r24
    147a:	80 91 d7 00 	lds	r24, 0x00D7
    147e:	80 61       	ori	r24, 0x10	; 16
    1480:	80 93 d7 00 	sts	0x00D7, r24
    1484:	80 91 dd 00 	lds	r24, 0x00DD
    1488:	82 60       	ori	r24, 0x02	; 2
    148a:	80 93 dd 00 	sts	0x00DD, r24
    148e:	84 e0       	ldi	r24, 0x04	; 4
    1490:	d2 cf       	rjmp	.-92     	; 0x1436 <USB_Host_ProcessNextHostState+0xaa>
    1492:	80 91 9f 00 	lds	r24, 0x009F
    1496:	80 ff       	sbrs	r24, 0
    1498:	9c c0       	rjmp	.+312    	; 0x15d2 <USB_Host_ProcessNextHostState+0x246>
    149a:	80 91 9f 00 	lds	r24, 0x009F
    149e:	8e 7f       	andi	r24, 0xFE	; 254
    14a0:	80 93 9f 00 	sts	0x009F, r24
    14a4:	80 91 9f 00 	lds	r24, 0x009F
    14a8:	8d 7f       	andi	r24, 0xFD	; 253
    14aa:	80 93 9f 00 	sts	0x009F, r24
    14ae:	80 91 df 00 	lds	r24, 0x00DF
    14b2:	8d 7f       	andi	r24, 0xFD	; 253
    14b4:	80 93 df 00 	sts	0x00DF, r24
    14b8:	80 91 de 00 	lds	r24, 0x00DE
    14bc:	82 60       	ori	r24, 0x02	; 2
    14be:	80 93 de 00 	sts	0x00DE, r24
    14c2:	80 91 9e 00 	lds	r24, 0x009E
    14c6:	81 60       	ori	r24, 0x01	; 1
    14c8:	80 93 9e 00 	sts	0x009E, r24
    14cc:	eb d0       	rcall	.+470    	; 0x16a4 <Pipe_ClearPipes>
    14ce:	10 92 f6 03 	sts	0x03F6, r1
    14d2:	84 e6       	ldi	r24, 0x64	; 100
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	90 93 4c 02 	sts	0x024C, r25
    14da:	80 93 4b 02 	sts	0x024B, r24
    14de:	85 e0       	ldi	r24, 0x05	; 5
    14e0:	5c c0       	rjmp	.+184    	; 0x159a <USB_Host_ProcessNextHostState+0x20e>
    14e2:	a9 de       	rcall	.-686    	; 0x1236 <USB_Host_ResetDevice>
    14e4:	10 92 f6 03 	sts	0x03F6, r1
    14e8:	88 ec       	ldi	r24, 0xC8	; 200
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	90 93 4c 02 	sts	0x024C, r25
    14f0:	80 93 4b 02 	sts	0x024B, r24
    14f4:	86 e0       	ldi	r24, 0x06	; 6
    14f6:	51 c0       	rjmp	.+162    	; 0x159a <USB_Host_ProcessNextHostState+0x20e>
    14f8:	80 e0       	ldi	r24, 0x00	; 0
    14fa:	60 e0       	ldi	r22, 0x00	; 0
    14fc:	40 e0       	ldi	r20, 0x00	; 0
    14fe:	20 e0       	ldi	r18, 0x00	; 0
    1500:	00 e4       	ldi	r16, 0x40	; 64
    1502:	10 e0       	ldi	r17, 0x00	; 0
    1504:	ee 24       	eor	r14, r14
    1506:	71 d0       	rcall	.+226    	; 0x15ea <Pipe_ConfigurePipe>
    1508:	80 91 ac 00 	lds	r24, 0x00AC
    150c:	87 ff       	sbrs	r24, 7
    150e:	59 c0       	rjmp	.+178    	; 0x15c2 <USB_Host_ProcessNextHostState+0x236>
    1510:	87 e0       	ldi	r24, 0x07	; 7
    1512:	91 cf       	rjmp	.-222    	; 0x1436 <USB_Host_ProcessNextHostState+0xaa>
    1514:	ae ee       	ldi	r26, 0xEE	; 238
    1516:	b3 e0       	ldi	r27, 0x03	; 3
    1518:	eb e1       	ldi	r30, 0x1B	; 27
    151a:	f1 e0       	ldi	r31, 0x01	; 1
    151c:	88 e0       	ldi	r24, 0x08	; 8
    151e:	01 90       	ld	r0, Z+
    1520:	0d 92       	st	X+, r0
    1522:	81 50       	subi	r24, 0x01	; 1
    1524:	e1 f7       	brne	.-8      	; 0x151e <USB_Host_ProcessNextHostState+0x192>
    1526:	ce 01       	movw	r24, r28
    1528:	01 96       	adiw	r24, 0x01	; 1
    152a:	bc d3       	rcall	.+1912   	; 0x1ca4 <USB_Host_SendControlRequest>
    152c:	68 2f       	mov	r22, r24
    152e:	88 23       	and	r24, r24
    1530:	09 f0       	breq	.+2      	; 0x1534 <USB_Host_ProcessNextHostState+0x1a8>
    1532:	4a c0       	rjmp	.+148    	; 0x15c8 <USB_Host_ProcessNextHostState+0x23c>
    1534:	88 85       	ldd	r24, Y+8	; 0x08
    1536:	80 93 23 01 	sts	0x0123, r24
    153a:	7d de       	rcall	.-774    	; 0x1236 <USB_Host_ResetDevice>
    153c:	10 92 f6 03 	sts	0x03F6, r1
    1540:	88 ec       	ldi	r24, 0xC8	; 200
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	90 93 4c 02 	sts	0x024C, r25
    1548:	80 93 4b 02 	sts	0x024B, r24
    154c:	88 e0       	ldi	r24, 0x08	; 8
    154e:	25 c0       	rjmp	.+74     	; 0x159a <USB_Host_ProcessNextHostState+0x20e>
    1550:	00 91 23 01 	lds	r16, 0x0123
    1554:	80 e0       	ldi	r24, 0x00	; 0
    1556:	60 e0       	ldi	r22, 0x00	; 0
    1558:	40 e0       	ldi	r20, 0x00	; 0
    155a:	20 e0       	ldi	r18, 0x00	; 0
    155c:	10 e0       	ldi	r17, 0x00	; 0
    155e:	ee 24       	eor	r14, r14
    1560:	44 d0       	rcall	.+136    	; 0x15ea <Pipe_ConfigurePipe>
    1562:	80 91 ac 00 	lds	r24, 0x00AC
    1566:	87 ff       	sbrs	r24, 7
    1568:	2c c0       	rjmp	.+88     	; 0x15c2 <USB_Host_ProcessNextHostState+0x236>
    156a:	ae ee       	ldi	r26, 0xEE	; 238
    156c:	b3 e0       	ldi	r27, 0x03	; 3
    156e:	e3 e1       	ldi	r30, 0x13	; 19
    1570:	f1 e0       	ldi	r31, 0x01	; 1
    1572:	88 e0       	ldi	r24, 0x08	; 8
    1574:	01 90       	ld	r0, Z+
    1576:	0d 92       	st	X+, r0
    1578:	81 50       	subi	r24, 0x01	; 1
    157a:	e1 f7       	brne	.-8      	; 0x1574 <USB_Host_ProcessNextHostState+0x1e8>
    157c:	80 e0       	ldi	r24, 0x00	; 0
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	91 d3       	rcall	.+1826   	; 0x1ca4 <USB_Host_SendControlRequest>
    1582:	68 2f       	mov	r22, r24
    1584:	88 23       	and	r24, r24
    1586:	01 f5       	brne	.+64     	; 0x15c8 <USB_Host_ProcessNextHostState+0x23c>
    1588:	10 92 f6 03 	sts	0x03F6, r1
    158c:	84 e6       	ldi	r24, 0x64	; 100
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	90 93 4c 02 	sts	0x024C, r25
    1594:	80 93 4b 02 	sts	0x024B, r24
    1598:	89 e0       	ldi	r24, 0x09	; 9
    159a:	80 93 4a 02 	sts	0x024A, r24
    159e:	19 c0       	rjmp	.+50     	; 0x15d2 <USB_Host_ProcessNextHostState+0x246>
    15a0:	81 e0       	ldi	r24, 0x01	; 1
    15a2:	80 93 a1 00 	sts	0x00A1, r24
    15a6:	8a e0       	ldi	r24, 0x0A	; 10
    15a8:	80 93 f6 03 	sts	0x03F6, r24
    15ac:	37 d7       	rcall	.+3694   	; 0x241c <EVENT_USB_Host_DeviceEnumerationComplete>
    15ae:	11 c0       	rjmp	.+34     	; 0x15d2 <USB_Host_ProcessNextHostState+0x246>
    15b0:	a6 d7       	rcall	.+3916   	; 0x24fe <EVENT_USB_Host_DeviceEnumerationFailed>
    15b2:	80 91 dd 00 	lds	r24, 0x00DD
    15b6:	81 60       	ori	r24, 0x01	; 1
    15b8:	80 93 dd 00 	sts	0x00DD, r24
    15bc:	26 d7       	rcall	.+3660   	; 0x240a <EVENT_USB_Host_DeviceUnattached>
    15be:	ef d0       	rcall	.+478    	; 0x179e <USB_ResetInterface>
    15c0:	08 c0       	rjmp	.+16     	; 0x15d2 <USB_Host_ProcessNextHostState+0x246>
    15c2:	60 e0       	ldi	r22, 0x00	; 0
    15c4:	84 e0       	ldi	r24, 0x04	; 4
    15c6:	01 c0       	rjmp	.+2      	; 0x15ca <USB_Host_ProcessNextHostState+0x23e>
    15c8:	83 e0       	ldi	r24, 0x03	; 3
    15ca:	90 91 f6 03 	lds	r25, 0x03F6
    15ce:	91 30       	cpi	r25, 0x01	; 1
    15d0:	79 f7       	brne	.-34     	; 0x15b0 <USB_Host_ProcessNextHostState+0x224>
    15d2:	28 96       	adiw	r28, 0x08	; 8
    15d4:	0f b6       	in	r0, 0x3f	; 63
    15d6:	f8 94       	cli
    15d8:	de bf       	out	0x3e, r29	; 62
    15da:	0f be       	out	0x3f, r0	; 63
    15dc:	cd bf       	out	0x3d, r28	; 61
    15de:	cf 91       	pop	r28
    15e0:	df 91       	pop	r29
    15e2:	1f 91       	pop	r17
    15e4:	0f 91       	pop	r16
    15e6:	ef 90       	pop	r14
    15e8:	08 95       	ret

000015ea <Pipe_ConfigurePipe>:
    15ea:	ef 92       	push	r14
    15ec:	0f 93       	push	r16
    15ee:	1f 93       	push	r17
    15f0:	5e 2d       	mov	r21, r14
    15f2:	62 95       	swap	r22
    15f4:	66 0f       	add	r22, r22
    15f6:	66 0f       	add	r22, r22
    15f8:	60 7c       	andi	r22, 0xC0	; 192
    15fa:	64 2b       	or	r22, r20
    15fc:	2f 70       	andi	r18, 0x0F	; 15
    15fe:	62 2b       	or	r22, r18
    1600:	98 2f       	mov	r25, r24
    1602:	52 60       	ori	r21, 0x02	; 2
    1604:	43 c0       	rjmp	.+134    	; 0x168c <Pipe_ConfigurePipe+0xa2>
    1606:	90 93 a7 00 	sts	0x00A7, r25
    160a:	98 17       	cp	r25, r24
    160c:	a1 f4       	brne	.+40     	; 0x1636 <Pipe_ConfigurePipe+0x4c>
    160e:	28 e0       	ldi	r18, 0x08	; 8
    1610:	30 e0       	ldi	r19, 0x00	; 0
    1612:	40 e0       	ldi	r20, 0x00	; 0
    1614:	03 c0       	rjmp	.+6      	; 0x161c <Pipe_ConfigurePipe+0x32>
    1616:	4f 5f       	subi	r20, 0xFF	; 255
    1618:	22 0f       	add	r18, r18
    161a:	33 1f       	adc	r19, r19
    161c:	20 17       	cp	r18, r16
    161e:	31 07       	cpc	r19, r17
    1620:	10 f4       	brcc	.+4      	; 0x1626 <Pipe_ConfigurePipe+0x3c>
    1622:	45 30       	cpi	r20, 0x05	; 5
    1624:	c1 f7       	brne	.-16     	; 0x1616 <Pipe_ConfigurePipe+0x2c>
    1626:	24 2f       	mov	r18, r20
    1628:	22 95       	swap	r18
    162a:	20 7f       	andi	r18, 0xF0	; 240
    162c:	25 2b       	or	r18, r21
    162e:	e6 2f       	mov	r30, r22
    1630:	40 e0       	ldi	r20, 0x00	; 0
    1632:	70 e0       	ldi	r23, 0x00	; 0
    1634:	08 c0       	rjmp	.+16     	; 0x1646 <Pipe_ConfigurePipe+0x5c>
    1636:	e0 91 aa 00 	lds	r30, 0x00AA
    163a:	20 91 ab 00 	lds	r18, 0x00AB
    163e:	70 91 ad 00 	lds	r23, 0x00AD
    1642:	40 91 ae 00 	lds	r20, 0x00AE
    1646:	21 ff       	sbrs	r18, 1
    1648:	20 c0       	rjmp	.+64     	; 0x168a <Pipe_ConfigurePipe+0xa0>
    164a:	30 91 a9 00 	lds	r19, 0x00A9
    164e:	3e 7f       	andi	r19, 0xFE	; 254
    1650:	30 93 a9 00 	sts	0x00A9, r19
    1654:	30 91 ab 00 	lds	r19, 0x00AB
    1658:	3d 7f       	andi	r19, 0xFD	; 253
    165a:	30 93 ab 00 	sts	0x00AB, r19
    165e:	30 91 a9 00 	lds	r19, 0x00A9
    1662:	31 60       	ori	r19, 0x01	; 1
    1664:	30 93 a9 00 	sts	0x00A9, r19
    1668:	e0 93 aa 00 	sts	0x00AA, r30
    166c:	20 93 ab 00 	sts	0x00AB, r18
    1670:	70 93 ad 00 	sts	0x00AD, r23
    1674:	40 93 ae 00 	sts	0x00AE, r20
    1678:	20 91 a9 00 	lds	r18, 0x00A9
    167c:	20 62       	ori	r18, 0x20	; 32
    167e:	20 93 a9 00 	sts	0x00A9, r18
    1682:	20 91 ac 00 	lds	r18, 0x00AC
    1686:	27 ff       	sbrs	r18, 7
    1688:	08 c0       	rjmp	.+16     	; 0x169a <Pipe_ConfigurePipe+0xb0>
    168a:	9f 5f       	subi	r25, 0xFF	; 255
    168c:	97 30       	cpi	r25, 0x07	; 7
    168e:	08 f4       	brcc	.+2      	; 0x1692 <Pipe_ConfigurePipe+0xa8>
    1690:	ba cf       	rjmp	.-140    	; 0x1606 <Pipe_ConfigurePipe+0x1c>
    1692:	80 93 a7 00 	sts	0x00A7, r24
    1696:	81 e0       	ldi	r24, 0x01	; 1
    1698:	01 c0       	rjmp	.+2      	; 0x169c <Pipe_ConfigurePipe+0xb2>
    169a:	80 e0       	ldi	r24, 0x00	; 0
    169c:	1f 91       	pop	r17
    169e:	0f 91       	pop	r16
    16a0:	ef 90       	pop	r14
    16a2:	08 95       	ret

000016a4 <Pipe_ClearPipes>:
    16a4:	10 92 f8 00 	sts	0x00F8, r1
    16a8:	80 e0       	ldi	r24, 0x00	; 0
    16aa:	80 93 a7 00 	sts	0x00A7, r24
    16ae:	10 92 ae 00 	sts	0x00AE, r1
    16b2:	10 92 a6 00 	sts	0x00A6, r1
    16b6:	10 92 ab 00 	sts	0x00AB, r1
    16ba:	90 91 a9 00 	lds	r25, 0x00A9
    16be:	9e 7f       	andi	r25, 0xFE	; 254
    16c0:	90 93 a9 00 	sts	0x00A9, r25
    16c4:	8f 5f       	subi	r24, 0xFF	; 255
    16c6:	87 30       	cpi	r24, 0x07	; 7
    16c8:	81 f7       	brne	.-32     	; 0x16aa <Pipe_ClearPipes+0x6>
    16ca:	08 95       	ret

000016cc <Pipe_IsEndpointBound>:
    16cc:	40 91 a7 00 	lds	r20, 0x00A7
    16d0:	90 e0       	ldi	r25, 0x00	; 0
    16d2:	90 93 a7 00 	sts	0x00A7, r25
    16d6:	20 91 ac 00 	lds	r18, 0x00AC
    16da:	27 ff       	sbrs	r18, 7
    16dc:	0e c0       	rjmp	.+28     	; 0x16fa <Pipe_IsEndpointBound+0x2e>
    16de:	20 91 aa 00 	lds	r18, 0x00AA
    16e2:	2f 70       	andi	r18, 0x0F	; 15
    16e4:	30 91 aa 00 	lds	r19, 0x00AA
    16e8:	30 73       	andi	r19, 0x30	; 48
    16ea:	30 31       	cpi	r19, 0x10	; 16
    16ec:	11 f4       	brne	.+4      	; 0x16f2 <Pipe_IsEndpointBound+0x26>
    16ee:	30 e8       	ldi	r19, 0x80	; 128
    16f0:	01 c0       	rjmp	.+2      	; 0x16f4 <Pipe_IsEndpointBound+0x28>
    16f2:	30 e0       	ldi	r19, 0x00	; 0
    16f4:	23 2b       	or	r18, r19
    16f6:	28 17       	cp	r18, r24
    16f8:	49 f0       	breq	.+18     	; 0x170c <Pipe_IsEndpointBound+0x40>
    16fa:	9f 5f       	subi	r25, 0xFF	; 255
    16fc:	97 30       	cpi	r25, 0x07	; 7
    16fe:	49 f7       	brne	.-46     	; 0x16d2 <Pipe_IsEndpointBound+0x6>
    1700:	84 2f       	mov	r24, r20
    1702:	87 70       	andi	r24, 0x07	; 7
    1704:	80 93 a7 00 	sts	0x00A7, r24
    1708:	80 e0       	ldi	r24, 0x00	; 0
    170a:	08 95       	ret
    170c:	81 e0       	ldi	r24, 0x01	; 1
    170e:	08 95       	ret

00001710 <Pipe_WaitUntilReady>:
    1710:	80 91 a2 00 	lds	r24, 0x00A2
    1714:	90 91 a3 00 	lds	r25, 0x00A3
    1718:	44 e6       	ldi	r20, 0x64	; 100
    171a:	20 91 aa 00 	lds	r18, 0x00AA
    171e:	20 73       	andi	r18, 0x30	; 48
    1720:	20 31       	cpi	r18, 0x10	; 16
    1722:	29 f4       	brne	.+10     	; 0x172e <Pipe_WaitUntilReady+0x1e>
    1724:	20 91 a6 00 	lds	r18, 0x00A6
    1728:	20 ff       	sbrs	r18, 0
    172a:	05 c0       	rjmp	.+10     	; 0x1736 <Pipe_WaitUntilReady+0x26>
    172c:	18 c0       	rjmp	.+48     	; 0x175e <Pipe_WaitUntilReady+0x4e>
    172e:	20 91 a6 00 	lds	r18, 0x00A6
    1732:	22 fd       	sbrc	r18, 2
    1734:	14 c0       	rjmp	.+40     	; 0x175e <Pipe_WaitUntilReady+0x4e>
    1736:	20 91 a6 00 	lds	r18, 0x00A6
    173a:	21 fd       	sbrc	r18, 1
    173c:	12 c0       	rjmp	.+36     	; 0x1762 <Pipe_WaitUntilReady+0x52>
    173e:	20 91 f6 03 	lds	r18, 0x03F6
    1742:	21 30       	cpi	r18, 0x01	; 1
    1744:	81 f0       	breq	.+32     	; 0x1766 <Pipe_WaitUntilReady+0x56>
    1746:	20 91 a2 00 	lds	r18, 0x00A2
    174a:	30 91 a3 00 	lds	r19, 0x00A3
    174e:	28 17       	cp	r18, r24
    1750:	39 07       	cpc	r19, r25
    1752:	19 f3       	breq	.-58     	; 0x171a <Pipe_WaitUntilReady+0xa>
    1754:	44 23       	and	r20, r20
    1756:	49 f0       	breq	.+18     	; 0x176a <Pipe_WaitUntilReady+0x5a>
    1758:	41 50       	subi	r20, 0x01	; 1
    175a:	c9 01       	movw	r24, r18
    175c:	de cf       	rjmp	.-68     	; 0x171a <Pipe_WaitUntilReady+0xa>
    175e:	80 e0       	ldi	r24, 0x00	; 0
    1760:	08 95       	ret
    1762:	81 e0       	ldi	r24, 0x01	; 1
    1764:	08 95       	ret
    1766:	82 e0       	ldi	r24, 0x02	; 2
    1768:	08 95       	ret
    176a:	83 e0       	ldi	r24, 0x03	; 3
    176c:	08 95       	ret

0000176e <USB_Disable>:
    176e:	70 d0       	rcall	.+224    	; 0x1850 <USB_INT_DisableAllInterrupts>
    1770:	77 d0       	rcall	.+238    	; 0x1860 <USB_INT_ClearAllInterrupts>
    1772:	e0 ee       	ldi	r30, 0xE0	; 224
    1774:	f0 e0       	ldi	r31, 0x00	; 0
    1776:	80 81       	ld	r24, Z
    1778:	81 60       	ori	r24, 0x01	; 1
    177a:	80 83       	st	Z, r24
    177c:	e8 ed       	ldi	r30, 0xD8	; 216
    177e:	f0 e0       	ldi	r31, 0x00	; 0
    1780:	80 81       	ld	r24, Z
    1782:	8f 77       	andi	r24, 0x7F	; 127
    1784:	80 83       	st	Z, r24
    1786:	19 bc       	out	0x29, r1	; 41
    1788:	a7 ed       	ldi	r26, 0xD7	; 215
    178a:	b0 e0       	ldi	r27, 0x00	; 0
    178c:	8c 91       	ld	r24, X
    178e:	8e 7f       	andi	r24, 0xFE	; 254
    1790:	8c 93       	st	X, r24
    1792:	80 81       	ld	r24, Z
    1794:	8f 7e       	andi	r24, 0xEF	; 239
    1796:	80 83       	st	Z, r24
    1798:	10 92 ed 03 	sts	0x03ED, r1
    179c:	08 95       	ret

0000179e <USB_ResetInterface>:
    179e:	58 d0       	rcall	.+176    	; 0x1850 <USB_INT_DisableAllInterrupts>
    17a0:	5f d0       	rcall	.+190    	; 0x1860 <USB_INT_ClearAllInterrupts>
    17a2:	80 91 d8 00 	lds	r24, 0x00D8
    17a6:	8f 77       	andi	r24, 0x7F	; 127
    17a8:	80 93 d8 00 	sts	0x00D8, r24
    17ac:	80 91 d8 00 	lds	r24, 0x00D8
    17b0:	80 68       	ori	r24, 0x80	; 128
    17b2:	80 93 d8 00 	sts	0x00D8, r24
    17b6:	80 91 d8 00 	lds	r24, 0x00D8
    17ba:	8f 7d       	andi	r24, 0xDF	; 223
    17bc:	80 93 d8 00 	sts	0x00D8, r24
    17c0:	80 91 d7 00 	lds	r24, 0x00D7
    17c4:	8f 77       	andi	r24, 0x7F	; 127
    17c6:	80 93 d7 00 	sts	0x00D7, r24
    17ca:	84 e1       	ldi	r24, 0x14	; 20
    17cc:	89 bd       	out	0x29, r24	; 41
    17ce:	86 e1       	ldi	r24, 0x16	; 22
    17d0:	89 bd       	out	0x29, r24	; 41
    17d2:	09 b4       	in	r0, 0x29	; 41
    17d4:	00 fe       	sbrs	r0, 0
    17d6:	fd cf       	rjmp	.-6      	; 0x17d2 <USB_ResetInterface+0x34>
    17d8:	81 e0       	ldi	r24, 0x01	; 1
    17da:	80 93 f6 03 	sts	0x03F6, r24
    17de:	10 92 ec 03 	sts	0x03EC, r1
    17e2:	80 e4       	ldi	r24, 0x40	; 64
    17e4:	80 93 23 01 	sts	0x0123, r24
    17e8:	80 91 d8 00 	lds	r24, 0x00D8
    17ec:	80 64       	ori	r24, 0x40	; 64
    17ee:	80 93 d8 00 	sts	0x00D8, r24
    17f2:	80 91 dd 00 	lds	r24, 0x00DD
    17f6:	81 60       	ori	r24, 0x01	; 1
    17f8:	80 93 dd 00 	sts	0x00DD, r24
    17fc:	80 91 dd 00 	lds	r24, 0x00DD
    1800:	84 60       	ori	r24, 0x04	; 4
    1802:	80 93 dd 00 	sts	0x00DD, r24
    1806:	80 91 d7 00 	lds	r24, 0x00D7
    180a:	8f 7e       	andi	r24, 0xEF	; 239
    180c:	80 93 d7 00 	sts	0x00D7, r24
    1810:	6f 9a       	sbi	0x0d, 7	; 13
    1812:	77 9a       	sbi	0x0e, 7	; 14
    1814:	80 91 de 00 	lds	r24, 0x00DE
    1818:	81 60       	ori	r24, 0x01	; 1
    181a:	80 93 de 00 	sts	0x00DE, r24
    181e:	80 91 de 00 	lds	r24, 0x00DE
    1822:	84 60       	ori	r24, 0x04	; 4
    1824:	80 93 de 00 	sts	0x00DE, r24
    1828:	80 91 e0 00 	lds	r24, 0x00E0
    182c:	8e 7f       	andi	r24, 0xFE	; 254
    182e:	80 93 e0 00 	sts	0x00E0, r24
    1832:	80 91 d8 00 	lds	r24, 0x00D8
    1836:	80 61       	ori	r24, 0x10	; 16
    1838:	80 93 d8 00 	sts	0x00D8, r24
    183c:	08 95       	ret

0000183e <USB_Init>:
    183e:	e7 ed       	ldi	r30, 0xD7	; 215
    1840:	f0 e0       	ldi	r31, 0x00	; 0
    1842:	80 81       	ld	r24, Z
    1844:	81 60       	ori	r24, 0x01	; 1
    1846:	80 83       	st	Z, r24
    1848:	81 e0       	ldi	r24, 0x01	; 1
    184a:	80 93 ed 03 	sts	0x03ED, r24
    184e:	a7 cf       	rjmp	.-178    	; 0x179e <USB_ResetInterface>

00001850 <USB_INT_DisableAllInterrupts>:
    1850:	e8 ed       	ldi	r30, 0xD8	; 216
    1852:	f0 e0       	ldi	r31, 0x00	; 0
    1854:	80 81       	ld	r24, Z
    1856:	8c 7f       	andi	r24, 0xFC	; 252
    1858:	80 83       	st	Z, r24
    185a:	10 92 a0 00 	sts	0x00A0, r1
    185e:	08 95       	ret

00001860 <USB_INT_ClearAllInterrupts>:
    1860:	10 92 da 00 	sts	0x00DA, r1
    1864:	10 92 9f 00 	sts	0x009F, r1
    1868:	08 95       	ret

0000186a <__vector_10>:
    186a:	1f 92       	push	r1
    186c:	0f 92       	push	r0
    186e:	0f b6       	in	r0, 0x3f	; 63
    1870:	0f 92       	push	r0
    1872:	0b b6       	in	r0, 0x3b	; 59
    1874:	0f 92       	push	r0
    1876:	11 24       	eor	r1, r1
    1878:	2f 93       	push	r18
    187a:	3f 93       	push	r19
    187c:	4f 93       	push	r20
    187e:	5f 93       	push	r21
    1880:	6f 93       	push	r22
    1882:	7f 93       	push	r23
    1884:	8f 93       	push	r24
    1886:	9f 93       	push	r25
    1888:	af 93       	push	r26
    188a:	bf 93       	push	r27
    188c:	ef 93       	push	r30
    188e:	ff 93       	push	r31
    1890:	80 91 9f 00 	lds	r24, 0x009F
    1894:	85 ff       	sbrs	r24, 5
    1896:	0a c0       	rjmp	.+20     	; 0x18ac <__vector_10+0x42>
    1898:	80 91 a0 00 	lds	r24, 0x00A0
    189c:	85 ff       	sbrs	r24, 5
    189e:	06 c0       	rjmp	.+12     	; 0x18ac <__vector_10+0x42>
    18a0:	80 91 9f 00 	lds	r24, 0x009F
    18a4:	8f 7d       	andi	r24, 0xDF	; 223
    18a6:	80 93 9f 00 	sts	0x009F, r24
    18aa:	d2 d1       	rcall	.+932    	; 0x1c50 <USB_Event_Stub>
    18ac:	80 91 9f 00 	lds	r24, 0x009F
    18b0:	81 ff       	sbrs	r24, 1
    18b2:	15 c0       	rjmp	.+42     	; 0x18de <__vector_10+0x74>
    18b4:	80 91 a0 00 	lds	r24, 0x00A0
    18b8:	81 ff       	sbrs	r24, 1
    18ba:	11 c0       	rjmp	.+34     	; 0x18de <__vector_10+0x74>
    18bc:	80 91 9f 00 	lds	r24, 0x009F
    18c0:	8d 7f       	andi	r24, 0xFD	; 253
    18c2:	80 93 9f 00 	sts	0x009F, r24
    18c6:	80 91 9f 00 	lds	r24, 0x009F
    18ca:	8e 7f       	andi	r24, 0xFE	; 254
    18cc:	80 93 9f 00 	sts	0x009F, r24
    18d0:	80 91 a0 00 	lds	r24, 0x00A0
    18d4:	8d 7f       	andi	r24, 0xFD	; 253
    18d6:	80 93 a0 00 	sts	0x00A0, r24
    18da:	97 d5       	rcall	.+2862   	; 0x240a <EVENT_USB_Host_DeviceUnattached>
    18dc:	60 df       	rcall	.-320    	; 0x179e <USB_ResetInterface>
    18de:	80 91 df 00 	lds	r24, 0x00DF
    18e2:	81 ff       	sbrs	r24, 1
    18e4:	15 c0       	rjmp	.+42     	; 0x1910 <__vector_10+0xa6>
    18e6:	80 91 de 00 	lds	r24, 0x00DE
    18ea:	81 ff       	sbrs	r24, 1
    18ec:	11 c0       	rjmp	.+34     	; 0x1910 <__vector_10+0xa6>
    18ee:	80 91 df 00 	lds	r24, 0x00DF
    18f2:	8d 7f       	andi	r24, 0xFD	; 253
    18f4:	80 93 df 00 	sts	0x00DF, r24
    18f8:	77 98       	cbi	0x0e, 7	; 14
    18fa:	80 91 dd 00 	lds	r24, 0x00DD
    18fe:	81 60       	ori	r24, 0x01	; 1
    1900:	80 93 dd 00 	sts	0x00DD, r24
    1904:	80 e0       	ldi	r24, 0x00	; 0
    1906:	d9 d5       	rcall	.+2994   	; 0x24ba <EVENT_USB_Host_HostError>
    1908:	80 d5       	rcall	.+2816   	; 0x240a <EVENT_USB_Host_DeviceUnattached>
    190a:	81 e0       	ldi	r24, 0x01	; 1
    190c:	80 93 f6 03 	sts	0x03F6, r24
    1910:	80 91 df 00 	lds	r24, 0x00DF
    1914:	80 ff       	sbrs	r24, 0
    1916:	17 c0       	rjmp	.+46     	; 0x1946 <__vector_10+0xdc>
    1918:	80 91 de 00 	lds	r24, 0x00DE
    191c:	80 ff       	sbrs	r24, 0
    191e:	13 c0       	rjmp	.+38     	; 0x1946 <__vector_10+0xdc>
    1920:	80 91 df 00 	lds	r24, 0x00DF
    1924:	8e 7f       	andi	r24, 0xFE	; 254
    1926:	80 93 df 00 	sts	0x00DF, r24
    192a:	80 91 de 00 	lds	r24, 0x00DE
    192e:	8e 7f       	andi	r24, 0xFE	; 254
    1930:	80 93 de 00 	sts	0x00DE, r24
    1934:	61 d5       	rcall	.+2754   	; 0x23f8 <EVENT_USB_Host_DeviceAttached>
    1936:	80 91 a0 00 	lds	r24, 0x00A0
    193a:	82 60       	ori	r24, 0x02	; 2
    193c:	80 93 a0 00 	sts	0x00A0, r24
    1940:	82 e0       	ldi	r24, 0x02	; 2
    1942:	80 93 f6 03 	sts	0x03F6, r24
    1946:	80 91 df 00 	lds	r24, 0x00DF
    194a:	82 ff       	sbrs	r24, 2
    194c:	0e c0       	rjmp	.+28     	; 0x196a <__vector_10+0x100>
    194e:	80 91 de 00 	lds	r24, 0x00DE
    1952:	82 ff       	sbrs	r24, 2
    1954:	0a c0       	rjmp	.+20     	; 0x196a <__vector_10+0x100>
    1956:	80 91 df 00 	lds	r24, 0x00DF
    195a:	8b 7f       	andi	r24, 0xFB	; 251
    195c:	80 93 df 00 	sts	0x00DF, r24
    1960:	82 e0       	ldi	r24, 0x02	; 2
    1962:	60 e0       	ldi	r22, 0x00	; 0
    1964:	cc d5       	rcall	.+2968   	; 0x24fe <EVENT_USB_Host_DeviceEnumerationFailed>
    1966:	51 d5       	rcall	.+2722   	; 0x240a <EVENT_USB_Host_DeviceUnattached>
    1968:	1a df       	rcall	.-460    	; 0x179e <USB_ResetInterface>
    196a:	ff 91       	pop	r31
    196c:	ef 91       	pop	r30
    196e:	bf 91       	pop	r27
    1970:	af 91       	pop	r26
    1972:	9f 91       	pop	r25
    1974:	8f 91       	pop	r24
    1976:	7f 91       	pop	r23
    1978:	6f 91       	pop	r22
    197a:	5f 91       	pop	r21
    197c:	4f 91       	pop	r20
    197e:	3f 91       	pop	r19
    1980:	2f 91       	pop	r18
    1982:	0f 90       	pop	r0
    1984:	0b be       	out	0x3b, r0	; 59
    1986:	0f 90       	pop	r0
    1988:	0f be       	out	0x3f, r0	; 63
    198a:	0f 90       	pop	r0
    198c:	1f 90       	pop	r1
    198e:	18 95       	reti

00001990 <Pipe_Write_Stream_LE>:
    1990:	8f 92       	push	r8
    1992:	9f 92       	push	r9
    1994:	bf 92       	push	r11
    1996:	cf 92       	push	r12
    1998:	df 92       	push	r13
    199a:	ef 92       	push	r14
    199c:	ff 92       	push	r15
    199e:	0f 93       	push	r16
    19a0:	1f 93       	push	r17
    19a2:	df 93       	push	r29
    19a4:	cf 93       	push	r28
    19a6:	0f 92       	push	r0
    19a8:	cd b7       	in	r28, 0x3d	; 61
    19aa:	de b7       	in	r29, 0x3e	; 62
    19ac:	e8 2e       	mov	r14, r24
    19ae:	4b 01       	movw	r8, r22
    19b0:	8a 01       	movw	r16, r20
    19b2:	80 91 aa 00 	lds	r24, 0x00AA
    19b6:	8f 7c       	andi	r24, 0xCF	; 207
    19b8:	80 62       	ori	r24, 0x20	; 32
    19ba:	80 93 aa 00 	sts	0x00AA, r24
    19be:	99 83       	std	Y+1, r25	; 0x01
    19c0:	a7 de       	rcall	.-690    	; 0x1710 <Pipe_WaitUntilReady>
    19c2:	b8 2e       	mov	r11, r24
    19c4:	99 81       	ldd	r25, Y+1	; 0x01
    19c6:	88 23       	and	r24, r24
    19c8:	c1 f5       	brne	.+112    	; 0x1a3a <Pipe_Write_Stream_LE+0xaa>
    19ca:	f9 2e       	mov	r15, r25
    19cc:	01 15       	cp	r16, r1
    19ce:	11 05       	cpc	r17, r1
    19d0:	39 f0       	breq	.+14     	; 0x19e0 <Pipe_Write_Stream_LE+0x50>
    19d2:	f8 01       	movw	r30, r16
    19d4:	20 81       	ld	r18, Z
    19d6:	31 81       	ldd	r19, Z+1	; 0x01
    19d8:	82 1a       	sub	r8, r18
    19da:	93 0a       	sbc	r9, r19
    19dc:	e2 0e       	add	r14, r18
    19de:	f3 1e       	adc	r15, r19
    19e0:	cc 24       	eor	r12, r12
    19e2:	dd 24       	eor	r13, r13
    19e4:	25 c0       	rjmp	.+74     	; 0x1a30 <Pipe_Write_Stream_LE+0xa0>
    19e6:	80 91 a6 00 	lds	r24, 0x00A6
    19ea:	85 fd       	sbrc	r24, 5
    19ec:	16 c0       	rjmp	.+44     	; 0x1a1a <Pipe_Write_Stream_LE+0x8a>
    19ee:	80 91 a6 00 	lds	r24, 0x00A6
    19f2:	8b 77       	andi	r24, 0x7B	; 123
    19f4:	80 93 a6 00 	sts	0x00A6, r24
    19f8:	01 15       	cp	r16, r1
    19fa:	11 05       	cpc	r17, r1
    19fc:	51 f0       	breq	.+20     	; 0x1a12 <Pipe_Write_Stream_LE+0x82>
    19fe:	f8 01       	movw	r30, r16
    1a00:	80 81       	ld	r24, Z
    1a02:	91 81       	ldd	r25, Z+1	; 0x01
    1a04:	8c 0d       	add	r24, r12
    1a06:	9d 1d       	adc	r25, r13
    1a08:	91 83       	std	Z+1, r25	; 0x01
    1a0a:	80 83       	st	Z, r24
    1a0c:	24 e0       	ldi	r18, 0x04	; 4
    1a0e:	b2 2e       	mov	r11, r18
    1a10:	14 c0       	rjmp	.+40     	; 0x1a3a <Pipe_Write_Stream_LE+0xaa>
    1a12:	7e de       	rcall	.-772    	; 0x1710 <Pipe_WaitUntilReady>
    1a14:	88 23       	and	r24, r24
    1a16:	61 f0       	breq	.+24     	; 0x1a30 <Pipe_Write_Stream_LE+0xa0>
    1a18:	0f c0       	rjmp	.+30     	; 0x1a38 <Pipe_Write_Stream_LE+0xa8>
    1a1a:	f7 01       	movw	r30, r14
    1a1c:	81 91       	ld	r24, Z+
    1a1e:	7f 01       	movw	r14, r30
    1a20:	80 93 af 00 	sts	0x00AF, r24
    1a24:	08 94       	sec
    1a26:	81 08       	sbc	r8, r1
    1a28:	91 08       	sbc	r9, r1
    1a2a:	08 94       	sec
    1a2c:	c1 1c       	adc	r12, r1
    1a2e:	d1 1c       	adc	r13, r1
    1a30:	81 14       	cp	r8, r1
    1a32:	91 04       	cpc	r9, r1
    1a34:	c1 f6       	brne	.-80     	; 0x19e6 <Pipe_Write_Stream_LE+0x56>
    1a36:	01 c0       	rjmp	.+2      	; 0x1a3a <Pipe_Write_Stream_LE+0xaa>
    1a38:	b8 2e       	mov	r11, r24
    1a3a:	8b 2d       	mov	r24, r11
    1a3c:	0f 90       	pop	r0
    1a3e:	cf 91       	pop	r28
    1a40:	df 91       	pop	r29
    1a42:	1f 91       	pop	r17
    1a44:	0f 91       	pop	r16
    1a46:	ff 90       	pop	r15
    1a48:	ef 90       	pop	r14
    1a4a:	df 90       	pop	r13
    1a4c:	cf 90       	pop	r12
    1a4e:	bf 90       	pop	r11
    1a50:	9f 90       	pop	r9
    1a52:	8f 90       	pop	r8
    1a54:	08 95       	ret

00001a56 <Pipe_Read_Stream_LE>:
    1a56:	8f 92       	push	r8
    1a58:	9f 92       	push	r9
    1a5a:	bf 92       	push	r11
    1a5c:	cf 92       	push	r12
    1a5e:	df 92       	push	r13
    1a60:	ef 92       	push	r14
    1a62:	ff 92       	push	r15
    1a64:	0f 93       	push	r16
    1a66:	1f 93       	push	r17
    1a68:	df 93       	push	r29
    1a6a:	cf 93       	push	r28
    1a6c:	0f 92       	push	r0
    1a6e:	cd b7       	in	r28, 0x3d	; 61
    1a70:	de b7       	in	r29, 0x3e	; 62
    1a72:	e8 2e       	mov	r14, r24
    1a74:	4b 01       	movw	r8, r22
    1a76:	8a 01       	movw	r16, r20
    1a78:	80 91 aa 00 	lds	r24, 0x00AA
    1a7c:	8f 7c       	andi	r24, 0xCF	; 207
    1a7e:	80 61       	ori	r24, 0x10	; 16
    1a80:	80 93 aa 00 	sts	0x00AA, r24
    1a84:	99 83       	std	Y+1, r25	; 0x01
    1a86:	44 de       	rcall	.-888    	; 0x1710 <Pipe_WaitUntilReady>
    1a88:	b8 2e       	mov	r11, r24
    1a8a:	99 81       	ldd	r25, Y+1	; 0x01
    1a8c:	88 23       	and	r24, r24
    1a8e:	c1 f5       	brne	.+112    	; 0x1b00 <Pipe_Read_Stream_LE+0xaa>
    1a90:	f9 2e       	mov	r15, r25
    1a92:	01 15       	cp	r16, r1
    1a94:	11 05       	cpc	r17, r1
    1a96:	39 f0       	breq	.+14     	; 0x1aa6 <Pipe_Read_Stream_LE+0x50>
    1a98:	f8 01       	movw	r30, r16
    1a9a:	20 81       	ld	r18, Z
    1a9c:	31 81       	ldd	r19, Z+1	; 0x01
    1a9e:	82 1a       	sub	r8, r18
    1aa0:	93 0a       	sbc	r9, r19
    1aa2:	e2 0e       	add	r14, r18
    1aa4:	f3 1e       	adc	r15, r19
    1aa6:	cc 24       	eor	r12, r12
    1aa8:	dd 24       	eor	r13, r13
    1aaa:	25 c0       	rjmp	.+74     	; 0x1af6 <Pipe_Read_Stream_LE+0xa0>
    1aac:	80 91 a6 00 	lds	r24, 0x00A6
    1ab0:	85 fd       	sbrc	r24, 5
    1ab2:	16 c0       	rjmp	.+44     	; 0x1ae0 <Pipe_Read_Stream_LE+0x8a>
    1ab4:	80 91 a6 00 	lds	r24, 0x00A6
    1ab8:	8e 77       	andi	r24, 0x7E	; 126
    1aba:	80 93 a6 00 	sts	0x00A6, r24
    1abe:	01 15       	cp	r16, r1
    1ac0:	11 05       	cpc	r17, r1
    1ac2:	51 f0       	breq	.+20     	; 0x1ad8 <Pipe_Read_Stream_LE+0x82>
    1ac4:	f8 01       	movw	r30, r16
    1ac6:	80 81       	ld	r24, Z
    1ac8:	91 81       	ldd	r25, Z+1	; 0x01
    1aca:	8c 0d       	add	r24, r12
    1acc:	9d 1d       	adc	r25, r13
    1ace:	91 83       	std	Z+1, r25	; 0x01
    1ad0:	80 83       	st	Z, r24
    1ad2:	44 e0       	ldi	r20, 0x04	; 4
    1ad4:	b4 2e       	mov	r11, r20
    1ad6:	14 c0       	rjmp	.+40     	; 0x1b00 <Pipe_Read_Stream_LE+0xaa>
    1ad8:	1b de       	rcall	.-970    	; 0x1710 <Pipe_WaitUntilReady>
    1ada:	88 23       	and	r24, r24
    1adc:	61 f0       	breq	.+24     	; 0x1af6 <Pipe_Read_Stream_LE+0xa0>
    1ade:	0f c0       	rjmp	.+30     	; 0x1afe <Pipe_Read_Stream_LE+0xa8>
    1ae0:	80 91 af 00 	lds	r24, 0x00AF
    1ae4:	f7 01       	movw	r30, r14
    1ae6:	81 93       	st	Z+, r24
    1ae8:	7f 01       	movw	r14, r30
    1aea:	08 94       	sec
    1aec:	81 08       	sbc	r8, r1
    1aee:	91 08       	sbc	r9, r1
    1af0:	08 94       	sec
    1af2:	c1 1c       	adc	r12, r1
    1af4:	d1 1c       	adc	r13, r1
    1af6:	81 14       	cp	r8, r1
    1af8:	91 04       	cpc	r9, r1
    1afa:	c1 f6       	brne	.-80     	; 0x1aac <Pipe_Read_Stream_LE+0x56>
    1afc:	01 c0       	rjmp	.+2      	; 0x1b00 <Pipe_Read_Stream_LE+0xaa>
    1afe:	b8 2e       	mov	r11, r24
    1b00:	8b 2d       	mov	r24, r11
    1b02:	0f 90       	pop	r0
    1b04:	cf 91       	pop	r28
    1b06:	df 91       	pop	r29
    1b08:	1f 91       	pop	r17
    1b0a:	0f 91       	pop	r16
    1b0c:	ff 90       	pop	r15
    1b0e:	ef 90       	pop	r14
    1b10:	df 90       	pop	r13
    1b12:	cf 90       	pop	r12
    1b14:	bf 90       	pop	r11
    1b16:	9f 90       	pop	r9
    1b18:	8f 90       	pop	r8
    1b1a:	08 95       	ret

00001b1c <USB_Host_GetDeviceConfigDescriptor>:
    1b1c:	cf 92       	push	r12
    1b1e:	df 92       	push	r13
    1b20:	ef 92       	push	r14
    1b22:	ff 92       	push	r15
    1b24:	0f 93       	push	r16
    1b26:	1f 93       	push	r17
    1b28:	df 93       	push	r29
    1b2a:	cf 93       	push	r28
    1b2c:	cd b7       	in	r28, 0x3d	; 61
    1b2e:	de b7       	in	r29, 0x3e	; 62
    1b30:	29 97       	sbiw	r28, 0x09	; 9
    1b32:	0f b6       	in	r0, 0x3f	; 63
    1b34:	f8 94       	cli
    1b36:	de bf       	out	0x3e, r29	; 62
    1b38:	0f be       	out	0x3f, r0	; 63
    1b3a:	cd bf       	out	0x3d, r28	; 61
    1b3c:	6b 01       	movw	r12, r22
    1b3e:	8a 01       	movw	r16, r20
    1b40:	79 01       	movw	r14, r18
    1b42:	90 e8       	ldi	r25, 0x80	; 128
    1b44:	90 93 ee 03 	sts	0x03EE, r25
    1b48:	96 e0       	ldi	r25, 0x06	; 6
    1b4a:	90 93 ef 03 	sts	0x03EF, r25
    1b4e:	90 e0       	ldi	r25, 0x00	; 0
    1b50:	01 97       	sbiw	r24, 0x01	; 1
    1b52:	92 60       	ori	r25, 0x02	; 2
    1b54:	90 93 f1 03 	sts	0x03F1, r25
    1b58:	80 93 f0 03 	sts	0x03F0, r24
    1b5c:	10 92 f3 03 	sts	0x03F3, r1
    1b60:	10 92 f2 03 	sts	0x03F2, r1
    1b64:	89 e0       	ldi	r24, 0x09	; 9
    1b66:	90 e0       	ldi	r25, 0x00	; 0
    1b68:	90 93 f5 03 	sts	0x03F5, r25
    1b6c:	80 93 f4 03 	sts	0x03F4, r24
    1b70:	10 92 a7 00 	sts	0x00A7, r1
    1b74:	ce 01       	movw	r24, r28
    1b76:	01 96       	adiw	r24, 0x01	; 1
    1b78:	95 d0       	rcall	.+298    	; 0x1ca4 <USB_Host_SendControlRequest>
    1b7a:	88 23       	and	r24, r24
    1b7c:	b9 f4       	brne	.+46     	; 0x1bac <USB_Host_GetDeviceConfigDescriptor+0x90>
    1b7e:	8b 81       	ldd	r24, Y+3	; 0x03
    1b80:	9c 81       	ldd	r25, Y+4	; 0x04
    1b82:	f6 01       	movw	r30, r12
    1b84:	91 83       	std	Z+1, r25	; 0x01
    1b86:	80 83       	st	Z, r24
    1b88:	e8 16       	cp	r14, r24
    1b8a:	f9 06       	cpc	r15, r25
    1b8c:	70 f0       	brcs	.+28     	; 0x1baa <USB_Host_GetDeviceConfigDescriptor+0x8e>
    1b8e:	90 93 f5 03 	sts	0x03F5, r25
    1b92:	80 93 f4 03 	sts	0x03F4, r24
    1b96:	c8 01       	movw	r24, r16
    1b98:	85 d0       	rcall	.+266    	; 0x1ca4 <USB_Host_SendControlRequest>
    1b9a:	88 23       	and	r24, r24
    1b9c:	39 f4       	brne	.+14     	; 0x1bac <USB_Host_GetDeviceConfigDescriptor+0x90>
    1b9e:	f8 01       	movw	r30, r16
    1ba0:	91 81       	ldd	r25, Z+1	; 0x01
    1ba2:	92 30       	cpi	r25, 0x02	; 2
    1ba4:	19 f0       	breq	.+6      	; 0x1bac <USB_Host_GetDeviceConfigDescriptor+0x90>
    1ba6:	86 e0       	ldi	r24, 0x06	; 6
    1ba8:	01 c0       	rjmp	.+2      	; 0x1bac <USB_Host_GetDeviceConfigDescriptor+0x90>
    1baa:	85 e0       	ldi	r24, 0x05	; 5
    1bac:	29 96       	adiw	r28, 0x09	; 9
    1bae:	0f b6       	in	r0, 0x3f	; 63
    1bb0:	f8 94       	cli
    1bb2:	de bf       	out	0x3e, r29	; 62
    1bb4:	0f be       	out	0x3f, r0	; 63
    1bb6:	cd bf       	out	0x3d, r28	; 61
    1bb8:	cf 91       	pop	r28
    1bba:	df 91       	pop	r29
    1bbc:	1f 91       	pop	r17
    1bbe:	0f 91       	pop	r16
    1bc0:	ff 90       	pop	r15
    1bc2:	ef 90       	pop	r14
    1bc4:	df 90       	pop	r13
    1bc6:	cf 90       	pop	r12
    1bc8:	08 95       	ret

00001bca <USB_GetNextDescriptorComp>:
    1bca:	af 92       	push	r10
    1bcc:	bf 92       	push	r11
    1bce:	cf 92       	push	r12
    1bd0:	df 92       	push	r13
    1bd2:	ef 92       	push	r14
    1bd4:	ff 92       	push	r15
    1bd6:	0f 93       	push	r16
    1bd8:	1f 93       	push	r17
    1bda:	cf 93       	push	r28
    1bdc:	df 93       	push	r29
    1bde:	8c 01       	movw	r16, r24
    1be0:	eb 01       	movw	r28, r22
    1be2:	6a 01       	movw	r12, r20
    1be4:	23 c0       	rjmp	.+70     	; 0x1c2c <USB_GetNextDescriptorComp+0x62>
    1be6:	e8 81       	ld	r30, Y
    1be8:	f9 81       	ldd	r31, Y+1	; 0x01
    1bea:	5f 01       	movw	r10, r30
    1bec:	20 81       	ld	r18, Z
    1bee:	30 e0       	ldi	r19, 0x00	; 0
    1bf0:	c7 01       	movw	r24, r14
    1bf2:	2e 15       	cp	r18, r14
    1bf4:	3f 05       	cpc	r19, r15
    1bf6:	08 f4       	brcc	.+2      	; 0x1bfa <USB_GetNextDescriptorComp+0x30>
    1bf8:	c9 01       	movw	r24, r18
    1bfa:	e8 0f       	add	r30, r24
    1bfc:	f9 1f       	adc	r31, r25
    1bfe:	f9 83       	std	Y+1, r31	; 0x01
    1c00:	e8 83       	st	Y, r30
    1c02:	f8 01       	movw	r30, r16
    1c04:	20 81       	ld	r18, Z
    1c06:	31 81       	ldd	r19, Z+1	; 0x01
    1c08:	28 1b       	sub	r18, r24
    1c0a:	39 0b       	sbc	r19, r25
    1c0c:	31 83       	std	Z+1, r19	; 0x01
    1c0e:	20 83       	st	Z, r18
    1c10:	88 81       	ld	r24, Y
    1c12:	99 81       	ldd	r25, Y+1	; 0x01
    1c14:	f6 01       	movw	r30, r12
    1c16:	09 95       	icall
    1c18:	82 30       	cpi	r24, 0x02	; 2
    1c1a:	41 f0       	breq	.+16     	; 0x1c2c <USB_GetNextDescriptorComp+0x62>
    1c1c:	81 30       	cpi	r24, 0x01	; 1
    1c1e:	69 f4       	brne	.+26     	; 0x1c3a <USB_GetNextDescriptorComp+0x70>
    1c20:	a8 82       	st	Y, r10
    1c22:	b9 82       	std	Y+1, r11	; 0x01
    1c24:	f8 01       	movw	r30, r16
    1c26:	f1 82       	std	Z+1, r15	; 0x01
    1c28:	e0 82       	st	Z, r14
    1c2a:	07 c0       	rjmp	.+14     	; 0x1c3a <USB_GetNextDescriptorComp+0x70>
    1c2c:	f8 01       	movw	r30, r16
    1c2e:	e0 80       	ld	r14, Z
    1c30:	f1 80       	ldd	r15, Z+1	; 0x01
    1c32:	e1 14       	cp	r14, r1
    1c34:	f1 04       	cpc	r15, r1
    1c36:	b9 f6       	brne	.-82     	; 0x1be6 <USB_GetNextDescriptorComp+0x1c>
    1c38:	82 e0       	ldi	r24, 0x02	; 2
    1c3a:	df 91       	pop	r29
    1c3c:	cf 91       	pop	r28
    1c3e:	1f 91       	pop	r17
    1c40:	0f 91       	pop	r16
    1c42:	ff 90       	pop	r15
    1c44:	ef 90       	pop	r14
    1c46:	df 90       	pop	r13
    1c48:	cf 90       	pop	r12
    1c4a:	bf 90       	pop	r11
    1c4c:	af 90       	pop	r10
    1c4e:	08 95       	ret

00001c50 <USB_Event_Stub>:
    1c50:	08 95       	ret

00001c52 <USB_Host_WaitForIOS>:
    1c52:	1f 93       	push	r17
    1c54:	cf 93       	push	r28
    1c56:	df 93       	push	r29
    1c58:	18 2f       	mov	r17, r24
    1c5a:	c8 ee       	ldi	r28, 0xE8	; 232
    1c5c:	d3 e0       	ldi	r29, 0x03	; 3
    1c5e:	07 c0       	rjmp	.+14     	; 0x1c6e <USB_Host_WaitForIOS+0x1c>
    1c60:	81 e0       	ldi	r24, 0x01	; 1
    1c62:	3f db       	rcall	.-2434   	; 0x12e2 <USB_Host_WaitMS>
    1c64:	88 23       	and	r24, r24
    1c66:	d1 f4       	brne	.+52     	; 0x1c9c <USB_Host_WaitForIOS+0x4a>
    1c68:	20 97       	sbiw	r28, 0x00	; 0
    1c6a:	b9 f0       	breq	.+46     	; 0x1c9a <USB_Host_WaitForIOS+0x48>
    1c6c:	21 97       	sbiw	r28, 0x01	; 1
    1c6e:	11 23       	and	r17, r17
    1c70:	29 f4       	brne	.+10     	; 0x1c7c <USB_Host_WaitForIOS+0x2a>
    1c72:	80 91 a6 00 	lds	r24, 0x00A6
    1c76:	83 ff       	sbrs	r24, 3
    1c78:	f3 cf       	rjmp	.-26     	; 0x1c60 <USB_Host_WaitForIOS+0xe>
    1c7a:	0d c0       	rjmp	.+26     	; 0x1c96 <USB_Host_WaitForIOS+0x44>
    1c7c:	11 30       	cpi	r17, 0x01	; 1
    1c7e:	29 f4       	brne	.+10     	; 0x1c8a <USB_Host_WaitForIOS+0x38>
    1c80:	80 91 a6 00 	lds	r24, 0x00A6
    1c84:	80 ff       	sbrs	r24, 0
    1c86:	ec cf       	rjmp	.-40     	; 0x1c60 <USB_Host_WaitForIOS+0xe>
    1c88:	06 c0       	rjmp	.+12     	; 0x1c96 <USB_Host_WaitForIOS+0x44>
    1c8a:	12 30       	cpi	r17, 0x02	; 2
    1c8c:	49 f7       	brne	.-46     	; 0x1c60 <USB_Host_WaitForIOS+0xe>
    1c8e:	80 91 a6 00 	lds	r24, 0x00A6
    1c92:	82 ff       	sbrs	r24, 2
    1c94:	e5 cf       	rjmp	.-54     	; 0x1c60 <USB_Host_WaitForIOS+0xe>
    1c96:	80 e0       	ldi	r24, 0x00	; 0
    1c98:	01 c0       	rjmp	.+2      	; 0x1c9c <USB_Host_WaitForIOS+0x4a>
    1c9a:	84 e0       	ldi	r24, 0x04	; 4
    1c9c:	df 91       	pop	r29
    1c9e:	cf 91       	pop	r28
    1ca0:	1f 91       	pop	r17
    1ca2:	08 95       	ret

00001ca4 <USB_Host_SendControlRequest>:
    1ca4:	ef 92       	push	r14
    1ca6:	ff 92       	push	r15
    1ca8:	0f 93       	push	r16
    1caa:	1f 93       	push	r17
    1cac:	cf 93       	push	r28
    1cae:	df 93       	push	r29
    1cb0:	8c 01       	movw	r16, r24
    1cb2:	e0 90 9e 00 	lds	r14, 0x009E
    1cb6:	ff 24       	eor	r15, r15
    1cb8:	81 e0       	ldi	r24, 0x01	; 1
    1cba:	e8 22       	and	r14, r24
    1cbc:	ff 24       	eor	r15, r15
    1cbe:	c0 91 f4 03 	lds	r28, 0x03F4
    1cc2:	d0 91 f5 03 	lds	r29, 0x03F5
    1cc6:	80 91 9e 00 	lds	r24, 0x009E
    1cca:	81 60       	ori	r24, 0x01	; 1
    1ccc:	80 93 9e 00 	sts	0x009E, r24
    1cd0:	81 e0       	ldi	r24, 0x01	; 1
    1cd2:	07 db       	rcall	.-2546   	; 0x12e2 <USB_Host_WaitMS>
    1cd4:	88 23       	and	r24, r24
    1cd6:	09 f0       	breq	.+2      	; 0x1cda <USB_Host_SendControlRequest+0x36>
    1cd8:	cb c0       	rjmp	.+406    	; 0x1e70 <USB_Host_SendControlRequest+0x1cc>
    1cda:	80 91 aa 00 	lds	r24, 0x00AA
    1cde:	8f 7c       	andi	r24, 0xCF	; 207
    1ce0:	80 93 aa 00 	sts	0x00AA, r24
    1ce4:	10 92 f5 00 	sts	0x00F5, r1
    1ce8:	80 91 a6 00 	lds	r24, 0x00A6
    1cec:	8f 7e       	andi	r24, 0xEF	; 239
    1cee:	80 93 a6 00 	sts	0x00A6, r24
    1cf2:	80 91 a9 00 	lds	r24, 0x00A9
    1cf6:	8f 7b       	andi	r24, 0xBF	; 191
    1cf8:	80 93 a9 00 	sts	0x00A9, r24
    1cfc:	ee ee       	ldi	r30, 0xEE	; 238
    1cfe:	f3 e0       	ldi	r31, 0x03	; 3
    1d00:	81 91       	ld	r24, Z+
    1d02:	80 93 af 00 	sts	0x00AF, r24
    1d06:	83 e0       	ldi	r24, 0x03	; 3
    1d08:	e6 3f       	cpi	r30, 0xF6	; 246
    1d0a:	f8 07       	cpc	r31, r24
    1d0c:	c9 f7       	brne	.-14     	; 0x1d00 <USB_Host_SendControlRequest+0x5c>
    1d0e:	80 91 a6 00 	lds	r24, 0x00A6
    1d12:	87 77       	andi	r24, 0x77	; 119
    1d14:	80 93 a6 00 	sts	0x00A6, r24
    1d18:	80 e0       	ldi	r24, 0x00	; 0
    1d1a:	9b df       	rcall	.-202    	; 0x1c52 <USB_Host_WaitForIOS>
    1d1c:	88 23       	and	r24, r24
    1d1e:	09 f0       	breq	.+2      	; 0x1d22 <USB_Host_SendControlRequest+0x7e>
    1d20:	a7 c0       	rjmp	.+334    	; 0x1e70 <USB_Host_SendControlRequest+0x1cc>
    1d22:	80 91 a9 00 	lds	r24, 0x00A9
    1d26:	80 64       	ori	r24, 0x40	; 64
    1d28:	80 93 a9 00 	sts	0x00A9, r24
    1d2c:	81 e0       	ldi	r24, 0x01	; 1
    1d2e:	d9 da       	rcall	.-2638   	; 0x12e2 <USB_Host_WaitMS>
    1d30:	88 23       	and	r24, r24
    1d32:	09 f0       	breq	.+2      	; 0x1d36 <USB_Host_SendControlRequest+0x92>
    1d34:	9d c0       	rjmp	.+314    	; 0x1e70 <USB_Host_SendControlRequest+0x1cc>
    1d36:	80 91 ee 03 	lds	r24, 0x03EE
    1d3a:	87 ff       	sbrs	r24, 7
    1d3c:	4f c0       	rjmp	.+158    	; 0x1ddc <USB_Host_SendControlRequest+0x138>
    1d3e:	80 91 aa 00 	lds	r24, 0x00AA
    1d42:	8f 7c       	andi	r24, 0xCF	; 207
    1d44:	80 61       	ori	r24, 0x10	; 16
    1d46:	80 93 aa 00 	sts	0x00AA, r24
    1d4a:	01 15       	cp	r16, r1
    1d4c:	11 05       	cpc	r17, r1
    1d4e:	61 f5       	brne	.+88     	; 0x1da8 <USB_Host_SendControlRequest+0x104>
    1d50:	2d c0       	rjmp	.+90     	; 0x1dac <USB_Host_SendControlRequest+0x108>
    1d52:	80 91 a9 00 	lds	r24, 0x00A9
    1d56:	8f 7b       	andi	r24, 0xBF	; 191
    1d58:	80 93 a9 00 	sts	0x00A9, r24
    1d5c:	81 e0       	ldi	r24, 0x01	; 1
    1d5e:	79 df       	rcall	.-270    	; 0x1c52 <USB_Host_WaitForIOS>
    1d60:	88 23       	and	r24, r24
    1d62:	09 f0       	breq	.+2      	; 0x1d66 <USB_Host_SendControlRequest+0xc2>
    1d64:	85 c0       	rjmp	.+266    	; 0x1e70 <USB_Host_SendControlRequest+0x1cc>
    1d66:	80 91 f6 00 	lds	r24, 0x00F6
    1d6a:	90 91 f7 00 	lds	r25, 0x00F7
    1d6e:	00 97       	sbiw	r24, 0x00	; 0
    1d70:	49 f4       	brne	.+18     	; 0x1d84 <USB_Host_SendControlRequest+0xe0>
    1d72:	c0 e0       	ldi	r28, 0x00	; 0
    1d74:	d0 e0       	ldi	r29, 0x00	; 0
    1d76:	06 c0       	rjmp	.+12     	; 0x1d84 <USB_Host_SendControlRequest+0xe0>
    1d78:	80 91 af 00 	lds	r24, 0x00AF
    1d7c:	f8 01       	movw	r30, r16
    1d7e:	81 93       	st	Z+, r24
    1d80:	8f 01       	movw	r16, r30
    1d82:	21 97       	sbiw	r28, 0x01	; 1
    1d84:	80 91 f6 00 	lds	r24, 0x00F6
    1d88:	90 91 f7 00 	lds	r25, 0x00F7
    1d8c:	00 97       	sbiw	r24, 0x00	; 0
    1d8e:	11 f0       	breq	.+4      	; 0x1d94 <USB_Host_SendControlRequest+0xf0>
    1d90:	20 97       	sbiw	r28, 0x00	; 0
    1d92:	91 f7       	brne	.-28     	; 0x1d78 <USB_Host_SendControlRequest+0xd4>
    1d94:	80 91 a9 00 	lds	r24, 0x00A9
    1d98:	80 64       	ori	r24, 0x40	; 64
    1d9a:	80 93 a9 00 	sts	0x00A9, r24
    1d9e:	80 91 a6 00 	lds	r24, 0x00A6
    1da2:	8e 77       	andi	r24, 0x7E	; 126
    1da4:	80 93 a6 00 	sts	0x00A6, r24
    1da8:	20 97       	sbiw	r28, 0x00	; 0
    1daa:	99 f6       	brne	.-90     	; 0x1d52 <USB_Host_SendControlRequest+0xae>
    1dac:	80 91 aa 00 	lds	r24, 0x00AA
    1db0:	8f 7c       	andi	r24, 0xCF	; 207
    1db2:	80 62       	ori	r24, 0x20	; 32
    1db4:	80 93 aa 00 	sts	0x00AA, r24
    1db8:	80 91 a9 00 	lds	r24, 0x00A9
    1dbc:	8f 7b       	andi	r24, 0xBF	; 191
    1dbe:	80 93 a9 00 	sts	0x00A9, r24
    1dc2:	82 e0       	ldi	r24, 0x02	; 2
    1dc4:	46 df       	rcall	.-372    	; 0x1c52 <USB_Host_WaitForIOS>
    1dc6:	88 23       	and	r24, r24
    1dc8:	09 f0       	breq	.+2      	; 0x1dcc <USB_Host_SendControlRequest+0x128>
    1dca:	52 c0       	rjmp	.+164    	; 0x1e70 <USB_Host_SendControlRequest+0x1cc>
    1dcc:	80 91 a6 00 	lds	r24, 0x00A6
    1dd0:	8b 77       	andi	r24, 0x7B	; 123
    1dd2:	80 93 a6 00 	sts	0x00A6, r24
    1dd6:	82 e0       	ldi	r24, 0x02	; 2
    1dd8:	3c df       	rcall	.-392    	; 0x1c52 <USB_Host_WaitForIOS>
    1dda:	4a c0       	rjmp	.+148    	; 0x1e70 <USB_Host_SendControlRequest+0x1cc>
    1ddc:	01 15       	cp	r16, r1
    1dde:	11 05       	cpc	r17, r1
    1de0:	99 f1       	breq	.+102    	; 0x1e48 <USB_Host_SendControlRequest+0x1a4>
    1de2:	80 91 aa 00 	lds	r24, 0x00AA
    1de6:	8f 7c       	andi	r24, 0xCF	; 207
    1de8:	80 62       	ori	r24, 0x20	; 32
    1dea:	80 93 aa 00 	sts	0x00AA, r24
    1dee:	80 91 a9 00 	lds	r24, 0x00A9
    1df2:	8f 7b       	andi	r24, 0xBF	; 191
    1df4:	80 93 a9 00 	sts	0x00A9, r24
    1df8:	1c c0       	rjmp	.+56     	; 0x1e32 <USB_Host_SendControlRequest+0x18e>
    1dfa:	82 e0       	ldi	r24, 0x02	; 2
    1dfc:	2a df       	rcall	.-428    	; 0x1c52 <USB_Host_WaitForIOS>
    1dfe:	88 23       	and	r24, r24
    1e00:	b9 f5       	brne	.+110    	; 0x1e70 <USB_Host_SendControlRequest+0x1cc>
    1e02:	f8 01       	movw	r30, r16
    1e04:	06 c0       	rjmp	.+12     	; 0x1e12 <USB_Host_SendControlRequest+0x16e>
    1e06:	81 91       	ld	r24, Z+
    1e08:	8f 01       	movw	r16, r30
    1e0a:	80 93 af 00 	sts	0x00AF, r24
    1e0e:	21 97       	sbiw	r28, 0x01	; 1
    1e10:	59 f0       	breq	.+22     	; 0x1e28 <USB_Host_SendControlRequest+0x184>
    1e12:	8f 01       	movw	r16, r30
    1e14:	20 91 f6 00 	lds	r18, 0x00F6
    1e18:	30 91 f7 00 	lds	r19, 0x00F7
    1e1c:	80 91 23 01 	lds	r24, 0x0123
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	28 17       	cp	r18, r24
    1e24:	39 07       	cpc	r19, r25
    1e26:	78 f3       	brcs	.-34     	; 0x1e06 <USB_Host_SendControlRequest+0x162>
    1e28:	80 91 a6 00 	lds	r24, 0x00A6
    1e2c:	8b 77       	andi	r24, 0x7B	; 123
    1e2e:	80 93 a6 00 	sts	0x00A6, r24
    1e32:	20 97       	sbiw	r28, 0x00	; 0
    1e34:	11 f7       	brne	.-60     	; 0x1dfa <USB_Host_SendControlRequest+0x156>
    1e36:	82 e0       	ldi	r24, 0x02	; 2
    1e38:	0c df       	rcall	.-488    	; 0x1c52 <USB_Host_WaitForIOS>
    1e3a:	88 23       	and	r24, r24
    1e3c:	c9 f4       	brne	.+50     	; 0x1e70 <USB_Host_SendControlRequest+0x1cc>
    1e3e:	80 91 a9 00 	lds	r24, 0x00A9
    1e42:	80 64       	ori	r24, 0x40	; 64
    1e44:	80 93 a9 00 	sts	0x00A9, r24
    1e48:	80 91 aa 00 	lds	r24, 0x00AA
    1e4c:	8f 7c       	andi	r24, 0xCF	; 207
    1e4e:	80 61       	ori	r24, 0x10	; 16
    1e50:	80 93 aa 00 	sts	0x00AA, r24
    1e54:	80 91 a9 00 	lds	r24, 0x00A9
    1e58:	8f 7b       	andi	r24, 0xBF	; 191
    1e5a:	80 93 a9 00 	sts	0x00A9, r24
    1e5e:	81 e0       	ldi	r24, 0x01	; 1
    1e60:	f8 de       	rcall	.-528    	; 0x1c52 <USB_Host_WaitForIOS>
    1e62:	88 23       	and	r24, r24
    1e64:	29 f4       	brne	.+10     	; 0x1e70 <USB_Host_SendControlRequest+0x1cc>
    1e66:	90 91 a6 00 	lds	r25, 0x00A6
    1e6a:	9e 77       	andi	r25, 0x7E	; 126
    1e6c:	90 93 a6 00 	sts	0x00A6, r25
    1e70:	90 91 a9 00 	lds	r25, 0x00A9
    1e74:	90 64       	ori	r25, 0x40	; 64
    1e76:	90 93 a9 00 	sts	0x00A9, r25
    1e7a:	e1 14       	cp	r14, r1
    1e7c:	f1 04       	cpc	r15, r1
    1e7e:	29 f4       	brne	.+10     	; 0x1e8a <USB_Host_SendControlRequest+0x1e6>
    1e80:	90 91 9e 00 	lds	r25, 0x009E
    1e84:	9e 7f       	andi	r25, 0xFE	; 254
    1e86:	90 93 9e 00 	sts	0x009E, r25
    1e8a:	91 e0       	ldi	r25, 0x01	; 1
    1e8c:	90 93 a8 00 	sts	0x00A8, r25
    1e90:	10 92 a8 00 	sts	0x00A8, r1
    1e94:	df 91       	pop	r29
    1e96:	cf 91       	pop	r28
    1e98:	1f 91       	pop	r17
    1e9a:	0f 91       	pop	r16
    1e9c:	ff 90       	pop	r15
    1e9e:	ef 90       	pop	r14
    1ea0:	08 95       	ret

00001ea2 <USB_Host_SetDeviceConfiguration>:
    1ea2:	1f 93       	push	r17
    1ea4:	18 2f       	mov	r17, r24
    1ea6:	10 92 ee 03 	sts	0x03EE, r1
    1eaa:	89 e0       	ldi	r24, 0x09	; 9
    1eac:	80 93 ef 03 	sts	0x03EF, r24
    1eb0:	10 93 f0 03 	sts	0x03F0, r17
    1eb4:	10 92 f1 03 	sts	0x03F1, r1
    1eb8:	10 92 f3 03 	sts	0x03F3, r1
    1ebc:	10 92 f2 03 	sts	0x03F2, r1
    1ec0:	10 92 f5 03 	sts	0x03F5, r1
    1ec4:	10 92 f4 03 	sts	0x03F4, r1
    1ec8:	10 92 a7 00 	sts	0x00A7, r1
    1ecc:	80 e0       	ldi	r24, 0x00	; 0
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	e9 de       	rcall	.-558    	; 0x1ca4 <USB_Host_SendControlRequest>
    1ed2:	88 23       	and	r24, r24
    1ed4:	49 f4       	brne	.+18     	; 0x1ee8 <USB_Host_SetDeviceConfiguration+0x46>
    1ed6:	10 93 ec 03 	sts	0x03EC, r17
    1eda:	11 23       	and	r17, r17
    1edc:	11 f0       	breq	.+4      	; 0x1ee2 <USB_Host_SetDeviceConfiguration+0x40>
    1ede:	9b e0       	ldi	r25, 0x0B	; 11
    1ee0:	01 c0       	rjmp	.+2      	; 0x1ee4 <USB_Host_SetDeviceConfiguration+0x42>
    1ee2:	9a e0       	ldi	r25, 0x0A	; 10
    1ee4:	90 93 f6 03 	sts	0x03F6, r25
    1ee8:	1f 91       	pop	r17
    1eea:	08 95       	ret

00001eec <USB_Host_ClearEndpointStall>:
    1eec:	92 e0       	ldi	r25, 0x02	; 2
    1eee:	90 93 ee 03 	sts	0x03EE, r25
    1ef2:	91 e0       	ldi	r25, 0x01	; 1
    1ef4:	90 93 ef 03 	sts	0x03EF, r25
    1ef8:	10 92 f1 03 	sts	0x03F1, r1
    1efc:	10 92 f0 03 	sts	0x03F0, r1
    1f00:	80 93 f2 03 	sts	0x03F2, r24
    1f04:	10 92 f3 03 	sts	0x03F3, r1
    1f08:	10 92 f5 03 	sts	0x03F5, r1
    1f0c:	10 92 f4 03 	sts	0x03F4, r1
    1f10:	10 92 a7 00 	sts	0x00A7, r1
    1f14:	80 e0       	ldi	r24, 0x00	; 0
    1f16:	90 e0       	ldi	r25, 0x00	; 0
    1f18:	c5 ce       	rjmp	.-630    	; 0x1ca4 <USB_Host_SendControlRequest>

00001f1a <USB_USBTask>:
    1f1a:	1f 93       	push	r17
    1f1c:	cf 93       	push	r28
    1f1e:	df 93       	push	r29
    1f20:	c7 ea       	ldi	r28, 0xA7	; 167
    1f22:	d0 e0       	ldi	r29, 0x00	; 0
    1f24:	18 81       	ld	r17, Y
    1f26:	17 70       	andi	r17, 0x07	; 7
    1f28:	18 82       	st	Y, r1
    1f2a:	30 da       	rcall	.-2976   	; 0x138c <USB_Host_ProcessNextHostState>
    1f2c:	18 83       	st	Y, r17
    1f2e:	df 91       	pop	r29
    1f30:	cf 91       	pop	r28
    1f32:	1f 91       	pop	r17
    1f34:	08 95       	ret

00001f36 <DCOMP_SI_Host_NextSIInterface>:
    1f36:	fc 01       	movw	r30, r24
    1f38:	81 81       	ldd	r24, Z+1	; 0x01
    1f3a:	84 30       	cpi	r24, 0x04	; 4
    1f3c:	49 f4       	brne	.+18     	; 0x1f50 <DCOMP_SI_Host_NextSIInterface+0x1a>
    1f3e:	85 81       	ldd	r24, Z+5	; 0x05
    1f40:	86 30       	cpi	r24, 0x06	; 6
    1f42:	31 f4       	brne	.+12     	; 0x1f50 <DCOMP_SI_Host_NextSIInterface+0x1a>
    1f44:	86 81       	ldd	r24, Z+6	; 0x06
    1f46:	81 30       	cpi	r24, 0x01	; 1
    1f48:	19 f4       	brne	.+6      	; 0x1f50 <DCOMP_SI_Host_NextSIInterface+0x1a>
    1f4a:	87 81       	ldd	r24, Z+7	; 0x07
    1f4c:	81 30       	cpi	r24, 0x01	; 1
    1f4e:	11 f0       	breq	.+4      	; 0x1f54 <DCOMP_SI_Host_NextSIInterface+0x1e>
    1f50:	82 e0       	ldi	r24, 0x02	; 2
    1f52:	08 95       	ret
    1f54:	80 e0       	ldi	r24, 0x00	; 0
    1f56:	08 95       	ret

00001f58 <DCOMP_SI_Host_NextSIInterfaceEndpoint>:
    1f58:	fc 01       	movw	r30, r24
    1f5a:	81 81       	ldd	r24, Z+1	; 0x01
    1f5c:	85 30       	cpi	r24, 0x05	; 5
    1f5e:	51 f4       	brne	.+20     	; 0x1f74 <DCOMP_SI_Host_NextSIInterfaceEndpoint+0x1c>
    1f60:	83 81       	ldd	r24, Z+3	; 0x03
    1f62:	83 70       	andi	r24, 0x03	; 3
    1f64:	82 50       	subi	r24, 0x02	; 2
    1f66:	82 30       	cpi	r24, 0x02	; 2
    1f68:	38 f4       	brcc	.+14     	; 0x1f78 <DCOMP_SI_Host_NextSIInterfaceEndpoint+0x20>
    1f6a:	82 81       	ldd	r24, Z+2	; 0x02
    1f6c:	af db       	rcall	.-2210   	; 0x16cc <Pipe_IsEndpointBound>
    1f6e:	88 23       	and	r24, r24
    1f70:	19 f4       	brne	.+6      	; 0x1f78 <DCOMP_SI_Host_NextSIInterfaceEndpoint+0x20>
    1f72:	04 c0       	rjmp	.+8      	; 0x1f7c <DCOMP_SI_Host_NextSIInterfaceEndpoint+0x24>
    1f74:	84 30       	cpi	r24, 0x04	; 4
    1f76:	21 f0       	breq	.+8      	; 0x1f80 <DCOMP_SI_Host_NextSIInterfaceEndpoint+0x28>
    1f78:	82 e0       	ldi	r24, 0x02	; 2
    1f7a:	08 95       	ret
    1f7c:	80 e0       	ldi	r24, 0x00	; 0
    1f7e:	08 95       	ret
    1f80:	81 e0       	ldi	r24, 0x01	; 1
    1f82:	08 95       	ret

00001f84 <SI_Host_ConfigurePipes>:
    1f84:	4f 92       	push	r4
    1f86:	5f 92       	push	r5
    1f88:	6f 92       	push	r6
    1f8a:	7f 92       	push	r7
    1f8c:	8f 92       	push	r8
    1f8e:	9f 92       	push	r9
    1f90:	af 92       	push	r10
    1f92:	bf 92       	push	r11
    1f94:	cf 92       	push	r12
    1f96:	df 92       	push	r13
    1f98:	ef 92       	push	r14
    1f9a:	ff 92       	push	r15
    1f9c:	0f 93       	push	r16
    1f9e:	1f 93       	push	r17
    1fa0:	df 93       	push	r29
    1fa2:	cf 93       	push	r28
    1fa4:	00 d0       	rcall	.+0      	; 0x1fa6 <SI_Host_ConfigurePipes+0x22>
    1fa6:	00 d0       	rcall	.+0      	; 0x1fa8 <SI_Host_ConfigurePipes+0x24>
    1fa8:	00 d0       	rcall	.+0      	; 0x1faa <SI_Host_ConfigurePipes+0x26>
    1faa:	cd b7       	in	r28, 0x3d	; 61
    1fac:	de b7       	in	r29, 0x3e	; 62
    1fae:	6c 01       	movw	r12, r24
    1fb0:	7a 83       	std	Y+2, r23	; 0x02
    1fb2:	69 83       	std	Y+1, r22	; 0x01
    1fb4:	5c 83       	std	Y+4, r21	; 0x04
    1fb6:	4b 83       	std	Y+3, r20	; 0x03
    1fb8:	06 96       	adiw	r24, 0x06	; 6
    1fba:	fc 01       	movw	r30, r24
    1fbc:	8d e0       	ldi	r24, 0x0D	; 13
    1fbe:	df 01       	movw	r26, r30
    1fc0:	1d 92       	st	X+, r1
    1fc2:	8a 95       	dec	r24
    1fc4:	e9 f7       	brne	.-6      	; 0x1fc0 <SI_Host_ConfigurePipes+0x3c>
    1fc6:	eb 81       	ldd	r30, Y+3	; 0x03
    1fc8:	fc 81       	ldd	r31, Y+4	; 0x04
    1fca:	81 81       	ldd	r24, Z+1	; 0x01
    1fcc:	82 30       	cpi	r24, 0x02	; 2
    1fce:	09 f0       	breq	.+2      	; 0x1fd2 <SI_Host_ConfigurePipes+0x4e>
    1fd0:	9e c0       	rjmp	.+316    	; 0x210e <__stack+0xf>
    1fd2:	44 24       	eor	r4, r4
    1fd4:	55 24       	eor	r5, r5
    1fd6:	aa 24       	eor	r10, r10
    1fd8:	bb 24       	eor	r11, r11
    1fda:	88 24       	eor	r8, r8
    1fdc:	99 24       	eor	r9, r9
    1fde:	66 24       	eor	r6, r6
    1fe0:	77 24       	eor	r7, r7
    1fe2:	83 e0       	ldi	r24, 0x03	; 3
    1fe4:	e8 2e       	mov	r14, r24
    1fe6:	f1 2c       	mov	r15, r1
    1fe8:	ec 0e       	add	r14, r28
    1fea:	fd 1e       	adc	r15, r29
    1fec:	8e 01       	movw	r16, r28
    1fee:	0f 5f       	subi	r16, 0xFF	; 255
    1ff0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ff2:	41 14       	cp	r4, r1
    1ff4:	51 04       	cpc	r5, r1
    1ff6:	39 f0       	breq	.+14     	; 0x2006 <SI_Host_ConfigurePipes+0x82>
    1ff8:	c8 01       	movw	r24, r16
    1ffa:	b7 01       	movw	r22, r14
    1ffc:	4c ea       	ldi	r20, 0xAC	; 172
    1ffe:	5f e0       	ldi	r21, 0x0F	; 15
    2000:	e4 dd       	rcall	.-1080   	; 0x1bca <USB_GetNextDescriptorComp>
    2002:	88 23       	and	r24, r24
    2004:	89 f0       	breq	.+34     	; 0x2028 <SI_Host_ConfigurePipes+0xa4>
    2006:	c8 01       	movw	r24, r16
    2008:	b7 01       	movw	r22, r14
    200a:	4b e9       	ldi	r20, 0x9B	; 155
    200c:	5f e0       	ldi	r21, 0x0F	; 15
    200e:	dd dd       	rcall	.-1094   	; 0x1bca <USB_GetNextDescriptorComp>
    2010:	88 23       	and	r24, r24
    2012:	09 f0       	breq	.+2      	; 0x2016 <SI_Host_ConfigurePipes+0x92>
    2014:	7e c0       	rjmp	.+252    	; 0x2112 <__stack+0x13>
    2016:	4b 80       	ldd	r4, Y+3	; 0x03
    2018:	5c 80       	ldd	r5, Y+4	; 0x04
    201a:	aa 24       	eor	r10, r10
    201c:	bb 24       	eor	r11, r11
    201e:	88 24       	eor	r8, r8
    2020:	99 24       	eor	r9, r9
    2022:	66 24       	eor	r6, r6
    2024:	77 24       	eor	r7, r7
    2026:	e5 cf       	rjmp	.-54     	; 0x1ff2 <SI_Host_ConfigurePipes+0x6e>
    2028:	eb 81       	ldd	r30, Y+3	; 0x03
    202a:	fc 81       	ldd	r31, Y+4	; 0x04
    202c:	82 81       	ldd	r24, Z+2	; 0x02
    202e:	87 ff       	sbrs	r24, 7
    2030:	06 c0       	rjmp	.+12     	; 0x203e <SI_Host_ConfigurePipes+0xba>
    2032:	83 81       	ldd	r24, Z+3	; 0x03
    2034:	83 70       	andi	r24, 0x03	; 3
    2036:	83 30       	cpi	r24, 0x03	; 3
    2038:	21 f4       	brne	.+8      	; 0x2042 <SI_Host_ConfigurePipes+0xbe>
    203a:	5f 01       	movw	r10, r30
    203c:	03 c0       	rjmp	.+6      	; 0x2044 <SI_Host_ConfigurePipes+0xc0>
    203e:	4f 01       	movw	r8, r30
    2040:	01 c0       	rjmp	.+2      	; 0x2044 <SI_Host_ConfigurePipes+0xc0>
    2042:	3f 01       	movw	r6, r30
    2044:	61 14       	cp	r6, r1
    2046:	71 04       	cpc	r7, r1
    2048:	a1 f2       	breq	.-88     	; 0x1ff2 <SI_Host_ConfigurePipes+0x6e>
    204a:	81 14       	cp	r8, r1
    204c:	91 04       	cpc	r9, r1
    204e:	89 f2       	breq	.-94     	; 0x1ff2 <SI_Host_ConfigurePipes+0x6e>
    2050:	a1 14       	cp	r10, r1
    2052:	b1 04       	cpc	r11, r1
    2054:	71 f2       	breq	.-100    	; 0x1ff2 <SI_Host_ConfigurePipes+0x6e>
    2056:	91 e0       	ldi	r25, 0x01	; 1
    2058:	f6 01       	movw	r30, r12
    205a:	80 81       	ld	r24, Z
    205c:	98 17       	cp	r25, r24
    205e:	71 f4       	brne	.+28     	; 0x207c <SI_Host_ConfigurePipes+0xf8>
    2060:	d3 01       	movw	r26, r6
    2062:	14 96       	adiw	r26, 0x04	; 4
    2064:	0d 91       	ld	r16, X+
    2066:	1c 91       	ld	r17, X
    2068:	15 97       	sbiw	r26, 0x05	; 5
    206a:	12 96       	adiw	r26, 0x02	; 2
    206c:	2c 91       	ld	r18, X
    206e:	12 97       	sbiw	r26, 0x02	; 2
    2070:	81 81       	ldd	r24, Z+1	; 0x01
    2072:	11 87       	std	Z+9, r17	; 0x09
    2074:	00 87       	std	Z+8, r16	; 0x08
    2076:	30 e0       	ldi	r19, 0x00	; 0
    2078:	40 e1       	ldi	r20, 0x10	; 16
    207a:	11 c0       	rjmp	.+34     	; 0x209e <SI_Host_ConfigurePipes+0x11a>
    207c:	f6 01       	movw	r30, r12
    207e:	82 81       	ldd	r24, Z+2	; 0x02
    2080:	98 17       	cp	r25, r24
    2082:	79 f4       	brne	.+30     	; 0x20a2 <SI_Host_ConfigurePipes+0x11e>
    2084:	d4 01       	movw	r26, r8
    2086:	14 96       	adiw	r26, 0x04	; 4
    2088:	0d 91       	ld	r16, X+
    208a:	1c 91       	ld	r17, X
    208c:	15 97       	sbiw	r26, 0x05	; 5
    208e:	12 96       	adiw	r26, 0x02	; 2
    2090:	2c 91       	ld	r18, X
    2092:	12 97       	sbiw	r26, 0x02	; 2
    2094:	83 81       	ldd	r24, Z+3	; 0x03
    2096:	13 87       	std	Z+11, r17	; 0x0b
    2098:	02 87       	std	Z+10, r16	; 0x0a
    209a:	30 e0       	ldi	r19, 0x00	; 0
    209c:	40 e2       	ldi	r20, 0x20	; 32
    209e:	62 e0       	ldi	r22, 0x02	; 2
    20a0:	14 c0       	rjmp	.+40     	; 0x20ca <SI_Host_ConfigurePipes+0x146>
    20a2:	f6 01       	movw	r30, r12
    20a4:	84 81       	ldd	r24, Z+4	; 0x04
    20a6:	98 17       	cp	r25, r24
    20a8:	11 f5       	brne	.+68     	; 0x20ee <SI_Host_ConfigurePipes+0x16a>
    20aa:	d5 01       	movw	r26, r10
    20ac:	14 96       	adiw	r26, 0x04	; 4
    20ae:	0d 91       	ld	r16, X+
    20b0:	1c 91       	ld	r17, X
    20b2:	15 97       	sbiw	r26, 0x05	; 5
    20b4:	12 96       	adiw	r26, 0x02	; 2
    20b6:	2c 91       	ld	r18, X
    20b8:	12 97       	sbiw	r26, 0x02	; 2
    20ba:	85 81       	ldd	r24, Z+5	; 0x05
    20bc:	16 96       	adiw	r26, 0x06	; 6
    20be:	3c 91       	ld	r19, X
    20c0:	16 97       	sbiw	r26, 0x06	; 6
    20c2:	15 87       	std	Z+13, r17	; 0x0d
    20c4:	04 87       	std	Z+12, r16	; 0x0c
    20c6:	40 e1       	ldi	r20, 0x10	; 16
    20c8:	63 e0       	ldi	r22, 0x03	; 3
    20ca:	88 23       	and	r24, r24
    20cc:	11 f0       	breq	.+4      	; 0x20d2 <SI_Host_ConfigurePipes+0x14e>
    20ce:	54 e0       	ldi	r21, 0x04	; 4
    20d0:	01 c0       	rjmp	.+2      	; 0x20d4 <SI_Host_ConfigurePipes+0x150>
    20d2:	50 e0       	ldi	r21, 0x00	; 0
    20d4:	89 2f       	mov	r24, r25
    20d6:	e5 2e       	mov	r14, r21
    20d8:	3d 83       	std	Y+5, r19	; 0x05
    20da:	9e 83       	std	Y+6, r25	; 0x06
    20dc:	86 da       	rcall	.-2804   	; 0x15ea <Pipe_ConfigurePipe>
    20de:	3d 81       	ldd	r19, Y+5	; 0x05
    20e0:	9e 81       	ldd	r25, Y+6	; 0x06
    20e2:	88 23       	and	r24, r24
    20e4:	c1 f0       	breq	.+48     	; 0x2116 <__stack+0x17>
    20e6:	33 23       	and	r19, r19
    20e8:	11 f0       	breq	.+4      	; 0x20ee <SI_Host_ConfigurePipes+0x16a>
    20ea:	30 93 ad 00 	sts	0x00AD, r19
    20ee:	9f 5f       	subi	r25, 0xFF	; 255
    20f0:	97 30       	cpi	r25, 0x07	; 7
    20f2:	09 f0       	breq	.+2      	; 0x20f6 <SI_Host_ConfigurePipes+0x172>
    20f4:	b1 cf       	rjmp	.-158    	; 0x2058 <SI_Host_ConfigurePipes+0xd4>
    20f6:	f2 01       	movw	r30, r4
    20f8:	82 81       	ldd	r24, Z+2	; 0x02
    20fa:	d6 01       	movw	r26, r12
    20fc:	17 96       	adiw	r26, 0x07	; 7
    20fe:	8c 93       	st	X, r24
    2100:	17 97       	sbiw	r26, 0x07	; 7
    2102:	81 e0       	ldi	r24, 0x01	; 1
    2104:	16 96       	adiw	r26, 0x06	; 6
    2106:	8c 93       	st	X, r24
    2108:	16 97       	sbiw	r26, 0x06	; 6
    210a:	80 e0       	ldi	r24, 0x00	; 0
    210c:	05 c0       	rjmp	.+10     	; 0x2118 <__stack+0x19>
    210e:	81 e0       	ldi	r24, 0x01	; 1
    2110:	03 c0       	rjmp	.+6      	; 0x2118 <__stack+0x19>
    2112:	82 e0       	ldi	r24, 0x02	; 2
    2114:	01 c0       	rjmp	.+2      	; 0x2118 <__stack+0x19>
    2116:	83 e0       	ldi	r24, 0x03	; 3
    2118:	26 96       	adiw	r28, 0x06	; 6
    211a:	0f b6       	in	r0, 0x3f	; 63
    211c:	f8 94       	cli
    211e:	de bf       	out	0x3e, r29	; 62
    2120:	0f be       	out	0x3f, r0	; 63
    2122:	cd bf       	out	0x3d, r28	; 61
    2124:	cf 91       	pop	r28
    2126:	df 91       	pop	r29
    2128:	1f 91       	pop	r17
    212a:	0f 91       	pop	r16
    212c:	ff 90       	pop	r15
    212e:	ef 90       	pop	r14
    2130:	df 90       	pop	r13
    2132:	cf 90       	pop	r12
    2134:	bf 90       	pop	r11
    2136:	af 90       	pop	r10
    2138:	9f 90       	pop	r9
    213a:	8f 90       	pop	r8
    213c:	7f 90       	pop	r7
    213e:	6f 90       	pop	r6
    2140:	5f 90       	pop	r5
    2142:	4f 90       	pop	r4
    2144:	08 95       	ret

00002146 <SI_Host_SendBlockHeader>:
    2146:	1f 93       	push	r17
    2148:	cf 93       	push	r28
    214a:	df 93       	push	r29
    214c:	fc 01       	movw	r30, r24
    214e:	eb 01       	movw	r28, r22
    2150:	80 91 f6 03 	lds	r24, 0x03F6
    2154:	8b 30       	cpi	r24, 0x0B	; 11
    2156:	09 f0       	breq	.+2      	; 0x215a <SI_Host_SendBlockHeader+0x14>
    2158:	3d c0       	rjmp	.+122    	; 0x21d4 <SI_Host_SendBlockHeader+0x8e>
    215a:	86 81       	ldd	r24, Z+6	; 0x06
    215c:	88 23       	and	r24, r24
    215e:	d1 f1       	breq	.+116    	; 0x21d4 <SI_Host_SendBlockHeader+0x8e>
    2160:	86 85       	ldd	r24, Z+14	; 0x0e
    2162:	88 23       	and	r24, r24
    2164:	81 f0       	breq	.+32     	; 0x2186 <SI_Host_SendBlockHeader+0x40>
    2166:	27 85       	ldd	r18, Z+15	; 0x0f
    2168:	30 89       	ldd	r19, Z+16	; 0x10
    216a:	41 89       	ldd	r20, Z+17	; 0x11
    216c:	52 89       	ldd	r21, Z+18	; 0x12
    216e:	28 87       	std	Y+8, r18	; 0x08
    2170:	39 87       	std	Y+9, r19	; 0x09
    2172:	4a 87       	std	Y+10, r20	; 0x0a
    2174:	5b 87       	std	Y+11, r21	; 0x0b
    2176:	2f 5f       	subi	r18, 0xFF	; 255
    2178:	3f 4f       	sbci	r19, 0xFF	; 255
    217a:	4f 4f       	sbci	r20, 0xFF	; 255
    217c:	5f 4f       	sbci	r21, 0xFF	; 255
    217e:	27 87       	std	Z+15, r18	; 0x0f
    2180:	30 8b       	std	Z+16, r19	; 0x10
    2182:	41 8b       	std	Z+17, r20	; 0x11
    2184:	52 8b       	std	Z+18, r21	; 0x12
    2186:	82 81       	ldd	r24, Z+2	; 0x02
    2188:	80 93 a7 00 	sts	0x00A7, r24
    218c:	80 91 a9 00 	lds	r24, 0x00A9
    2190:	8f 7b       	andi	r24, 0xBF	; 191
    2192:	80 93 a9 00 	sts	0x00A9, r24
    2196:	ce 01       	movw	r24, r28
    2198:	6c e0       	ldi	r22, 0x0C	; 12
    219a:	70 e0       	ldi	r23, 0x00	; 0
    219c:	40 e0       	ldi	r20, 0x00	; 0
    219e:	50 e0       	ldi	r21, 0x00	; 0
    21a0:	f7 db       	rcall	.-2066   	; 0x1990 <Pipe_Write_Stream_LE>
    21a2:	18 2f       	mov	r17, r24
    21a4:	88 23       	and	r24, r24
    21a6:	c9 f4       	brne	.+50     	; 0x21da <SI_Host_SendBlockHeader+0x94>
    21a8:	68 81       	ld	r22, Y
    21aa:	6c 50       	subi	r22, 0x0C	; 12
    21ac:	41 f0       	breq	.+16     	; 0x21be <SI_Host_SendBlockHeader+0x78>
    21ae:	ce 01       	movw	r24, r28
    21b0:	0c 96       	adiw	r24, 0x0c	; 12
    21b2:	70 e0       	ldi	r23, 0x00	; 0
    21b4:	40 e0       	ldi	r20, 0x00	; 0
    21b6:	50 e0       	ldi	r21, 0x00	; 0
    21b8:	eb db       	rcall	.-2090   	; 0x1990 <Pipe_Write_Stream_LE>
    21ba:	88 23       	and	r24, r24
    21bc:	69 f4       	brne	.+26     	; 0x21d8 <SI_Host_SendBlockHeader+0x92>
    21be:	80 91 a6 00 	lds	r24, 0x00A6
    21c2:	8b 77       	andi	r24, 0x7B	; 123
    21c4:	80 93 a6 00 	sts	0x00A6, r24
    21c8:	80 91 a9 00 	lds	r24, 0x00A9
    21cc:	80 64       	ori	r24, 0x40	; 64
    21ce:	80 93 a9 00 	sts	0x00A9, r24
    21d2:	03 c0       	rjmp	.+6      	; 0x21da <SI_Host_SendBlockHeader+0x94>
    21d4:	12 e0       	ldi	r17, 0x02	; 2
    21d6:	01 c0       	rjmp	.+2      	; 0x21da <SI_Host_SendBlockHeader+0x94>
    21d8:	18 2f       	mov	r17, r24
    21da:	81 2f       	mov	r24, r17
    21dc:	df 91       	pop	r29
    21de:	cf 91       	pop	r28
    21e0:	1f 91       	pop	r17
    21e2:	08 95       	ret

000021e4 <SI_Host_ReceiveBlockHeader>:
    21e4:	cf 93       	push	r28
    21e6:	df 93       	push	r29
    21e8:	fc 01       	movw	r30, r24
    21ea:	eb 01       	movw	r28, r22
    21ec:	20 91 a2 00 	lds	r18, 0x00A2
    21f0:	30 91 a3 00 	lds	r19, 0x00A3
    21f4:	80 91 f6 03 	lds	r24, 0x03F6
    21f8:	8b 30       	cpi	r24, 0x0B	; 11
    21fa:	09 f0       	breq	.+2      	; 0x21fe <SI_Host_ReceiveBlockHeader+0x1a>
    21fc:	76 c0       	rjmp	.+236    	; 0x22ea <SI_Host_ReceiveBlockHeader+0x106>
    21fe:	86 81       	ldd	r24, Z+6	; 0x06
    2200:	88 23       	and	r24, r24
    2202:	09 f4       	brne	.+2      	; 0x2206 <SI_Host_ReceiveBlockHeader+0x22>
    2204:	72 c0       	rjmp	.+228    	; 0x22ea <SI_Host_ReceiveBlockHeader+0x106>
    2206:	80 81       	ld	r24, Z
    2208:	80 93 a7 00 	sts	0x00A7, r24
    220c:	80 91 a9 00 	lds	r24, 0x00A9
    2210:	8f 7b       	andi	r24, 0xBF	; 191
    2212:	80 93 a9 00 	sts	0x00A9, r24
    2216:	80 e1       	ldi	r24, 0x10	; 16
    2218:	97 e2       	ldi	r25, 0x27	; 39
    221a:	41 c0       	rjmp	.+130    	; 0x229e <SI_Host_ReceiveBlockHeader+0xba>
    221c:	40 91 a2 00 	lds	r20, 0x00A2
    2220:	50 91 a3 00 	lds	r21, 0x00A3
    2224:	42 17       	cp	r20, r18
    2226:	53 07       	cpc	r21, r19
    2228:	29 f0       	breq	.+10     	; 0x2234 <SI_Host_ReceiveBlockHeader+0x50>
    222a:	00 97       	sbiw	r24, 0x00	; 0
    222c:	09 f4       	brne	.+2      	; 0x2230 <SI_Host_ReceiveBlockHeader+0x4c>
    222e:	5b c0       	rjmp	.+182    	; 0x22e6 <SI_Host_ReceiveBlockHeader+0x102>
    2230:	01 97       	sbiw	r24, 0x01	; 1
    2232:	9a 01       	movw	r18, r20
    2234:	40 91 a9 00 	lds	r20, 0x00A9
    2238:	40 64       	ori	r20, 0x40	; 64
    223a:	40 93 a9 00 	sts	0x00A9, r20
    223e:	42 81       	ldd	r20, Z+2	; 0x02
    2240:	40 93 a7 00 	sts	0x00A7, r20
    2244:	40 91 a9 00 	lds	r20, 0x00A9
    2248:	4f 7b       	andi	r20, 0xBF	; 191
    224a:	40 93 a9 00 	sts	0x00A9, r20
    224e:	40 91 a6 00 	lds	r20, 0x00A6
    2252:	41 fd       	sbrc	r20, 1
    2254:	11 c0       	rjmp	.+34     	; 0x2278 <SI_Host_ReceiveBlockHeader+0x94>
    2256:	40 91 a9 00 	lds	r20, 0x00A9
    225a:	40 64       	ori	r20, 0x40	; 64
    225c:	40 93 a9 00 	sts	0x00A9, r20
    2260:	40 81       	ld	r20, Z
    2262:	40 93 a7 00 	sts	0x00A7, r20
    2266:	40 91 a9 00 	lds	r20, 0x00A9
    226a:	4f 7b       	andi	r20, 0xBF	; 191
    226c:	40 93 a9 00 	sts	0x00A9, r20
    2270:	40 91 a6 00 	lds	r20, 0x00A6
    2274:	41 ff       	sbrs	r20, 1
    2276:	0f c0       	rjmp	.+30     	; 0x2296 <SI_Host_ReceiveBlockHeader+0xb2>
    2278:	80 91 aa 00 	lds	r24, 0x00AA
    227c:	8f 70       	andi	r24, 0x0F	; 15
    227e:	90 91 aa 00 	lds	r25, 0x00AA
    2282:	90 73       	andi	r25, 0x30	; 48
    2284:	90 31       	cpi	r25, 0x10	; 16
    2286:	11 f4       	brne	.+4      	; 0x228c <SI_Host_ReceiveBlockHeader+0xa8>
    2288:	90 e8       	ldi	r25, 0x80	; 128
    228a:	01 c0       	rjmp	.+2      	; 0x228e <SI_Host_ReceiveBlockHeader+0xaa>
    228c:	90 e0       	ldi	r25, 0x00	; 0
    228e:	89 2b       	or	r24, r25
    2290:	2d de       	rcall	.-934    	; 0x1eec <USB_Host_ClearEndpointStall>
    2292:	81 e0       	ldi	r24, 0x01	; 1
    2294:	2b c0       	rjmp	.+86     	; 0x22ec <SI_Host_ReceiveBlockHeader+0x108>
    2296:	40 91 f6 03 	lds	r20, 0x03F6
    229a:	41 30       	cpi	r20, 0x01	; 1
    229c:	31 f1       	breq	.+76     	; 0x22ea <SI_Host_ReceiveBlockHeader+0x106>
    229e:	40 91 a6 00 	lds	r20, 0x00A6
    22a2:	40 ff       	sbrs	r20, 0
    22a4:	bb cf       	rjmp	.-138    	; 0x221c <SI_Host_ReceiveBlockHeader+0x38>
    22a6:	ce 01       	movw	r24, r28
    22a8:	6c e0       	ldi	r22, 0x0C	; 12
    22aa:	70 e0       	ldi	r23, 0x00	; 0
    22ac:	40 e0       	ldi	r20, 0x00	; 0
    22ae:	50 e0       	ldi	r21, 0x00	; 0
    22b0:	d2 db       	rcall	.-2140   	; 0x1a56 <Pipe_Read_Stream_LE>
    22b2:	8c 81       	ldd	r24, Y+4	; 0x04
    22b4:	9d 81       	ldd	r25, Y+5	; 0x05
    22b6:	83 30       	cpi	r24, 0x03	; 3
    22b8:	91 05       	cpc	r25, r1
    22ba:	71 f4       	brne	.+28     	; 0x22d8 <SI_Host_ReceiveBlockHeader+0xf4>
    22bc:	68 81       	ld	r22, Y
    22be:	6c 50       	subi	r22, 0x0C	; 12
    22c0:	31 f0       	breq	.+12     	; 0x22ce <SI_Host_ReceiveBlockHeader+0xea>
    22c2:	ce 01       	movw	r24, r28
    22c4:	0c 96       	adiw	r24, 0x0c	; 12
    22c6:	70 e0       	ldi	r23, 0x00	; 0
    22c8:	40 e0       	ldi	r20, 0x00	; 0
    22ca:	50 e0       	ldi	r21, 0x00	; 0
    22cc:	c4 db       	rcall	.-2168   	; 0x1a56 <Pipe_Read_Stream_LE>
    22ce:	80 91 a6 00 	lds	r24, 0x00A6
    22d2:	8e 77       	andi	r24, 0x7E	; 126
    22d4:	80 93 a6 00 	sts	0x00A6, r24
    22d8:	80 91 a9 00 	lds	r24, 0x00A9
    22dc:	80 64       	ori	r24, 0x40	; 64
    22de:	80 93 a9 00 	sts	0x00A9, r24
    22e2:	80 e0       	ldi	r24, 0x00	; 0
    22e4:	03 c0       	rjmp	.+6      	; 0x22ec <SI_Host_ReceiveBlockHeader+0x108>
    22e6:	83 e0       	ldi	r24, 0x03	; 3
    22e8:	01 c0       	rjmp	.+2      	; 0x22ec <SI_Host_ReceiveBlockHeader+0x108>
    22ea:	82 e0       	ldi	r24, 0x02	; 2
    22ec:	df 91       	pop	r29
    22ee:	cf 91       	pop	r28
    22f0:	08 95       	ret

000022f2 <SI_Host_ReadData>:
    22f2:	fc 01       	movw	r30, r24
    22f4:	cb 01       	movw	r24, r22
    22f6:	20 91 f6 03 	lds	r18, 0x03F6
    22fa:	2b 30       	cpi	r18, 0x0B	; 11
    22fc:	a9 f4       	brne	.+42     	; 0x2328 <SI_Host_ReadData+0x36>
    22fe:	26 81       	ldd	r18, Z+6	; 0x06
    2300:	22 23       	and	r18, r18
    2302:	a1 f0       	breq	.+40     	; 0x232c <SI_Host_ReadData+0x3a>
    2304:	20 81       	ld	r18, Z
    2306:	20 93 a7 00 	sts	0x00A7, r18
    230a:	20 91 a9 00 	lds	r18, 0x00A9
    230e:	2f 7b       	andi	r18, 0xBF	; 191
    2310:	20 93 a9 00 	sts	0x00A9, r18
    2314:	ba 01       	movw	r22, r20
    2316:	40 e0       	ldi	r20, 0x00	; 0
    2318:	50 e0       	ldi	r21, 0x00	; 0
    231a:	9d db       	rcall	.-2246   	; 0x1a56 <Pipe_Read_Stream_LE>
    231c:	90 91 a9 00 	lds	r25, 0x00A9
    2320:	90 64       	ori	r25, 0x40	; 64
    2322:	90 93 a9 00 	sts	0x00A9, r25
    2326:	08 95       	ret
    2328:	82 e0       	ldi	r24, 0x02	; 2
    232a:	08 95       	ret
    232c:	82 e0       	ldi	r24, 0x02	; 2
    232e:	08 95       	ret

00002330 <SI_Host_IsEventReceived>:
    2330:	fc 01       	movw	r30, r24
    2332:	80 91 f6 03 	lds	r24, 0x03F6
    2336:	8b 30       	cpi	r24, 0x0B	; 11
    2338:	d1 f4       	brne	.+52     	; 0x236e <SI_Host_IsEventReceived+0x3e>
    233a:	86 81       	ldd	r24, Z+6	; 0x06
    233c:	88 23       	and	r24, r24
    233e:	c9 f0       	breq	.+50     	; 0x2372 <SI_Host_IsEventReceived+0x42>
    2340:	84 81       	ldd	r24, Z+4	; 0x04
    2342:	80 93 a7 00 	sts	0x00A7, r24
    2346:	80 91 a9 00 	lds	r24, 0x00A9
    234a:	8f 7b       	andi	r24, 0xBF	; 191
    234c:	80 93 a9 00 	sts	0x00A9, r24
    2350:	20 91 f6 00 	lds	r18, 0x00F6
    2354:	30 91 f7 00 	lds	r19, 0x00F7
    2358:	81 e0       	ldi	r24, 0x01	; 1
    235a:	21 15       	cp	r18, r1
    235c:	31 05       	cpc	r19, r1
    235e:	09 f4       	brne	.+2      	; 0x2362 <SI_Host_IsEventReceived+0x32>
    2360:	80 e0       	ldi	r24, 0x00	; 0
    2362:	90 91 a9 00 	lds	r25, 0x00A9
    2366:	90 64       	ori	r25, 0x40	; 64
    2368:	90 93 a9 00 	sts	0x00A9, r25
    236c:	08 95       	ret
    236e:	80 e0       	ldi	r24, 0x00	; 0
    2370:	08 95       	ret
    2372:	80 e0       	ldi	r24, 0x00	; 0
    2374:	08 95       	ret

00002376 <SI_Host_ReceiveEventHeader>:
    2376:	fc 01       	movw	r30, r24
    2378:	cb 01       	movw	r24, r22
    237a:	20 91 f6 03 	lds	r18, 0x03F6
    237e:	2b 30       	cpi	r18, 0x0B	; 11
    2380:	d9 f4       	brne	.+54     	; 0x23b8 <SI_Host_ReceiveEventHeader+0x42>
    2382:	26 81       	ldd	r18, Z+6	; 0x06
    2384:	22 23       	and	r18, r18
    2386:	d1 f0       	breq	.+52     	; 0x23bc <SI_Host_ReceiveEventHeader+0x46>
    2388:	24 81       	ldd	r18, Z+4	; 0x04
    238a:	20 93 a7 00 	sts	0x00A7, r18
    238e:	20 91 a9 00 	lds	r18, 0x00A9
    2392:	2f 7b       	andi	r18, 0xBF	; 191
    2394:	20 93 a9 00 	sts	0x00A9, r18
    2398:	68 e1       	ldi	r22, 0x18	; 24
    239a:	70 e0       	ldi	r23, 0x00	; 0
    239c:	40 e0       	ldi	r20, 0x00	; 0
    239e:	50 e0       	ldi	r21, 0x00	; 0
    23a0:	5a db       	rcall	.-2380   	; 0x1a56 <Pipe_Read_Stream_LE>
    23a2:	90 91 a6 00 	lds	r25, 0x00A6
    23a6:	9e 77       	andi	r25, 0x7E	; 126
    23a8:	90 93 a6 00 	sts	0x00A6, r25
    23ac:	90 91 a9 00 	lds	r25, 0x00A9
    23b0:	90 64       	ori	r25, 0x40	; 64
    23b2:	90 93 a9 00 	sts	0x00A9, r25
    23b6:	08 95       	ret
    23b8:	82 e0       	ldi	r24, 0x02	; 2
    23ba:	08 95       	ret
    23bc:	82 e0       	ldi	r24, 0x02	; 2
    23be:	08 95       	ret

000023c0 <Serial_putchar>:
    23c0:	90 91 c8 00 	lds	r25, 0x00C8
    23c4:	95 ff       	sbrs	r25, 5
    23c6:	fc cf       	rjmp	.-8      	; 0x23c0 <Serial_putchar>
    23c8:	80 93 ce 00 	sts	0x00CE, r24
    23cc:	80 e0       	ldi	r24, 0x00	; 0
    23ce:	90 e0       	ldi	r25, 0x00	; 0
    23d0:	08 95       	ret

000023d2 <Serial_getchar>:
    23d2:	80 91 c8 00 	lds	r24, 0x00C8
    23d6:	87 ff       	sbrs	r24, 7
    23d8:	08 c0       	rjmp	.+16     	; 0x23ea <Serial_getchar+0x18>
    23da:	80 91 c8 00 	lds	r24, 0x00C8
    23de:	87 ff       	sbrs	r24, 7
    23e0:	07 c0       	rjmp	.+14     	; 0x23f0 <Serial_getchar+0x1e>
    23e2:	20 91 ce 00 	lds	r18, 0x00CE
    23e6:	30 e0       	ldi	r19, 0x00	; 0
    23e8:	05 c0       	rjmp	.+10     	; 0x23f4 <Serial_getchar+0x22>
    23ea:	2e ef       	ldi	r18, 0xFE	; 254
    23ec:	3f ef       	ldi	r19, 0xFF	; 255
    23ee:	02 c0       	rjmp	.+4      	; 0x23f4 <Serial_getchar+0x22>
    23f0:	2f ef       	ldi	r18, 0xFF	; 255
    23f2:	3f ef       	ldi	r19, 0xFF	; 255
    23f4:	c9 01       	movw	r24, r18
    23f6:	08 95       	ret

000023f8 <EVENT_USB_Host_DeviceAttached>:
 *  starts the library USB task to begin the enumeration and USB management process.
 */
void EVENT_USB_Host_DeviceAttached(void)
{
	
	if (g_bQuiteMode) return;
    23f8:	80 91 4d 02 	lds	r24, 0x024D
    23fc:	88 23       	and	r24, r24
    23fe:	21 f4       	brne	.+8      	; 0x2408 <EVENT_USB_Host_DeviceAttached+0x10>
	puts_P(PSTR("Device Attached.\r\n"));
    2400:	8f e4       	ldi	r24, 0x4F	; 79
    2402:	92 e0       	ldi	r25, 0x02	; 2
    2404:	0c 94 e7 22 	jmp	0x45ce	; 0x45ce <puts_P>
    2408:	08 95       	ret

0000240a <EVENT_USB_Host_DeviceUnattached>:
 *  stops the library USB task management process.
 */
void EVENT_USB_Host_DeviceUnattached(void)
{
	
	if (g_bQuiteMode) return;
    240a:	80 91 4d 02 	lds	r24, 0x024D
    240e:	88 23       	and	r24, r24
    2410:	21 f4       	brne	.+8      	; 0x241a <EVENT_USB_Host_DeviceUnattached+0x10>
	puts_P(PSTR("\r\nDevice Unattached.\r\n"));
    2412:	88 e3       	ldi	r24, 0x38	; 56
    2414:	92 e0       	ldi	r25, 0x02	; 2
    2416:	0c 94 e7 22 	jmp	0x45ce	; 0x45ce <puts_P>
    241a:	08 95       	ret

0000241c <EVENT_USB_Host_DeviceEnumerationComplete>:
/*********************************************************************************************************************
 *  Event handler for the USB_DeviceEnumerationComplete event. This indicates that a device has been successfully
 *  enumerated by the host and is now ready to be used by the application.
 */
void EVENT_USB_Host_DeviceEnumerationComplete(void)
{
    241c:	0f 93       	push	r16
    241e:	1f 93       	push	r17
    2420:	df 93       	push	r29
    2422:	cf 93       	push	r28
    2424:	cd b7       	in	r28, 0x3d	; 61
    2426:	de b7       	in	r29, 0x3e	; 62
    2428:	c2 50       	subi	r28, 0x02	; 2
    242a:	d2 40       	sbci	r29, 0x02	; 2
    242c:	0f b6       	in	r0, 0x3f	; 63
    242e:	f8 94       	cli
    2430:	de bf       	out	0x3e, r29	; 62
    2432:	0f be       	out	0x3f, r0	; 63
    2434:	cd bf       	out	0x3d, r28	; 61
	uint16_t ConfigDescriptorSize;
	uint8_t  ConfigDescriptorData[512];

	if (USB_Host_GetDeviceConfigDescriptor(1, &ConfigDescriptorSize, ConfigDescriptorData,
    2436:	8e 01       	movw	r16, r28
    2438:	0d 5f       	subi	r16, 0xFD	; 253
    243a:	1f 4f       	sbci	r17, 0xFF	; 255
    243c:	81 e0       	ldi	r24, 0x01	; 1
    243e:	be 01       	movw	r22, r28
    2440:	6f 5f       	subi	r22, 0xFF	; 255
    2442:	7f 4f       	sbci	r23, 0xFF	; 255
    2444:	a8 01       	movw	r20, r16
    2446:	20 e0       	ldi	r18, 0x00	; 0
    2448:	32 e0       	ldi	r19, 0x02	; 2
    244a:	68 db       	rcall	.-2352   	; 0x1b1c <USB_Host_GetDeviceConfigDescriptor>
    244c:	88 23       	and	r24, r24
    244e:	39 f0       	breq	.+14     	; 0x245e <EVENT_USB_Host_DeviceEnumerationComplete+0x42>
	                                       sizeof(ConfigDescriptorData)) != HOST_GETCONFIG_Successful)
	{
		if (!g_bQuiteMode) puts_P(PSTR("Error Retrieving Configuration Descriptor.\r\n"));
    2450:	80 91 4d 02 	lds	r24, 0x024D
    2454:	88 23       	and	r24, r24
    2456:	29 f5       	brne	.+74     	; 0x24a2 <EVENT_USB_Host_DeviceEnumerationComplete+0x86>
    2458:	8b e0       	ldi	r24, 0x0B	; 11
    245a:	92 e0       	ldi	r25, 0x02	; 2
    245c:	20 c0       	rjmp	.+64     	; 0x249e <EVENT_USB_Host_DeviceEnumerationComplete+0x82>
		return;
	}

	if (SI_Host_ConfigurePipes(&DigitalCamera_SI_Interface,
    245e:	69 81       	ldd	r22, Y+1	; 0x01
    2460:	7a 81       	ldd	r23, Y+2	; 0x02
    2462:	80 e0       	ldi	r24, 0x00	; 0
    2464:	91 e0       	ldi	r25, 0x01	; 1
    2466:	a8 01       	movw	r20, r16
    2468:	8d dd       	rcall	.-1254   	; 0x1f84 <SI_Host_ConfigurePipes>
    246a:	88 23       	and	r24, r24
    246c:	39 f0       	breq	.+14     	; 0x247c <EVENT_USB_Host_DeviceEnumerationComplete+0x60>
	                           ConfigDescriptorSize, ConfigDescriptorData) != SI_ENUMERROR_NoError)
	{
		if (!g_bQuiteMode) puts_P(PSTR("Attached Device Not a Valid Still Image Class Device.\r\n"));
    246e:	80 91 4d 02 	lds	r24, 0x024D
    2472:	88 23       	and	r24, r24
    2474:	b1 f4       	brne	.+44     	; 0x24a2 <EVENT_USB_Host_DeviceEnumerationComplete+0x86>
    2476:	83 ed       	ldi	r24, 0xD3	; 211
    2478:	91 e0       	ldi	r25, 0x01	; 1
    247a:	11 c0       	rjmp	.+34     	; 0x249e <EVENT_USB_Host_DeviceEnumerationComplete+0x82>
		return;
	}

	if (USB_Host_SetDeviceConfiguration(1) != HOST_SENDCONTROL_Successful)
    247c:	81 e0       	ldi	r24, 0x01	; 1
    247e:	11 dd       	rcall	.-1502   	; 0x1ea2 <USB_Host_SetDeviceConfiguration>
    2480:	88 23       	and	r24, r24
    2482:	39 f0       	breq	.+14     	; 0x2492 <EVENT_USB_Host_DeviceEnumerationComplete+0x76>
	{
		if (!g_bQuiteMode) puts_P(PSTR("Error Setting Device Configuration.\r\n"));
    2484:	80 91 4d 02 	lds	r24, 0x024D
    2488:	88 23       	and	r24, r24
    248a:	59 f4       	brne	.+22     	; 0x24a2 <EVENT_USB_Host_DeviceEnumerationComplete+0x86>
    248c:	8d ea       	ldi	r24, 0xAD	; 173
    248e:	91 e0       	ldi	r25, 0x01	; 1
    2490:	06 c0       	rjmp	.+12     	; 0x249e <EVENT_USB_Host_DeviceEnumerationComplete+0x82>
		return;
	}

	if (!g_bQuiteMode) puts_P(PSTR("Camera Device Enumerated.\r\n"));
    2492:	80 91 4d 02 	lds	r24, 0x024D
    2496:	88 23       	and	r24, r24
    2498:	21 f4       	brne	.+8      	; 0x24a2 <EVENT_USB_Host_DeviceEnumerationComplete+0x86>
    249a:	81 e9       	ldi	r24, 0x91	; 145
    249c:	91 e0       	ldi	r25, 0x01	; 1
    249e:	0e 94 e7 22 	call	0x45ce	; 0x45ce <puts_P>
}
    24a2:	ce 5f       	subi	r28, 0xFE	; 254
    24a4:	dd 4f       	sbci	r29, 0xFD	; 253
    24a6:	0f b6       	in	r0, 0x3f	; 63
    24a8:	f8 94       	cli
    24aa:	de bf       	out	0x3e, r29	; 62
    24ac:	0f be       	out	0x3f, r0	; 63
    24ae:	cd bf       	out	0x3d, r28	; 61
    24b0:	cf 91       	pop	r28
    24b2:	df 91       	pop	r29
    24b4:	1f 91       	pop	r17
    24b6:	0f 91       	pop	r16
    24b8:	08 95       	ret

000024ba <EVENT_USB_Host_HostError>:

/*********************************************************************************************************************
 *  Event handler for the USB_HostError event. This indicates that a hardware error occurred while in host mode. */
void EVENT_USB_Host_HostError(const uint8_t ErrorCode)
{
    24ba:	df 93       	push	r29
    24bc:	cf 93       	push	r28
    24be:	0f 92       	push	r0
    24c0:	cd b7       	in	r28, 0x3d	; 61
    24c2:	de b7       	in	r29, 0x3e	; 62
	USB_Disable();
    24c4:	89 83       	std	Y+1, r24	; 0x01
    24c6:	53 d9       	rcall	.-3418   	; 0x176e <USB_Disable>

	if (!g_bQuiteMode) printf_P(PSTR(ESC_FG_RED "Host Mode Error\r\n -- VBUS voltage dropped under 4.5V\r\n" ESC_FG_WHITE), ErrorCode);
    24c8:	90 91 4d 02 	lds	r25, 0x024D
    24cc:	89 81       	ldd	r24, Y+1	; 0x01
    24ce:	99 23       	and	r25, r25
    24d0:	a9 f4       	brne	.+42     	; 0x24fc <EVENT_USB_Host_HostError+0x42>
    24d2:	00 d0       	rcall	.+0      	; 0x24d4 <EVENT_USB_Host_HostError+0x1a>
    24d4:	00 d0       	rcall	.+0      	; 0x24d6 <EVENT_USB_Host_HostError+0x1c>
    24d6:	ed b7       	in	r30, 0x3d	; 61
    24d8:	fe b7       	in	r31, 0x3e	; 62
    24da:	31 96       	adiw	r30, 0x01	; 1
    24dc:	20 e5       	ldi	r18, 0x50	; 80
    24de:	31 e0       	ldi	r19, 0x01	; 1
    24e0:	ad b7       	in	r26, 0x3d	; 61
    24e2:	be b7       	in	r27, 0x3e	; 62
    24e4:	12 96       	adiw	r26, 0x02	; 2
    24e6:	3c 93       	st	X, r19
    24e8:	2e 93       	st	-X, r18
    24ea:	11 97       	sbiw	r26, 0x01	; 1
    24ec:	82 83       	std	Z+2, r24	; 0x02
    24ee:	13 82       	std	Z+3, r1	; 0x03
    24f0:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    24f4:	0f 90       	pop	r0
    24f6:	0f 90       	pop	r0
    24f8:	0f 90       	pop	r0
    24fa:	0f 90       	pop	r0
    24fc:	ff cf       	rjmp	.-2      	; 0x24fc <EVENT_USB_Host_HostError+0x42>

000024fe <EVENT_USB_Host_DeviceEnumerationFailed>:
 *  enumerating an attached USB device.
 */
void EVENT_USB_Host_DeviceEnumerationFailed(const uint8_t ErrorCode,
                                            const uint8_t SubErrorCode)
{
	if (!g_bQuiteMode) printf_P(PSTR(ESC_FG_RED "Dev Enum Error\r\n"
    24fe:	90 91 4d 02 	lds	r25, 0x024D
    2502:	99 23       	and	r25, r25
    2504:	39 f5       	brne	.+78     	; 0x2554 <EVENT_USB_Host_DeviceEnumerationFailed+0x56>
    2506:	90 91 f6 03 	lds	r25, 0x03F6
    250a:	2d b7       	in	r18, 0x3d	; 61
    250c:	3e b7       	in	r19, 0x3e	; 62
    250e:	28 50       	subi	r18, 0x08	; 8
    2510:	30 40       	sbci	r19, 0x00	; 0
    2512:	0f b6       	in	r0, 0x3f	; 63
    2514:	f8 94       	cli
    2516:	3e bf       	out	0x3e, r19	; 62
    2518:	0f be       	out	0x3f, r0	; 63
    251a:	2d bf       	out	0x3d, r18	; 61
    251c:	ed b7       	in	r30, 0x3d	; 61
    251e:	fe b7       	in	r31, 0x3e	; 62
    2520:	31 96       	adiw	r30, 0x01	; 1
    2522:	2a ef       	ldi	r18, 0xFA	; 250
    2524:	30 e0       	ldi	r19, 0x00	; 0
    2526:	ad b7       	in	r26, 0x3d	; 61
    2528:	be b7       	in	r27, 0x3e	; 62
    252a:	12 96       	adiw	r26, 0x02	; 2
    252c:	3c 93       	st	X, r19
    252e:	2e 93       	st	-X, r18
    2530:	11 97       	sbiw	r26, 0x01	; 1
    2532:	82 83       	std	Z+2, r24	; 0x02
    2534:	13 82       	std	Z+3, r1	; 0x03
    2536:	64 83       	std	Z+4, r22	; 0x04
    2538:	15 82       	std	Z+5, r1	; 0x05
    253a:	96 83       	std	Z+6, r25	; 0x06
    253c:	17 82       	std	Z+7, r1	; 0x07
    253e:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    2542:	2d b7       	in	r18, 0x3d	; 61
    2544:	3e b7       	in	r19, 0x3e	; 62
    2546:	28 5f       	subi	r18, 0xF8	; 248
    2548:	3f 4f       	sbci	r19, 0xFF	; 255
    254a:	0f b6       	in	r0, 0x3f	; 63
    254c:	f8 94       	cli
    254e:	3e bf       	out	0x3e, r19	; 62
    2550:	0f be       	out	0x3f, r0	; 63
    2552:	2d bf       	out	0x3d, r18	; 61
    2554:	08 95       	ret

00002556 <CameraControl_PTPErrorDescription>:

/*------------------------------------------------------------------------------
 * CameraControl_PTPErrorDescription
 */
void CameraControl_PTPErrorDescription ( uint16_t errNum )
{
    2556:	cf 93       	push	r28
    2558:	df 93       	push	r29
    255a:	ec 01       	movw	r28, r24
	if (g_bQuiteMode) return;
    255c:	80 91 4d 02 	lds	r24, 0x024D
    2560:	88 23       	and	r24, r24
    2562:	09 f0       	breq	.+2      	; 0x2566 <CameraControl_PTPErrorDescription+0x10>
    2564:	bf c0       	rjmp	.+382    	; 0x26e4 <CameraControl_PTPErrorDescription+0x18e>

	if (errNum==0x2001)
    2566:	80 e2       	ldi	r24, 0x20	; 32
    2568:	c1 30       	cpi	r28, 0x01	; 1
    256a:	d8 07       	cpc	r29, r24
    256c:	89 f4       	brne	.+34     	; 0x2590 <CameraControl_PTPErrorDescription+0x3a>
		printf_P(PSTR(ESC_FG_CYAN "		[0x%04x] " ESC_FG_WHITE), errNum); 
    256e:	00 d0       	rcall	.+0      	; 0x2570 <CameraControl_PTPErrorDescription+0x1a>
    2570:	00 d0       	rcall	.+0      	; 0x2572 <CameraControl_PTPErrorDescription+0x1c>
    2572:	80 e0       	ldi	r24, 0x00	; 0
    2574:	99 e0       	ldi	r25, 0x09	; 9
    2576:	ed b7       	in	r30, 0x3d	; 61
    2578:	fe b7       	in	r31, 0x3e	; 62
    257a:	92 83       	std	Z+2, r25	; 0x02
    257c:	81 83       	std	Z+1, r24	; 0x01
    257e:	d4 83       	std	Z+4, r29	; 0x04
    2580:	c3 83       	std	Z+3, r28	; 0x03
    2582:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    2586:	0f 90       	pop	r0
    2588:	0f 90       	pop	r0
    258a:	0f 90       	pop	r0
    258c:	0f 90       	pop	r0
    258e:	1f c0       	rjmp	.+62     	; 0x25ce <CameraControl_PTPErrorDescription+0x78>
	else
		printf_P(PSTR(ESC_FG_RED "		[0x%04x] " ESC_FG_WHITE), errNum); 
    2590:	00 d0       	rcall	.+0      	; 0x2592 <CameraControl_PTPErrorDescription+0x3c>
    2592:	00 d0       	rcall	.+0      	; 0x2594 <CameraControl_PTPErrorDescription+0x3e>
    2594:	8a ee       	ldi	r24, 0xEA	; 234
    2596:	98 e0       	ldi	r25, 0x08	; 8
    2598:	ed b7       	in	r30, 0x3d	; 61
    259a:	fe b7       	in	r31, 0x3e	; 62
    259c:	92 83       	std	Z+2, r25	; 0x02
    259e:	81 83       	std	Z+1, r24	; 0x01
    25a0:	d4 83       	std	Z+4, r29	; 0x04
    25a2:	c3 83       	std	Z+3, r28	; 0x03
    25a4:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>

	switch (errNum)
    25a8:	0f 90       	pop	r0
    25aa:	0f 90       	pop	r0
    25ac:	0f 90       	pop	r0
    25ae:	0f 90       	pop	r0
    25b0:	fe 01       	movw	r30, r28
    25b2:	e1 50       	subi	r30, 0x01	; 1
    25b4:	f0 42       	sbci	r31, 0x20	; 32
    25b6:	e0 32       	cpi	r30, 0x20	; 32
    25b8:	f1 05       	cpc	r31, r1
    25ba:	08 f0       	brcs	.+2      	; 0x25be <CameraControl_PTPErrorDescription+0x68>
    25bc:	88 c0       	rjmp	.+272    	; 0x26ce <CameraControl_PTPErrorDescription+0x178>
    25be:	e4 5b       	subi	r30, 0xB4	; 180
    25c0:	ff 4f       	sbci	r31, 0xFF	; 255
    25c2:	ee 0f       	add	r30, r30
    25c4:	ff 1f       	adc	r31, r31
    25c6:	05 90       	lpm	r0, Z+
    25c8:	f4 91       	lpm	r31, Z+
    25ca:	e0 2d       	mov	r30, r0
    25cc:	09 94       	ijmp
	{
		case 0x2001: printf_P(PSTR(ESC_FG_CYAN "OK\r\n" ESC_FG_WHITE)); break;
    25ce:	00 d0       	rcall	.+0      	; 0x25d0 <CameraControl_PTPErrorDescription+0x7a>
    25d0:	8b ed       	ldi	r24, 0xDB	; 219
    25d2:	98 e0       	ldi	r25, 0x08	; 8
    25d4:	7f c0       	rjmp	.+254    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2002: printf_P(PSTR(ESC_FG_RED "General Error\r\n" ESC_FG_WHITE)); break; 
    25d6:	00 d0       	rcall	.+0      	; 0x25d8 <CameraControl_PTPErrorDescription+0x82>
    25d8:	81 ec       	ldi	r24, 0xC1	; 193
    25da:	98 e0       	ldi	r25, 0x08	; 8
    25dc:	7b c0       	rjmp	.+246    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2003: printf_P(PSTR(ESC_FG_RED "Session Not Open\r\n" ESC_FG_WHITE)); break; 
    25de:	00 d0       	rcall	.+0      	; 0x25e0 <CameraControl_PTPErrorDescription+0x8a>
    25e0:	84 ea       	ldi	r24, 0xA4	; 164
    25e2:	98 e0       	ldi	r25, 0x08	; 8
    25e4:	77 c0       	rjmp	.+238    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2004: printf_P(PSTR(ESC_FG_RED "Invalid TransactionID\r\n" ESC_FG_WHITE)); break; 
    25e6:	00 d0       	rcall	.+0      	; 0x25e8 <CameraControl_PTPErrorDescription+0x92>
    25e8:	82 e8       	ldi	r24, 0x82	; 130
    25ea:	98 e0       	ldi	r25, 0x08	; 8
    25ec:	73 c0       	rjmp	.+230    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2005: printf_P(PSTR(ESC_FG_RED "Operation Not Supported\r\n" ESC_FG_WHITE)); break; 
    25ee:	00 d0       	rcall	.+0      	; 0x25f0 <CameraControl_PTPErrorDescription+0x9a>
    25f0:	8e e5       	ldi	r24, 0x5E	; 94
    25f2:	98 e0       	ldi	r25, 0x08	; 8
    25f4:	6f c0       	rjmp	.+222    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2006: printf_P(PSTR(ESC_FG_RED "Parameter Not Supported\r\n" ESC_FG_WHITE)); break;
    25f6:	00 d0       	rcall	.+0      	; 0x25f8 <CameraControl_PTPErrorDescription+0xa2>
    25f8:	8a e3       	ldi	r24, 0x3A	; 58
    25fa:	98 e0       	ldi	r25, 0x08	; 8
    25fc:	6b c0       	rjmp	.+214    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2007: printf_P(PSTR(ESC_FG_RED "Incomplete Transfer\r\n" ESC_FG_WHITE)); break; 
    25fe:	00 d0       	rcall	.+0      	; 0x2600 <CameraControl_PTPErrorDescription+0xaa>
    2600:	8a e1       	ldi	r24, 0x1A	; 26
    2602:	98 e0       	ldi	r25, 0x08	; 8
    2604:	67 c0       	rjmp	.+206    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2008: printf_P(PSTR(ESC_FG_RED "Invalid StorageID\r\n" ESC_FG_WHITE)); break;
    2606:	00 d0       	rcall	.+0      	; 0x2608 <CameraControl_PTPErrorDescription+0xb2>
    2608:	8c ef       	ldi	r24, 0xFC	; 252
    260a:	97 e0       	ldi	r25, 0x07	; 7
    260c:	63 c0       	rjmp	.+198    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2009: printf_P(PSTR(ESC_FG_RED "Invalid ObjectHandle\r\n" ESC_FG_WHITE)); break; 
    260e:	00 d0       	rcall	.+0      	; 0x2610 <CameraControl_PTPErrorDescription+0xba>
    2610:	8b ed       	ldi	r24, 0xDB	; 219
    2612:	97 e0       	ldi	r25, 0x07	; 7
    2614:	5f c0       	rjmp	.+190    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x200A: printf_P(PSTR(ESC_FG_RED "DeviceProp Not Supported\r\n" ESC_FG_WHITE)); break; 
    2616:	00 d0       	rcall	.+0      	; 0x2618 <CameraControl_PTPErrorDescription+0xc2>
    2618:	86 eb       	ldi	r24, 0xB6	; 182
    261a:	97 e0       	ldi	r25, 0x07	; 7
    261c:	5b c0       	rjmp	.+182    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x200B: printf_P(PSTR(ESC_FG_RED "Invalid ObjectFormatCode\r\n" ESC_FG_WHITE)); break;
    261e:	00 d0       	rcall	.+0      	; 0x2620 <CameraControl_PTPErrorDescription+0xca>
    2620:	81 e9       	ldi	r24, 0x91	; 145
    2622:	97 e0       	ldi	r25, 0x07	; 7
    2624:	57 c0       	rjmp	.+174    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x200C: printf_P(PSTR(ESC_FG_RED "Store Full\r\n" ESC_FG_WHITE)); break;
    2626:	00 d0       	rcall	.+0      	; 0x2628 <CameraControl_PTPErrorDescription+0xd2>
    2628:	8a e7       	ldi	r24, 0x7A	; 122
    262a:	97 e0       	ldi	r25, 0x07	; 7
    262c:	53 c0       	rjmp	.+166    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x200D: printf_P(PSTR(ESC_FG_RED "Object WriteProtected\r\n" ESC_FG_WHITE)); break; 
    262e:	00 d0       	rcall	.+0      	; 0x2630 <CameraControl_PTPErrorDescription+0xda>
    2630:	88 e5       	ldi	r24, 0x58	; 88
    2632:	97 e0       	ldi	r25, 0x07	; 7
    2634:	4f c0       	rjmp	.+158    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x200E: printf_P(PSTR(ESC_FG_RED "Store Read-Only\r\n" ESC_FG_WHITE)); break;
    2636:	00 d0       	rcall	.+0      	; 0x2638 <CameraControl_PTPErrorDescription+0xe2>
    2638:	8c e3       	ldi	r24, 0x3C	; 60
    263a:	97 e0       	ldi	r25, 0x07	; 7
    263c:	4b c0       	rjmp	.+150    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x200F: printf_P(PSTR(ESC_FG_RED "Access Denied\r\n" ESC_FG_WHITE)); break;
    263e:	00 d0       	rcall	.+0      	; 0x2640 <CameraControl_PTPErrorDescription+0xea>
    2640:	82 e2       	ldi	r24, 0x22	; 34
    2642:	97 e0       	ldi	r25, 0x07	; 7
    2644:	47 c0       	rjmp	.+142    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2010: printf_P(PSTR(ESC_FG_RED "No Thumbnail Present\r\n" ESC_FG_WHITE)); break;
    2646:	00 d0       	rcall	.+0      	; 0x2648 <CameraControl_PTPErrorDescription+0xf2>
    2648:	81 e0       	ldi	r24, 0x01	; 1
    264a:	97 e0       	ldi	r25, 0x07	; 7
    264c:	43 c0       	rjmp	.+134    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2011: printf_P(PSTR(ESC_FG_RED "SelfTest Failed\r\n" ESC_FG_WHITE)); break;
    264e:	00 d0       	rcall	.+0      	; 0x2650 <CameraControl_PTPErrorDescription+0xfa>
    2650:	85 ee       	ldi	r24, 0xE5	; 229
    2652:	96 e0       	ldi	r25, 0x06	; 6
    2654:	3f c0       	rjmp	.+126    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2012: printf_P(PSTR(ESC_FG_RED "Partial Deletion\r\n" ESC_FG_WHITE)); break;
    2656:	00 d0       	rcall	.+0      	; 0x2658 <CameraControl_PTPErrorDescription+0x102>
    2658:	88 ec       	ldi	r24, 0xC8	; 200
    265a:	96 e0       	ldi	r25, 0x06	; 6
    265c:	3b c0       	rjmp	.+118    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2013: printf_P(PSTR(ESC_FG_RED "Store Not Available\r\n" ESC_FG_WHITE)); break;
    265e:	00 d0       	rcall	.+0      	; 0x2660 <CameraControl_PTPErrorDescription+0x10a>
    2660:	88 ea       	ldi	r24, 0xA8	; 168
    2662:	96 e0       	ldi	r25, 0x06	; 6
    2664:	37 c0       	rjmp	.+110    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2014: printf_P(PSTR(ESC_FG_RED "Specification By Format Unsupported\r\n" ESC_FG_WHITE)); break; 
    2666:	00 d0       	rcall	.+0      	; 0x2668 <CameraControl_PTPErrorDescription+0x112>
    2668:	88 e7       	ldi	r24, 0x78	; 120
    266a:	96 e0       	ldi	r25, 0x06	; 6
    266c:	33 c0       	rjmp	.+102    	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2015: printf_P(PSTR(ESC_FG_RED "No Valid ObjectInfo\r\n" ESC_FG_WHITE)); break;
    266e:	00 d0       	rcall	.+0      	; 0x2670 <CameraControl_PTPErrorDescription+0x11a>
    2670:	88 e5       	ldi	r24, 0x58	; 88
    2672:	96 e0       	ldi	r25, 0x06	; 6
    2674:	2f c0       	rjmp	.+94     	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2016: printf_P(PSTR(ESC_FG_RED "Invalid Code Format\r\n" ESC_FG_WHITE)); break; 
    2676:	00 d0       	rcall	.+0      	; 0x2678 <CameraControl_PTPErrorDescription+0x122>
    2678:	88 e3       	ldi	r24, 0x38	; 56
    267a:	96 e0       	ldi	r25, 0x06	; 6
    267c:	2b c0       	rjmp	.+86     	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2017: printf_P(PSTR(ESC_FG_RED "Unknown Vendor Code\r\n" ESC_FG_WHITE)); break; 
    267e:	00 d0       	rcall	.+0      	; 0x2680 <CameraControl_PTPErrorDescription+0x12a>
    2680:	88 e1       	ldi	r24, 0x18	; 24
    2682:	96 e0       	ldi	r25, 0x06	; 6
    2684:	27 c0       	rjmp	.+78     	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2018: printf_P(PSTR(ESC_FG_RED "Capture Already Terminated\r\n" ESC_FG_WHITE)); break;
    2686:	00 d0       	rcall	.+0      	; 0x2688 <CameraControl_PTPErrorDescription+0x132>
    2688:	81 ef       	ldi	r24, 0xF1	; 241
    268a:	95 e0       	ldi	r25, 0x05	; 5
    268c:	23 c0       	rjmp	.+70     	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2019: printf_P(PSTR(ESC_FG_RED "Device Busy\r\n" ESC_FG_WHITE)); break; 
    268e:	00 d0       	rcall	.+0      	; 0x2690 <CameraControl_PTPErrorDescription+0x13a>
    2690:	89 ed       	ldi	r24, 0xD9	; 217
    2692:	95 e0       	ldi	r25, 0x05	; 5
    2694:	1f c0       	rjmp	.+62     	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x201A: printf_P(PSTR(ESC_FG_RED "Invalid ParentObject\r\n" ESC_FG_WHITE)); break; 
    2696:	00 d0       	rcall	.+0      	; 0x2698 <CameraControl_PTPErrorDescription+0x142>
    2698:	88 eb       	ldi	r24, 0xB8	; 184
    269a:	95 e0       	ldi	r25, 0x05	; 5
    269c:	1b c0       	rjmp	.+54     	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x201B: printf_P(PSTR(ESC_FG_RED "Invalid DeviceProp Format\r\n" ESC_FG_WHITE)); break; 
    269e:	00 d0       	rcall	.+0      	; 0x26a0 <CameraControl_PTPErrorDescription+0x14a>
    26a0:	82 e9       	ldi	r24, 0x92	; 146
    26a2:	95 e0       	ldi	r25, 0x05	; 5
    26a4:	17 c0       	rjmp	.+46     	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x201C: printf_P(PSTR(ESC_FG_RED "Invalid DeviceProp Value\r\n" ESC_FG_WHITE)); break; 
    26a6:	00 d0       	rcall	.+0      	; 0x26a8 <CameraControl_PTPErrorDescription+0x152>
    26a8:	8d e6       	ldi	r24, 0x6D	; 109
    26aa:	95 e0       	ldi	r25, 0x05	; 5
    26ac:	13 c0       	rjmp	.+38     	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x201D: printf_P(PSTR(ESC_FG_RED "Invalid Parameter\r\n" ESC_FG_WHITE)); break;
    26ae:	00 d0       	rcall	.+0      	; 0x26b0 <CameraControl_PTPErrorDescription+0x15a>
    26b0:	8f e4       	ldi	r24, 0x4F	; 79
    26b2:	95 e0       	ldi	r25, 0x05	; 5
    26b4:	0f c0       	rjmp	.+30     	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x201E: printf_P(PSTR(ESC_FG_RED "Session Already Open\r\n" ESC_FG_WHITE)); break;
    26b6:	00 d0       	rcall	.+0      	; 0x26b8 <CameraControl_PTPErrorDescription+0x162>
    26b8:	8e e2       	ldi	r24, 0x2E	; 46
    26ba:	95 e0       	ldi	r25, 0x05	; 5
    26bc:	0b c0       	rjmp	.+22     	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x201F: printf_P(PSTR(ESC_FG_RED "Transaction Cancelled\r\n" ESC_FG_WHITE)); break;
    26be:	00 d0       	rcall	.+0      	; 0x26c0 <CameraControl_PTPErrorDescription+0x16a>
    26c0:	8c e0       	ldi	r24, 0x0C	; 12
    26c2:	95 e0       	ldi	r25, 0x05	; 5
    26c4:	07 c0       	rjmp	.+14     	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		case 0x2020: printf_P(PSTR(ESC_FG_RED "Specification of Destination Unsupported\r\n" ESC_FG_WHITE)); break;
    26c6:	00 d0       	rcall	.+0      	; 0x26c8 <CameraControl_PTPErrorDescription+0x172>
    26c8:	87 ed       	ldi	r24, 0xD7	; 215
    26ca:	94 e0       	ldi	r25, 0x04	; 4
    26cc:	03 c0       	rjmp	.+6      	; 0x26d4 <CameraControl_PTPErrorDescription+0x17e>
		default: 	 printf_P(PSTR(ESC_FG_RED "Undefined or Vendor Specific\r\n" ESC_FG_WHITE)); break;
    26ce:	00 d0       	rcall	.+0      	; 0x26d0 <CameraControl_PTPErrorDescription+0x17a>
    26d0:	8e ea       	ldi	r24, 0xAE	; 174
    26d2:	94 e0       	ldi	r25, 0x04	; 4
    26d4:	ed b7       	in	r30, 0x3d	; 61
    26d6:	fe b7       	in	r31, 0x3e	; 62
    26d8:	92 83       	std	Z+2, r25	; 0x02
    26da:	81 83       	std	Z+1, r24	; 0x01
    26dc:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    26e0:	0f 90       	pop	r0
    26e2:	0f 90       	pop	r0
	}
}
    26e4:	df 91       	pop	r29
    26e6:	cf 91       	pop	r28
    26e8:	08 95       	ret

000026ea <CameraControl_DescribePIPE_RWSTREAMError>:

/*------------------------------------------------------------------------------
 * CameraControl_DescribePIPE_RWSTREAMError
 */
void CameraControl_DescribePIPE_RWSTREAMError ( uint8_t uiStatus )
{
    26ea:	1f 93       	push	r17
    26ec:	18 2f       	mov	r17, r24
	if (g_bQuiteMode) return;
    26ee:	80 91 4d 02 	lds	r24, 0x024D
    26f2:	88 23       	and	r24, r24
    26f4:	09 f0       	breq	.+2      	; 0x26f8 <CameraControl_DescribePIPE_RWSTREAMError+0xe>
    26f6:	48 c0       	rjmp	.+144    	; 0x2788 <CameraControl_DescribePIPE_RWSTREAMError+0x9e>

	printf_P(PSTR("PIMA Error (%d): "), uiStatus);
    26f8:	00 d0       	rcall	.+0      	; 0x26fa <CameraControl_DescribePIPE_RWSTREAMError+0x10>
    26fa:	00 d0       	rcall	.+0      	; 0x26fc <CameraControl_DescribePIPE_RWSTREAMError+0x12>
    26fc:	ed b7       	in	r30, 0x3d	; 61
    26fe:	fe b7       	in	r31, 0x3e	; 62
    2700:	31 96       	adiw	r30, 0x01	; 1
    2702:	2c e9       	ldi	r18, 0x9C	; 156
    2704:	34 e0       	ldi	r19, 0x04	; 4
    2706:	ad b7       	in	r26, 0x3d	; 61
    2708:	be b7       	in	r27, 0x3e	; 62
    270a:	12 96       	adiw	r26, 0x02	; 2
    270c:	3c 93       	st	X, r19
    270e:	2e 93       	st	-X, r18
    2710:	11 97       	sbiw	r26, 0x01	; 1
    2712:	12 83       	std	Z+2, r17	; 0x02
    2714:	13 82       	std	Z+3, r1	; 0x03
    2716:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>

	switch (uiStatus)
    271a:	0f 90       	pop	r0
    271c:	0f 90       	pop	r0
    271e:	0f 90       	pop	r0
    2720:	0f 90       	pop	r0
    2722:	13 30       	cpi	r17, 0x03	; 3
    2724:	a1 f0       	breq	.+40     	; 0x274e <CameraControl_DescribePIPE_RWSTREAMError+0x64>
    2726:	14 30       	cpi	r17, 0x04	; 4
    2728:	28 f4       	brcc	.+10     	; 0x2734 <CameraControl_DescribePIPE_RWSTREAMError+0x4a>
    272a:	11 30       	cpi	r17, 0x01	; 1
    272c:	41 f0       	breq	.+16     	; 0x273e <CameraControl_DescribePIPE_RWSTREAMError+0x54>
    272e:	12 30       	cpi	r17, 0x02	; 2
    2730:	f1 f4       	brne	.+60     	; 0x276e <CameraControl_DescribePIPE_RWSTREAMError+0x84>
    2732:	09 c0       	rjmp	.+18     	; 0x2746 <CameraControl_DescribePIPE_RWSTREAMError+0x5c>
    2734:	14 30       	cpi	r17, 0x04	; 4
    2736:	79 f0       	breq	.+30     	; 0x2756 <CameraControl_DescribePIPE_RWSTREAMError+0x6c>
    2738:	10 38       	cpi	r17, 0x80	; 128
    273a:	c9 f4       	brne	.+50     	; 0x276e <CameraControl_DescribePIPE_RWSTREAMError+0x84>
    273c:	10 c0       	rjmp	.+32     	; 0x275e <CameraControl_DescribePIPE_RWSTREAMError+0x74>
	{
		case PIPE_RWSTREAM_PipeStalled:
			printf_P(PSTR("The device stalled the pipe during the transfer.\r\n"));
    273e:	00 d0       	rcall	.+0      	; 0x2740 <CameraControl_DescribePIPE_RWSTREAMError+0x56>
    2740:	89 e6       	ldi	r24, 0x69	; 105
    2742:	94 e0       	ldi	r25, 0x04	; 4
    2744:	0f c0       	rjmp	.+30     	; 0x2764 <CameraControl_DescribePIPE_RWSTREAMError+0x7a>
			break;
		case PIPE_RWSTREAM_DeviceDisconnected:
			printf_P(PSTR("Device was disconnected from the host during the transfer.\r\n"));
    2746:	00 d0       	rcall	.+0      	; 0x2748 <CameraControl_DescribePIPE_RWSTREAMError+0x5e>
    2748:	8c e2       	ldi	r24, 0x2C	; 44
    274a:	94 e0       	ldi	r25, 0x04	; 4
    274c:	13 c0       	rjmp	.+38     	; 0x2774 <CameraControl_DescribePIPE_RWSTREAMError+0x8a>
			break;
		case PIPE_RWSTREAM_Timeout:
			printf_P(PSTR("The device failed to accept or send the next packet within the software timeout period set by the USB_STREAM_TIMEOUT_MS macro.\r\n"));
    274e:	00 d0       	rcall	.+0      	; 0x2750 <CameraControl_DescribePIPE_RWSTREAMError+0x66>
    2750:	8b ea       	ldi	r24, 0xAB	; 171
    2752:	93 e0       	ldi	r25, 0x03	; 3
    2754:	07 c0       	rjmp	.+14     	; 0x2764 <CameraControl_DescribePIPE_RWSTREAMError+0x7a>
			break;
		case PIPE_RWSTREAM_IncompleteTransfer:
			printf_P(PSTR("Indicates that the pipe bank became full/empty before the complete contents of the stream could be transferred.\r\n"));
    2756:	00 d0       	rcall	.+0      	; 0x2758 <CameraControl_DescribePIPE_RWSTREAMError+0x6e>
    2758:	89 e3       	ldi	r24, 0x39	; 57
    275a:	93 e0       	ldi	r25, 0x03	; 3
    275c:	0b c0       	rjmp	.+22     	; 0x2774 <CameraControl_DescribePIPE_RWSTREAMError+0x8a>
			break;
		case SI_ERROR_LOGICAL_CMD_FAILED:
			printf_P(PSTR("Error code for some Still Image Host functions, indicating a logical (and not hardware) error.\r\n"));
    275e:	00 d0       	rcall	.+0      	; 0x2760 <CameraControl_DescribePIPE_RWSTREAMError+0x76>
    2760:	88 ed       	ldi	r24, 0xD8	; 216
    2762:	92 e0       	ldi	r25, 0x02	; 2
    2764:	ed b7       	in	r30, 0x3d	; 61
    2766:	fe b7       	in	r31, 0x3e	; 62
    2768:	92 83       	std	Z+2, r25	; 0x02
    276a:	81 83       	std	Z+1, r24	; 0x01
    276c:	09 c0       	rjmp	.+18     	; 0x2780 <CameraControl_DescribePIPE_RWSTREAMError+0x96>
			break;
		default:
			printf_P(PSTR("Unrecognized error.\r\n"));
    276e:	00 d0       	rcall	.+0      	; 0x2770 <CameraControl_DescribePIPE_RWSTREAMError+0x86>
    2770:	82 ec       	ldi	r24, 0xC2	; 194
    2772:	92 e0       	ldi	r25, 0x02	; 2
    2774:	ad b7       	in	r26, 0x3d	; 61
    2776:	be b7       	in	r27, 0x3e	; 62
    2778:	12 96       	adiw	r26, 0x02	; 2
    277a:	9c 93       	st	X, r25
    277c:	8e 93       	st	-X, r24
    277e:	11 97       	sbiw	r26, 0x01	; 1
    2780:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    2784:	0f 90       	pop	r0
    2786:	0f 90       	pop	r0
	}

}
    2788:	1f 91       	pop	r17
    278a:	08 95       	ret

0000278c <CameraControl_GetResponseAndCheck>:
/*------------------------------------------------------------------------------
 * CameraControl_GetResponseAndCheck
 */
uint8_t CameraControl_GetResponseAndCheck ( USB_ClassInfo_SI_Host_t* SIInterfaceInfo,
											PIMA_Container_t *PIMABlock )
{
    278c:	1f 93       	push	r17
    278e:	cf 93       	push	r28
    2790:	df 93       	push	r29
    2792:	eb 01       	movw	r28, r22
	uint8_t ErrorCode;

	CHECK_CAMERA_CONNECTION;
    2794:	20 91 f6 03 	lds	r18, 0x03F6
    2798:	2b 30       	cpi	r18, 0x0B	; 11
    279a:	21 f4       	brne	.+8      	; 0x27a4 <CameraControl_GetResponseAndCheck+0x18>
    279c:	fc 01       	movw	r30, r24
    279e:	26 81       	ldd	r18, Z+6	; 0x06
    27a0:	22 23       	and	r18, r18
    27a2:	61 f4       	brne	.+24     	; 0x27bc <CameraControl_GetResponseAndCheck+0x30>
    27a4:	00 d0       	rcall	.+0      	; 0x27a6 <CameraControl_GetResponseAndCheck+0x1a>
    27a6:	8a ea       	ldi	r24, 0xAA	; 170
    27a8:	92 e0       	ldi	r25, 0x02	; 2
    27aa:	ed b7       	in	r30, 0x3d	; 61
    27ac:	fe b7       	in	r31, 0x3e	; 62
    27ae:	92 83       	std	Z+2, r25	; 0x02
    27b0:	81 83       	std	Z+1, r24	; 0x01
    27b2:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    27b6:	0f 90       	pop	r0
    27b8:	0f 90       	pop	r0
    27ba:	17 c0       	rjmp	.+46     	; 0x27ea <CameraControl_GetResponseAndCheck+0x5e>

	// Receive the final response block from the device 
	if ((ErrorCode = SI_Host_ReceiveBlockHeader(SIInterfaceInfo, PIMABlock)) != PIPE_RWSTREAM_NoError)
    27bc:	13 dd       	rcall	.-1498   	; 0x21e4 <SI_Host_ReceiveBlockHeader>
    27be:	18 2f       	mov	r17, r24
    27c0:	88 23       	and	r24, r24
    27c2:	19 f0       	breq	.+6      	; 0x27ca <CameraControl_GetResponseAndCheck+0x3e>
	{
		CameraControl_DescribePIPE_RWSTREAMError (ErrorCode);
    27c4:	92 df       	rcall	.-220    	; 0x26ea <CameraControl_DescribePIPE_RWSTREAMError>
		if ( ErrorCode != SI_ERROR_LOGICAL_CMD_FAILED )
    27c6:	10 38       	cpi	r17, 0x80	; 128
    27c8:	89 f4       	brne	.+34     	; 0x27ec <CameraControl_GetResponseAndCheck+0x60>
			return ErrorCode;
	}

	// Verify that the command completed successfully
	if ((PIMABlock->Type != PIMA_CONTAINER_ResponseBlock) || (PIMABlock->Code != PTP_RC_OK))
    27ca:	8c 81       	ldd	r24, Y+4	; 0x04
    27cc:	9d 81       	ldd	r25, Y+5	; 0x05
    27ce:	83 30       	cpi	r24, 0x03	; 3
    27d0:	91 05       	cpc	r25, r1
    27d2:	31 f4       	brne	.+12     	; 0x27e0 <CameraControl_GetResponseAndCheck+0x54>
    27d4:	8e 81       	ldd	r24, Y+6	; 0x06
    27d6:	9f 81       	ldd	r25, Y+7	; 0x07
    27d8:	f0 e2       	ldi	r31, 0x20	; 32
    27da:	81 30       	cpi	r24, 0x01	; 1
    27dc:	9f 07       	cpc	r25, r31
    27de:	29 f0       	breq	.+10     	; 0x27ea <CameraControl_GetResponseAndCheck+0x5e>
	{
		CameraControl_PTPErrorDescription ( PIMABlock->Code );
    27e0:	8e 81       	ldd	r24, Y+6	; 0x06
    27e2:	9f 81       	ldd	r25, Y+7	; 0x07
    27e4:	b8 de       	rcall	.-656    	; 0x2556 <CameraControl_PTPErrorDescription>
		return SI_ERROR_LOGICAL_CMD_FAILED;
    27e6:	10 e8       	ldi	r17, 0x80	; 128
    27e8:	01 c0       	rjmp	.+2      	; 0x27ec <CameraControl_GetResponseAndCheck+0x60>
	}

	return PIPE_RWSTREAM_NoError;
    27ea:	10 e0       	ldi	r17, 0x00	; 0
}
    27ec:	81 2f       	mov	r24, r17
    27ee:	df 91       	pop	r29
    27f0:	cf 91       	pop	r28
    27f2:	1f 91       	pop	r17
    27f4:	08 95       	ret

000027f6 <CameraControl_InitiateTransaction>:
/*------------------------------------------------------------------------------
 * CameraControl_InitiateTransaction
 */
uint8_t CameraControl_InitiateTransaction ( USB_ClassInfo_SI_Host_t* SIInterfaceInfo,
											PIMA_Container_t *PIMABlock )
{
    27f6:	0f 93       	push	r16
    27f8:	1f 93       	push	r17
    27fa:	cf 93       	push	r28
    27fc:	df 93       	push	r29
    27fe:	ec 01       	movw	r28, r24
    2800:	8b 01       	movw	r16, r22
	uint8_t ErrorCode;

	CHECK_CAMERA_CONNECTION;
    2802:	80 91 f6 03 	lds	r24, 0x03F6
    2806:	8b 30       	cpi	r24, 0x0B	; 11
    2808:	19 f4       	brne	.+6      	; 0x2810 <CameraControl_InitiateTransaction+0x1a>
    280a:	8e 81       	ldd	r24, Y+6	; 0x06
    280c:	88 23       	and	r24, r24
    280e:	61 f4       	brne	.+24     	; 0x2828 <CameraControl_InitiateTransaction+0x32>
    2810:	00 d0       	rcall	.+0      	; 0x2812 <CameraControl_InitiateTransaction+0x1c>
    2812:	82 e9       	ldi	r24, 0x92	; 146
    2814:	92 e0       	ldi	r25, 0x02	; 2
    2816:	ed b7       	in	r30, 0x3d	; 61
    2818:	fe b7       	in	r31, 0x3e	; 62
    281a:	92 83       	std	Z+2, r25	; 0x02
    281c:	81 83       	std	Z+1, r24	; 0x01
    281e:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    2822:	0f 90       	pop	r0
    2824:	0f 90       	pop	r0
    2826:	15 c0       	rjmp	.+42     	; 0x2852 <CameraControl_InitiateTransaction+0x5c>

	// Check connectivity
	if (CAMERA_CONTROL_NOT_CONNECTED)
    2828:	80 91 f6 03 	lds	r24, 0x03F6
    282c:	8b 30       	cpi	r24, 0x0B	; 11
    282e:	21 f0       	breq	.+8      	; 0x2838 <CameraControl_InitiateTransaction+0x42>
	{
		CameraControl_DescribePIPE_RWSTREAMError (PIPE_RWSTREAM_DeviceDisconnected);
    2830:	82 e0       	ldi	r24, 0x02	; 2
    2832:	5b df       	rcall	.-330    	; 0x26ea <CameraControl_DescribePIPE_RWSTREAMError>
		return PIPE_RWSTREAM_DeviceDisconnected;
    2834:	02 e0       	ldi	r16, 0x02	; 2
    2836:	10 c0       	rjmp	.+32     	; 0x2858 <CameraControl_InitiateTransaction+0x62>
	}

	// Send the block - info request
	if ((ErrorCode = SI_Host_SendBlockHeader(SIInterfaceInfo, PIMABlock)) != PIPE_RWSTREAM_NoError)
    2838:	ce 01       	movw	r24, r28
    283a:	85 dc       	rcall	.-1782   	; 0x2146 <SI_Host_SendBlockHeader>
    283c:	88 23       	and	r24, r24
    283e:	59 f4       	brne	.+22     	; 0x2856 <CameraControl_InitiateTransaction+0x60>
	{
		return ErrorCode;
	}

	// Get the answer in the same memory block
	if ((ErrorCode = SI_Host_ReceiveBlockHeader(SIInterfaceInfo, PIMABlock)) != PIPE_RWSTREAM_NoError)
    2840:	ce 01       	movw	r24, r28
    2842:	b8 01       	movw	r22, r16
    2844:	cf dc       	rcall	.-1634   	; 0x21e4 <SI_Host_ReceiveBlockHeader>
    2846:	08 2f       	mov	r16, r24
    2848:	88 23       	and	r24, r24
    284a:	31 f0       	breq	.+12     	; 0x2858 <CameraControl_InitiateTransaction+0x62>
	{
		CameraControl_DescribePIPE_RWSTREAMError (ErrorCode);
    284c:	4e df       	rcall	.-356    	; 0x26ea <CameraControl_DescribePIPE_RWSTREAMError>
		if ( ErrorCode != SI_ERROR_LOGICAL_CMD_FAILED )
    284e:	00 38       	cpi	r16, 0x80	; 128
    2850:	19 f4       	brne	.+6      	; 0x2858 <CameraControl_InitiateTransaction+0x62>
			return ErrorCode;
	}
	
	return PIPE_RWSTREAM_NoError;
    2852:	00 e0       	ldi	r16, 0x00	; 0
    2854:	01 c0       	rjmp	.+2      	; 0x2858 <CameraControl_InitiateTransaction+0x62>
		CameraControl_DescribePIPE_RWSTREAMError (PIPE_RWSTREAM_DeviceDisconnected);
		return PIPE_RWSTREAM_DeviceDisconnected;
	}

	// Send the block - info request
	if ((ErrorCode = SI_Host_SendBlockHeader(SIInterfaceInfo, PIMABlock)) != PIPE_RWSTREAM_NoError)
    2856:	08 2f       	mov	r16, r24
		if ( ErrorCode != SI_ERROR_LOGICAL_CMD_FAILED )
			return ErrorCode;
	}
	
	return PIPE_RWSTREAM_NoError;
}
    2858:	80 2f       	mov	r24, r16
    285a:	df 91       	pop	r29
    285c:	cf 91       	pop	r28
    285e:	1f 91       	pop	r17
    2860:	0f 91       	pop	r16
    2862:	08 95       	ret

00002864 <CameraControl_OpenSession>:

/*------------------------------------------------------------------------------
 * CameraControl_OpenSession
 */
uint8_t CameraControl_OpenSession(USB_ClassInfo_SI_Host_t* SIInterfaceInfo)
{
    2864:	0f 93       	push	r16
    2866:	1f 93       	push	r17
    2868:	df 93       	push	r29
    286a:	cf 93       	push	r28
    286c:	cd b7       	in	r28, 0x3d	; 61
    286e:	de b7       	in	r29, 0x3e	; 62
    2870:	68 97       	sbiw	r28, 0x18	; 24
    2872:	0f b6       	in	r0, 0x3f	; 63
    2874:	f8 94       	cli
    2876:	de bf       	out	0x3e, r29	; 62
    2878:	0f be       	out	0x3f, r0	; 63
    287a:	cd bf       	out	0x3d, r28	; 61
    287c:	8c 01       	movw	r16, r24
	uint8_t ErrorCode;

	CHECK_CAMERA_CONNECTION;
    287e:	80 91 f6 03 	lds	r24, 0x03F6
    2882:	8b 30       	cpi	r24, 0x0B	; 11
    2884:	21 f4       	brne	.+8      	; 0x288e <CameraControl_OpenSession+0x2a>
    2886:	f8 01       	movw	r30, r16
    2888:	86 81       	ldd	r24, Z+6	; 0x06
    288a:	88 23       	and	r24, r24
    288c:	69 f4       	brne	.+26     	; 0x28a8 <CameraControl_OpenSession+0x44>
    288e:	00 d0       	rcall	.+0      	; 0x2890 <CameraControl_OpenSession+0x2c>
    2890:	8a e7       	ldi	r24, 0x7A	; 122
    2892:	92 e0       	ldi	r25, 0x02	; 2
    2894:	ed b7       	in	r30, 0x3d	; 61
    2896:	fe b7       	in	r31, 0x3e	; 62
    2898:	92 83       	std	Z+2, r25	; 0x02
    289a:	81 83       	std	Z+1, r24	; 0x01
    289c:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    28a0:	0f 90       	pop	r0
    28a2:	0f 90       	pop	r0
    28a4:	80 e0       	ldi	r24, 0x00	; 0
    28a6:	2d c0       	rjmp	.+90     	; 0x2902 <CameraControl_OpenSession+0x9e>

	SIInterfaceInfo->State.TransactionID = 0;
    28a8:	f8 01       	movw	r30, r16
    28aa:	17 86       	std	Z+15, r1	; 0x0f
    28ac:	10 8a       	std	Z+16, r1	; 0x10
    28ae:	11 8a       	std	Z+17, r1	; 0x11
    28b0:	12 8a       	std	Z+18, r1	; 0x12
	SIInterfaceInfo->State.IsSessionOpen = false;
    28b2:	16 86       	std	Z+14, r1	; 0x0e

	PIMA_Container_t PIMABlock = (PIMA_Container_t)
    28b4:	be 01       	movw	r22, r28
    28b6:	6f 5f       	subi	r22, 0xFF	; 255
    28b8:	7f 4f       	sbci	r23, 0xFF	; 255
    28ba:	88 e1       	ldi	r24, 0x18	; 24
    28bc:	fb 01       	movw	r30, r22
    28be:	11 92       	st	Z+, r1
    28c0:	8a 95       	dec	r24
    28c2:	e9 f7       	brne	.-6      	; 0x28be <CameraControl_OpenSession+0x5a>
    28c4:	80 e1       	ldi	r24, 0x10	; 16
    28c6:	90 e0       	ldi	r25, 0x00	; 0
    28c8:	a0 e0       	ldi	r26, 0x00	; 0
    28ca:	b0 e0       	ldi	r27, 0x00	; 0
    28cc:	89 83       	std	Y+1, r24	; 0x01
    28ce:	9a 83       	std	Y+2, r25	; 0x02
    28d0:	ab 83       	std	Y+3, r26	; 0x03
    28d2:	bc 83       	std	Y+4, r27	; 0x04
    28d4:	81 e0       	ldi	r24, 0x01	; 1
    28d6:	90 e0       	ldi	r25, 0x00	; 0
    28d8:	9e 83       	std	Y+6, r25	; 0x06
    28da:	8d 83       	std	Y+5, r24	; 0x05
    28dc:	82 e0       	ldi	r24, 0x02	; 2
    28de:	90 e1       	ldi	r25, 0x10	; 16
    28e0:	98 87       	std	Y+8, r25	; 0x08
    28e2:	8f 83       	std	Y+7, r24	; 0x07
    28e4:	81 e0       	ldi	r24, 0x01	; 1
    28e6:	90 e0       	ldi	r25, 0x00	; 0
    28e8:	a0 e0       	ldi	r26, 0x00	; 0
    28ea:	b0 e0       	ldi	r27, 0x00	; 0
    28ec:	8d 87       	std	Y+13, r24	; 0x0d
    28ee:	9e 87       	std	Y+14, r25	; 0x0e
    28f0:	af 87       	std	Y+15, r26	; 0x0f
    28f2:	b8 8b       	std	Y+16, r27	; 0x10
			.Type          = CPU_TO_LE16(PIMA_CONTAINER_CommandBlock),
			.Code          = CPU_TO_LE16(PTP_OC_OpenSession),
			.Params        = {CPU_TO_LE32(1)},
		};

	ErrorCode = CameraControl_InitiateTransaction ( SIInterfaceInfo, &PIMABlock );
    28f4:	c8 01       	movw	r24, r16
    28f6:	7f df       	rcall	.-258    	; 0x27f6 <CameraControl_InitiateTransaction>

	if ( ErrorCode == PIPE_RWSTREAM_NoError ) SIInterfaceInfo->State.IsSessionOpen = true;
    28f8:	88 23       	and	r24, r24
    28fa:	19 f4       	brne	.+6      	; 0x2902 <CameraControl_OpenSession+0x9e>
    28fc:	91 e0       	ldi	r25, 0x01	; 1
    28fe:	f8 01       	movw	r30, r16
    2900:	96 87       	std	Z+14, r25	; 0x0e

	return ErrorCode;
}
    2902:	68 96       	adiw	r28, 0x18	; 24
    2904:	0f b6       	in	r0, 0x3f	; 63
    2906:	f8 94       	cli
    2908:	de bf       	out	0x3e, r29	; 62
    290a:	0f be       	out	0x3f, r0	; 63
    290c:	cd bf       	out	0x3d, r28	; 61
    290e:	cf 91       	pop	r28
    2910:	df 91       	pop	r29
    2912:	1f 91       	pop	r17
    2914:	0f 91       	pop	r16
    2916:	08 95       	ret

00002918 <CameraControl_CloseSession>:

/*------------------------------------------------------------------------------
 * CameraControl_CloseSession
 */
uint8_t CameraControl_CloseSession(USB_ClassInfo_SI_Host_t* SIInterfaceInfo)
{
    2918:	0f 93       	push	r16
    291a:	1f 93       	push	r17
    291c:	df 93       	push	r29
    291e:	cf 93       	push	r28
    2920:	cd b7       	in	r28, 0x3d	; 61
    2922:	de b7       	in	r29, 0x3e	; 62
    2924:	68 97       	sbiw	r28, 0x18	; 24
    2926:	0f b6       	in	r0, 0x3f	; 63
    2928:	f8 94       	cli
    292a:	de bf       	out	0x3e, r29	; 62
    292c:	0f be       	out	0x3f, r0	; 63
    292e:	cd bf       	out	0x3d, r28	; 61
    2930:	8c 01       	movw	r16, r24
	uint8_t ErrorCode;

	CHECK_CAMERA_CONNECTION;
    2932:	80 91 f6 03 	lds	r24, 0x03F6
    2936:	8b 30       	cpi	r24, 0x0B	; 11
    2938:	21 f4       	brne	.+8      	; 0x2942 <CameraControl_CloseSession+0x2a>
    293a:	f8 01       	movw	r30, r16
    293c:	86 81       	ldd	r24, Z+6	; 0x06
    293e:	88 23       	and	r24, r24
    2940:	69 f4       	brne	.+26     	; 0x295c <CameraControl_CloseSession+0x44>
    2942:	00 d0       	rcall	.+0      	; 0x2944 <CameraControl_CloseSession+0x2c>
    2944:	82 e6       	ldi	r24, 0x62	; 98
    2946:	92 e0       	ldi	r25, 0x02	; 2
    2948:	ed b7       	in	r30, 0x3d	; 61
    294a:	fe b7       	in	r31, 0x3e	; 62
    294c:	92 83       	std	Z+2, r25	; 0x02
    294e:	81 83       	std	Z+1, r24	; 0x01
    2950:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    2954:	0f 90       	pop	r0
    2956:	0f 90       	pop	r0
    2958:	80 e0       	ldi	r24, 0x00	; 0
    295a:	1e c0       	rjmp	.+60     	; 0x2998 <CameraControl_CloseSession+0x80>

	PIMA_Container_t PIMABlock = (PIMA_Container_t)
    295c:	be 01       	movw	r22, r28
    295e:	6f 5f       	subi	r22, 0xFF	; 255
    2960:	7f 4f       	sbci	r23, 0xFF	; 255
    2962:	88 e1       	ldi	r24, 0x18	; 24
    2964:	fb 01       	movw	r30, r22
    2966:	11 92       	st	Z+, r1
    2968:	8a 95       	dec	r24
    296a:	e9 f7       	brne	.-6      	; 0x2966 <CameraControl_CloseSession+0x4e>
    296c:	8c e0       	ldi	r24, 0x0C	; 12
    296e:	90 e0       	ldi	r25, 0x00	; 0
    2970:	a0 e0       	ldi	r26, 0x00	; 0
    2972:	b0 e0       	ldi	r27, 0x00	; 0
    2974:	89 83       	std	Y+1, r24	; 0x01
    2976:	9a 83       	std	Y+2, r25	; 0x02
    2978:	ab 83       	std	Y+3, r26	; 0x03
    297a:	bc 83       	std	Y+4, r27	; 0x04
    297c:	81 e0       	ldi	r24, 0x01	; 1
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	9e 83       	std	Y+6, r25	; 0x06
    2982:	8d 83       	std	Y+5, r24	; 0x05
    2984:	83 e0       	ldi	r24, 0x03	; 3
    2986:	90 e1       	ldi	r25, 0x10	; 16
    2988:	98 87       	std	Y+8, r25	; 0x08
    298a:	8f 83       	std	Y+7, r24	; 0x07
			.DataLength    = CPU_TO_LE32(PIMA_COMMAND_SIZE(0)),
			.Type          = CPU_TO_LE16(PIMA_CONTAINER_CommandBlock),
			.Code          = CPU_TO_LE16(PTP_OC_CloseSession),
		};

	ErrorCode = CameraControl_InitiateTransaction ( SIInterfaceInfo, &PIMABlock );
    298c:	c8 01       	movw	r24, r16
    298e:	33 df       	rcall	.-410    	; 0x27f6 <CameraControl_InitiateTransaction>

	if ( ErrorCode == PIPE_RWSTREAM_NoError ) SIInterfaceInfo->State.IsSessionOpen = false;
    2990:	88 23       	and	r24, r24
    2992:	11 f4       	brne	.+4      	; 0x2998 <CameraControl_CloseSession+0x80>
    2994:	f8 01       	movw	r30, r16
    2996:	16 86       	std	Z+14, r1	; 0x0e

	return ErrorCode;
}
    2998:	68 96       	adiw	r28, 0x18	; 24
    299a:	0f b6       	in	r0, 0x3f	; 63
    299c:	f8 94       	cli
    299e:	de bf       	out	0x3e, r29	; 62
    29a0:	0f be       	out	0x3f, r0	; 63
    29a2:	cd bf       	out	0x3d, r28	; 61
    29a4:	cf 91       	pop	r28
    29a6:	df 91       	pop	r29
    29a8:	1f 91       	pop	r17
    29aa:	0f 91       	pop	r16
    29ac:	08 95       	ret

000029ae <CameraControl_CameraConnected>:
/*------------------------------------------------------------------------------
 * CameraControl_CameraConnected
 */
uint8_t CameraControl_CameraConnected ( USB_ClassInfo_SI_Host_t* SIInterfaceInfo )
{
	if (CAMERA_CONTROL_NOT_CONNECTED) return 0;
    29ae:	20 91 f6 03 	lds	r18, 0x03F6
    29b2:	2b 30       	cpi	r18, 0x0B	; 11
    29b4:	19 f4       	brne	.+6      	; 0x29bc <CameraControl_CameraConnected+0xe>
    29b6:	fc 01       	movw	r30, r24
    29b8:	86 81       	ldd	r24, Z+6	; 0x06
    29ba:	08 95       	ret
    29bc:	80 e0       	ldi	r24, 0x00	; 0
	return 1;
}
    29be:	08 95       	ret

000029c0 <CameraControl_DeviceInfo_CopyString>:
/*------------------------------------------------------------------------------
 * CameraControl_DeviceInfo_CopyString
 */
bool CameraControl_DeviceInfo_CopyString(	uint8_t **pp, uint16_t *count, 
											char *dest, uint8_t maxLen)
{
    29c0:	ef 92       	push	r14
    29c2:	ff 92       	push	r15
    29c4:	0f 93       	push	r16
    29c6:	1f 93       	push	r17
    29c8:	cf 93       	push	r28
    29ca:	df 93       	push	r29
    29cc:	fc 01       	movw	r30, r24
    29ce:	db 01       	movw	r26, r22
	uint8_t arrayLength = *(uint8_t*)(*pp);
    29d0:	c0 81       	ld	r28, Z
    29d2:	d1 81       	ldd	r29, Z+1	; 0x01
    29d4:	19 91       	ld	r17, Y+
	uint8_t pos = 0;
	(*pp)+=1; (*count)-=1;
    29d6:	d1 83       	std	Z+1, r29	; 0x01
    29d8:	c0 83       	st	Z, r28
    29da:	8d 91       	ld	r24, X+
    29dc:	9c 91       	ld	r25, X
    29de:	11 97       	sbiw	r26, 0x01	; 1
    29e0:	01 97       	sbiw	r24, 0x01	; 1
    29e2:	11 96       	adiw	r26, 0x01	; 1
    29e4:	9c 93       	st	X, r25
    29e6:	8e 93       	st	-X, r24
    29e8:	7a 01       	movw	r14, r20

	for (; arrayLength>0; arrayLength--, (*count)-=2, (*pp)+=2, pos++)
    29ea:	80 e0       	ldi	r24, 0x00	; 0
    29ec:	90 e0       	ldi	r25, 0x00	; 0
	{
		if ( pos == (maxLen-1) )
    29ee:	30 e0       	ldi	r19, 0x00	; 0
    29f0:	21 50       	subi	r18, 0x01	; 1
    29f2:	30 40       	sbci	r19, 0x00	; 0
{
	uint8_t arrayLength = *(uint8_t*)(*pp);
	uint8_t pos = 0;
	(*pp)+=1; (*count)-=1;

	for (; arrayLength>0; arrayLength--, (*count)-=2, (*pp)+=2, pos++)
    29f4:	1a c0       	rjmp	.+52     	; 0x2a2a <CameraControl_DeviceInfo_CopyString+0x6a>
	{
		if ( pos == (maxLen-1) )
    29f6:	82 17       	cp	r24, r18
    29f8:	93 07       	cpc	r25, r19
    29fa:	d1 f0       	breq	.+52     	; 0x2a30 <CameraControl_DeviceInfo_CopyString+0x70>
			break;

		dest[pos] = (char)(**pp);
    29fc:	60 81       	ld	r22, Z
    29fe:	71 81       	ldd	r23, Z+1	; 0x01
    2a00:	eb 01       	movw	r28, r22
    2a02:	68 81       	ld	r22, Y
    2a04:	e7 01       	movw	r28, r14
    2a06:	69 93       	st	Y+, r22
    2a08:	7e 01       	movw	r14, r28
{
	uint8_t arrayLength = *(uint8_t*)(*pp);
	uint8_t pos = 0;
	(*pp)+=1; (*count)-=1;

	for (; arrayLength>0; arrayLength--, (*count)-=2, (*pp)+=2, pos++)
    2a0a:	11 50       	subi	r17, 0x01	; 1
    2a0c:	6d 91       	ld	r22, X+
    2a0e:	7c 91       	ld	r23, X
    2a10:	11 97       	sbiw	r26, 0x01	; 1
    2a12:	62 50       	subi	r22, 0x02	; 2
    2a14:	70 40       	sbci	r23, 0x00	; 0
    2a16:	11 96       	adiw	r26, 0x01	; 1
    2a18:	7c 93       	st	X, r23
    2a1a:	6e 93       	st	-X, r22
    2a1c:	60 81       	ld	r22, Z
    2a1e:	71 81       	ldd	r23, Z+1	; 0x01
    2a20:	6e 5f       	subi	r22, 0xFE	; 254
    2a22:	7f 4f       	sbci	r23, 0xFF	; 255
    2a24:	71 83       	std	Z+1, r23	; 0x01
    2a26:	60 83       	st	Z, r22
    2a28:	01 96       	adiw	r24, 0x01	; 1
    2a2a:	08 2f       	mov	r16, r24
    2a2c:	11 23       	and	r17, r17
    2a2e:	19 f7       	brne	.-58     	; 0x29f6 <CameraControl_DeviceInfo_CopyString+0x36>
			break;

		dest[pos] = (char)(**pp);
	}

	(*count)-=arrayLength*2;
    2a30:	21 2f       	mov	r18, r17
    2a32:	30 e0       	ldi	r19, 0x00	; 0
    2a34:	b9 01       	movw	r22, r18
    2a36:	66 0f       	add	r22, r22
    2a38:	77 1f       	adc	r23, r23
    2a3a:	8d 91       	ld	r24, X+
    2a3c:	9c 91       	ld	r25, X
    2a3e:	11 97       	sbiw	r26, 0x01	; 1
    2a40:	86 1b       	sub	r24, r22
    2a42:	97 0b       	sbc	r25, r23
    2a44:	11 96       	adiw	r26, 0x01	; 1
    2a46:	9c 93       	st	X, r25
    2a48:	8e 93       	st	-X, r24
	(*pp)+=arrayLength*2;
    2a4a:	80 81       	ld	r24, Z
    2a4c:	91 81       	ldd	r25, Z+1	; 0x01
    2a4e:	86 0f       	add	r24, r22
    2a50:	97 1f       	adc	r25, r23
    2a52:	91 83       	std	Z+1, r25	; 0x01
    2a54:	80 83       	st	Z, r24

	dest[pos] = '\0';
    2a56:	40 0f       	add	r20, r16
    2a58:	51 1d       	adc	r21, r1
    2a5a:	fa 01       	movw	r30, r20
    2a5c:	10 82       	st	Z, r1

	return (arrayLength == 0);
    2a5e:	81 e0       	ldi	r24, 0x01	; 1
    2a60:	11 11       	cpse	r17, r1
    2a62:	80 e0       	ldi	r24, 0x00	; 0
}
    2a64:	df 91       	pop	r29
    2a66:	cf 91       	pop	r28
    2a68:	1f 91       	pop	r17
    2a6a:	0f 91       	pop	r16
    2a6c:	ff 90       	pop	r15
    2a6e:	ef 90       	pop	r14
    2a70:	08 95       	ret

00002a72 <CameraControl_DeviceInfo_CopyArray>:
/*------------------------------------------------------------------------------
 * CameraControl_DeviceInfo_CopyArray
 */
bool CameraControl_DeviceInfo_CopyArray(	uint8_t **pp, uint16_t *count, uint8_t elSize, 
											uint64_t *dest, uint16_t base)
{
    2a72:	2f 92       	push	r2
    2a74:	3f 92       	push	r3
    2a76:	4f 92       	push	r4
    2a78:	5f 92       	push	r5
    2a7a:	6f 92       	push	r6
    2a7c:	7f 92       	push	r7
    2a7e:	8f 92       	push	r8
    2a80:	9f 92       	push	r9
    2a82:	af 92       	push	r10
    2a84:	bf 92       	push	r11
    2a86:	cf 92       	push	r12
    2a88:	df 92       	push	r13
    2a8a:	ef 92       	push	r14
    2a8c:	ff 92       	push	r15
    2a8e:	0f 93       	push	r16
    2a90:	1f 93       	push	r17
    2a92:	df 93       	push	r29
    2a94:	cf 93       	push	r28
    2a96:	00 d0       	rcall	.+0      	; 0x2a98 <CameraControl_DeviceInfo_CopyArray+0x26>
    2a98:	00 d0       	rcall	.+0      	; 0x2a9a <CameraControl_DeviceInfo_CopyArray+0x28>
    2a9a:	cd b7       	in	r28, 0x3d	; 61
    2a9c:	de b7       	in	r29, 0x3e	; 62
    2a9e:	7c 01       	movw	r14, r24
    2aa0:	7a 83       	std	Y+2, r23	; 0x02
    2aa2:	69 83       	std	Y+1, r22	; 0x01
    2aa4:	3c 83       	std	Y+4, r19	; 0x04
    2aa6:	2b 83       	std	Y+3, r18	; 0x03
	uint32_t iMSB = 0;
	uint32_t iLSB = 0;

	uint32_t arrayLength = *(uint32_t*)(*pp);
    2aa8:	dc 01       	movw	r26, r24
    2aaa:	2d 91       	ld	r18, X+
    2aac:	3c 91       	ld	r19, X
    2aae:	f9 01       	movw	r30, r18
    2ab0:	81 91       	ld	r24, Z+
    2ab2:	91 91       	ld	r25, Z+
    2ab4:	a1 91       	ld	r26, Z+
    2ab6:	b1 91       	ld	r27, Z+
    2ab8:	9f 01       	movw	r18, r30
	(*pp)+=4; (*count)-=4;
    2aba:	f7 01       	movw	r30, r14
    2abc:	31 83       	std	Z+1, r19	; 0x01
    2abe:	20 83       	st	Z, r18
    2ac0:	e9 81       	ldd	r30, Y+1	; 0x01
    2ac2:	fa 81       	ldd	r31, Y+2	; 0x02
    2ac4:	20 81       	ld	r18, Z
    2ac6:	31 81       	ldd	r19, Z+1	; 0x01
    2ac8:	24 50       	subi	r18, 0x04	; 4
    2aca:	30 40       	sbci	r19, 0x00	; 0
    2acc:	31 83       	std	Z+1, r19	; 0x01
    2ace:	20 83       	st	Z, r18

	*dest = 0;
    2ad0:	eb 81       	ldd	r30, Y+3	; 0x03
    2ad2:	fc 81       	ldd	r31, Y+4	; 0x04
    2ad4:	10 82       	st	Z, r1
    2ad6:	11 82       	std	Z+1, r1	; 0x01
    2ad8:	12 82       	std	Z+2, r1	; 0x02
    2ada:	13 82       	std	Z+3, r1	; 0x03
    2adc:	14 82       	std	Z+4, r1	; 0x04
    2ade:	15 82       	std	Z+5, r1	; 0x05
    2ae0:	16 82       	std	Z+6, r1	; 0x06
    2ae2:	17 82       	std	Z+7, r1	; 0x07
 */
bool CameraControl_DeviceInfo_CopyArray(	uint8_t **pp, uint16_t *count, uint8_t elSize, 
											uint64_t *dest, uint16_t base)
{
	uint32_t iMSB = 0;
	uint32_t iLSB = 0;
    2ae4:	22 24       	eor	r2, r2
    2ae6:	33 24       	eor	r3, r3
    2ae8:	21 01       	movw	r4, r2
 * CameraControl_DeviceInfo_CopyArray
 */
bool CameraControl_DeviceInfo_CopyArray(	uint8_t **pp, uint16_t *count, uint8_t elSize, 
											uint64_t *dest, uint16_t base)
{
	uint32_t iMSB = 0;
    2aea:	aa 24       	eor	r10, r10
    2aec:	bb 24       	eor	r11, r11
    2aee:	65 01       	movw	r12, r10
			continue;

		uint16_t distance = currentEl - base; 

		if (distance<32) iLSB |= (1<<(distance));
		else if (distance<64) iMSB |= (1<<(distance-32));
    2af0:	21 e0       	ldi	r18, 0x01	; 1
    2af2:	82 2e       	mov	r8, r18
    2af4:	91 2c       	mov	r9, r1
	uint32_t arrayLength = *(uint32_t*)(*pp);
	(*pp)+=4; (*count)-=4;

	*dest = 0;

	for ( ; arrayLength>0; arrayLength--, (*pp)+=elSize, (*count)-=elSize )
    2af6:	64 2e       	mov	r6, r20
    2af8:	77 24       	eor	r7, r7
    2afa:	43 c0       	rjmp	.+134    	; 0x2b82 <CameraControl_DeviceInfo_CopyArray+0x110>
	{
		uint16_t currentEl = *((uint16_t*)(*pp));
    2afc:	f7 01       	movw	r30, r14
    2afe:	60 81       	ld	r22, Z
    2b00:	71 81       	ldd	r23, Z+1	; 0x01
    2b02:	fb 01       	movw	r30, r22
    2b04:	20 81       	ld	r18, Z
    2b06:	31 81       	ldd	r19, Z+1	; 0x01

		if ( currentEl<base )
    2b08:	20 17       	cp	r18, r16
    2b0a:	31 07       	cpc	r19, r17
    2b0c:	48 f1       	brcs	.+82     	; 0x2b60 <CameraControl_DeviceInfo_CopyArray+0xee>
			continue;

		uint16_t distance = currentEl - base; 
    2b0e:	20 1b       	sub	r18, r16
    2b10:	31 0b       	sbc	r19, r17

		if (distance<32) iLSB |= (1<<(distance));
    2b12:	20 32       	cpi	r18, 0x20	; 32
    2b14:	31 05       	cpc	r19, r1
    2b16:	80 f4       	brcc	.+32     	; 0x2b38 <CameraControl_DeviceInfo_CopyArray+0xc6>
    2b18:	a4 01       	movw	r20, r8
    2b1a:	02 c0       	rjmp	.+4      	; 0x2b20 <CameraControl_DeviceInfo_CopyArray+0xae>
    2b1c:	44 0f       	add	r20, r20
    2b1e:	55 1f       	adc	r21, r21
    2b20:	2a 95       	dec	r18
    2b22:	e2 f7       	brpl	.-8      	; 0x2b1c <CameraControl_DeviceInfo_CopyArray+0xaa>
    2b24:	9a 01       	movw	r18, r20
    2b26:	44 27       	eor	r20, r20
    2b28:	37 fd       	sbrc	r19, 7
    2b2a:	40 95       	com	r20
    2b2c:	54 2f       	mov	r21, r20
    2b2e:	22 2a       	or	r2, r18
    2b30:	33 2a       	or	r3, r19
    2b32:	44 2a       	or	r4, r20
    2b34:	55 2a       	or	r5, r21
    2b36:	14 c0       	rjmp	.+40     	; 0x2b60 <CameraControl_DeviceInfo_CopyArray+0xee>
		else if (distance<64) iMSB |= (1<<(distance-32));
    2b38:	20 34       	cpi	r18, 0x40	; 64
    2b3a:	31 05       	cpc	r19, r1
    2b3c:	88 f4       	brcc	.+34     	; 0x2b60 <CameraControl_DeviceInfo_CopyArray+0xee>
    2b3e:	20 52       	subi	r18, 0x20	; 32
    2b40:	30 40       	sbci	r19, 0x00	; 0
    2b42:	f4 01       	movw	r30, r8
    2b44:	02 c0       	rjmp	.+4      	; 0x2b4a <CameraControl_DeviceInfo_CopyArray+0xd8>
    2b46:	ee 0f       	add	r30, r30
    2b48:	ff 1f       	adc	r31, r31
    2b4a:	2a 95       	dec	r18
    2b4c:	e2 f7       	brpl	.-8      	; 0x2b46 <CameraControl_DeviceInfo_CopyArray+0xd4>
    2b4e:	9f 01       	movw	r18, r30
    2b50:	44 27       	eor	r20, r20
    2b52:	37 fd       	sbrc	r19, 7
    2b54:	40 95       	com	r20
    2b56:	54 2f       	mov	r21, r20
    2b58:	a2 2a       	or	r10, r18
    2b5a:	b3 2a       	or	r11, r19
    2b5c:	c4 2a       	or	r12, r20
    2b5e:	d5 2a       	or	r13, r21
	uint32_t arrayLength = *(uint32_t*)(*pp);
	(*pp)+=4; (*count)-=4;

	*dest = 0;

	for ( ; arrayLength>0; arrayLength--, (*pp)+=elSize, (*count)-=elSize )
    2b60:	01 97       	sbiw	r24, 0x01	; 1
    2b62:	a1 09       	sbc	r26, r1
    2b64:	b1 09       	sbc	r27, r1
    2b66:	9b 01       	movw	r18, r22
    2b68:	26 0d       	add	r18, r6
    2b6a:	37 1d       	adc	r19, r7
    2b6c:	f7 01       	movw	r30, r14
    2b6e:	31 83       	std	Z+1, r19	; 0x01
    2b70:	20 83       	st	Z, r18
    2b72:	e9 81       	ldd	r30, Y+1	; 0x01
    2b74:	fa 81       	ldd	r31, Y+2	; 0x02
    2b76:	20 81       	ld	r18, Z
    2b78:	31 81       	ldd	r19, Z+1	; 0x01
    2b7a:	26 19       	sub	r18, r6
    2b7c:	37 09       	sbc	r19, r7
    2b7e:	31 83       	std	Z+1, r19	; 0x01
    2b80:	20 83       	st	Z, r18
    2b82:	00 97       	sbiw	r24, 0x00	; 0
    2b84:	a1 05       	cpc	r26, r1
    2b86:	b1 05       	cpc	r27, r1
    2b88:	09 f0       	breq	.+2      	; 0x2b8c <CameraControl_DeviceInfo_CopyArray+0x11a>
    2b8a:	b8 cf       	rjmp	.-144    	; 0x2afc <CameraControl_DeviceInfo_CopyArray+0x8a>

		if (distance<32) iLSB |= (1<<(distance));
		else if (distance<64) iMSB |= (1<<(distance-32));
	}

	*dest = (uint64_t)(iLSB)|((uint64_t)(iMSB)<<32);
    2b8c:	95 01       	movw	r18, r10
    2b8e:	a6 01       	movw	r20, r12
    2b90:	60 e0       	ldi	r22, 0x00	; 0
    2b92:	70 e0       	ldi	r23, 0x00	; 0
    2b94:	80 e0       	ldi	r24, 0x00	; 0
    2b96:	90 e0       	ldi	r25, 0x00	; 0
    2b98:	00 e2       	ldi	r16, 0x20	; 32
    2b9a:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__ashldi3>
    2b9e:	82 2e       	mov	r8, r18
    2ba0:	63 2e       	mov	r6, r19
    2ba2:	da 01       	movw	r26, r20
    2ba4:	92 01       	movw	r18, r4
    2ba6:	81 01       	movw	r16, r2
    2ba8:	82 28       	or	r8, r2
    2baa:	eb 81       	ldd	r30, Y+3	; 0x03
    2bac:	fc 81       	ldd	r31, Y+4	; 0x04
    2bae:	80 82       	st	Z, r8
    2bb0:	61 2a       	or	r6, r17
    2bb2:	61 82       	std	Z+1, r6	; 0x01
    2bb4:	a2 2b       	or	r26, r18
    2bb6:	a2 83       	std	Z+2, r26	; 0x02
    2bb8:	b3 2b       	or	r27, r19
    2bba:	b3 83       	std	Z+3, r27	; 0x03
    2bbc:	64 83       	std	Z+4, r22	; 0x04
    2bbe:	75 83       	std	Z+5, r23	; 0x05
    2bc0:	86 83       	std	Z+6, r24	; 0x06
    2bc2:	97 83       	std	Z+7, r25	; 0x07

	return (arrayLength == 0);
}
    2bc4:	81 e0       	ldi	r24, 0x01	; 1
    2bc6:	0f 90       	pop	r0
    2bc8:	0f 90       	pop	r0
    2bca:	0f 90       	pop	r0
    2bcc:	0f 90       	pop	r0
    2bce:	cf 91       	pop	r28
    2bd0:	df 91       	pop	r29
    2bd2:	1f 91       	pop	r17
    2bd4:	0f 91       	pop	r16
    2bd6:	ff 90       	pop	r15
    2bd8:	ef 90       	pop	r14
    2bda:	df 90       	pop	r13
    2bdc:	cf 90       	pop	r12
    2bde:	bf 90       	pop	r11
    2be0:	af 90       	pop	r10
    2be2:	9f 90       	pop	r9
    2be4:	8f 90       	pop	r8
    2be6:	7f 90       	pop	r7
    2be8:	6f 90       	pop	r6
    2bea:	5f 90       	pop	r5
    2bec:	4f 90       	pop	r4
    2bee:	3f 90       	pop	r3
    2bf0:	2f 90       	pop	r2
    2bf2:	08 95       	ret

00002bf4 <CameraControl_DeviceInfo_Parse>:

/*------------------------------------------------------------------------------
 * CameraControl_DeviceInfo_Parse
 */
void CameraControl_DeviceInfo_Parse(uint16_t len, uint8_t *pbuf)
{
    2bf4:	0f 93       	push	r16
    2bf6:	1f 93       	push	r17
    2bf8:	df 93       	push	r29
    2bfa:	cf 93       	push	r28
    2bfc:	00 d0       	rcall	.+0      	; 0x2bfe <CameraControl_DeviceInfo_Parse+0xa>
    2bfe:	00 d0       	rcall	.+0      	; 0x2c00 <CameraControl_DeviceInfo_Parse+0xc>
    2c00:	cd b7       	in	r28, 0x3d	; 61
    2c02:	de b7       	in	r29, 0x3e	; 62
    2c04:	fb 01       	movw	r30, r22
	uint16_t	count	= (uint16_t)len;
    2c06:	9a 83       	std	Y+2, r25	; 0x02
    2c08:	89 83       	std	Y+1, r24	; 0x01
	uint8_t		*p		= (uint8_t*)pbuf;
    2c0a:	7c 83       	std	Y+4, r23	; 0x04
    2c0c:	6b 83       	std	Y+3, r22	; 0x03

	switch (g_nStage)
    2c0e:	20 91 4e 02 	lds	r18, 0x024E
    2c12:	25 30       	cpi	r18, 0x05	; 5
    2c14:	09 f4       	brne	.+2      	; 0x2c18 <CameraControl_DeviceInfo_Parse+0x24>
    2c16:	8f c0       	rjmp	.+286    	; 0x2d36 <CameraControl_DeviceInfo_Parse+0x142>
    2c18:	26 30       	cpi	r18, 0x06	; 6
    2c1a:	90 f4       	brcc	.+36     	; 0x2c40 <CameraControl_DeviceInfo_Parse+0x4c>
    2c1c:	22 30       	cpi	r18, 0x02	; 2
    2c1e:	09 f4       	brne	.+2      	; 0x2c22 <CameraControl_DeviceInfo_Parse+0x2e>
    2c20:	56 c0       	rjmp	.+172    	; 0x2cce <CameraControl_DeviceInfo_Parse+0xda>
    2c22:	23 30       	cpi	r18, 0x03	; 3
    2c24:	30 f4       	brcc	.+12     	; 0x2c32 <CameraControl_DeviceInfo_Parse+0x3e>
    2c26:	22 23       	and	r18, r18
    2c28:	09 f1       	breq	.+66     	; 0x2c6c <CameraControl_DeviceInfo_Parse+0x78>
    2c2a:	21 30       	cpi	r18, 0x01	; 1
    2c2c:	09 f0       	breq	.+2      	; 0x2c30 <CameraControl_DeviceInfo_Parse+0x3c>
    2c2e:	e8 c0       	rjmp	.+464    	; 0x2e00 <CameraControl_DeviceInfo_Parse+0x20c>
    2c30:	40 c0       	rjmp	.+128    	; 0x2cb2 <CameraControl_DeviceInfo_Parse+0xbe>
    2c32:	23 30       	cpi	r18, 0x03	; 3
    2c34:	09 f4       	brne	.+2      	; 0x2c38 <CameraControl_DeviceInfo_Parse+0x44>
    2c36:	5f c0       	rjmp	.+190    	; 0x2cf6 <CameraControl_DeviceInfo_Parse+0x102>
    2c38:	24 30       	cpi	r18, 0x04	; 4
    2c3a:	09 f0       	breq	.+2      	; 0x2c3e <CameraControl_DeviceInfo_Parse+0x4a>
    2c3c:	e1 c0       	rjmp	.+450    	; 0x2e00 <CameraControl_DeviceInfo_Parse+0x20c>
    2c3e:	6b c0       	rjmp	.+214    	; 0x2d16 <CameraControl_DeviceInfo_Parse+0x122>
    2c40:	28 30       	cpi	r18, 0x08	; 8
    2c42:	09 f4       	brne	.+2      	; 0x2c46 <CameraControl_DeviceInfo_Parse+0x52>
    2c44:	a8 c0       	rjmp	.+336    	; 0x2d96 <CameraControl_DeviceInfo_Parse+0x1a2>
    2c46:	29 30       	cpi	r18, 0x09	; 9
    2c48:	38 f4       	brcc	.+14     	; 0x2c58 <CameraControl_DeviceInfo_Parse+0x64>
    2c4a:	26 30       	cpi	r18, 0x06	; 6
    2c4c:	09 f4       	brne	.+2      	; 0x2c50 <CameraControl_DeviceInfo_Parse+0x5c>
    2c4e:	83 c0       	rjmp	.+262    	; 0x2d56 <CameraControl_DeviceInfo_Parse+0x162>
    2c50:	27 30       	cpi	r18, 0x07	; 7
    2c52:	09 f0       	breq	.+2      	; 0x2c56 <CameraControl_DeviceInfo_Parse+0x62>
    2c54:	d5 c0       	rjmp	.+426    	; 0x2e00 <CameraControl_DeviceInfo_Parse+0x20c>
    2c56:	8f c0       	rjmp	.+286    	; 0x2d76 <CameraControl_DeviceInfo_Parse+0x182>
    2c58:	2a 30       	cpi	r18, 0x0A	; 10
    2c5a:	09 f4       	brne	.+2      	; 0x2c5e <CameraControl_DeviceInfo_Parse+0x6a>
    2c5c:	b8 c0       	rjmp	.+368    	; 0x2dce <CameraControl_DeviceInfo_Parse+0x1da>
    2c5e:	2a 30       	cpi	r18, 0x0A	; 10
    2c60:	08 f4       	brcc	.+2      	; 0x2c64 <CameraControl_DeviceInfo_Parse+0x70>
    2c62:	a7 c0       	rjmp	.+334    	; 0x2db2 <CameraControl_DeviceInfo_Parse+0x1be>
    2c64:	2b 30       	cpi	r18, 0x0B	; 11
    2c66:	09 f0       	breq	.+2      	; 0x2c6a <CameraControl_DeviceInfo_Parse+0x76>
    2c68:	cb c0       	rjmp	.+406    	; 0x2e00 <CameraControl_DeviceInfo_Parse+0x20c>
    2c6a:	bf c0       	rjmp	.+382    	; 0x2dea <CameraControl_DeviceInfo_Parse+0x1f6>
	{
	case 0:
		g_stDeviceInfo.iStandardVersion = *(uint16_t*)p;
    2c6c:	20 81       	ld	r18, Z
    2c6e:	31 81       	ldd	r19, Z+1	; 0x01
    2c70:	30 93 51 02 	sts	0x0251, r19
    2c74:	20 93 50 02 	sts	0x0250, r18
		p += 2;		count -= 2;

		g_stDeviceInfo.iVendorExtensionID = *((uint32_t*)p);
    2c78:	22 81       	ldd	r18, Z+2	; 0x02
    2c7a:	33 81       	ldd	r19, Z+3	; 0x03
    2c7c:	44 81       	ldd	r20, Z+4	; 0x04
    2c7e:	55 81       	ldd	r21, Z+5	; 0x05
    2c80:	20 93 52 02 	sts	0x0252, r18
    2c84:	30 93 53 02 	sts	0x0253, r19
    2c88:	40 93 54 02 	sts	0x0254, r20
    2c8c:	50 93 55 02 	sts	0x0255, r21
		p += 4; 	count -= 4;

		g_stDeviceInfo.iVendorExtensionVersion = *((uint16_t*)p);
    2c90:	26 81       	ldd	r18, Z+6	; 0x06
    2c92:	37 81       	ldd	r19, Z+7	; 0x07
    2c94:	30 93 57 02 	sts	0x0257, r19
    2c98:	20 93 56 02 	sts	0x0256, r18
		p += 2;		count -=2;
    2c9c:	38 96       	adiw	r30, 0x08	; 8
    2c9e:	fc 83       	std	Y+4, r31	; 0x04
    2ca0:	eb 83       	std	Y+3, r30	; 0x03
    2ca2:	08 97       	sbiw	r24, 0x08	; 8
    2ca4:	9a 83       	std	Y+2, r25	; 0x02
    2ca6:	89 83       	std	Y+1, r24	; 0x01

		g_nStage ++;
    2ca8:	80 91 4e 02 	lds	r24, 0x024E
    2cac:	8f 5f       	subi	r24, 0xFF	; 255
    2cae:	80 93 4e 02 	sts	0x024E, r24
	case 1:
		// Vendor Extendion Description
		CameraControl_DeviceInfo_CopyString(&p, &count, 
    2cb2:	ce 01       	movw	r24, r28
    2cb4:	03 96       	adiw	r24, 0x03	; 3
    2cb6:	be 01       	movw	r22, r28
    2cb8:	6f 5f       	subi	r22, 0xFF	; 255
    2cba:	7f 4f       	sbci	r23, 0xFF	; 255
    2cbc:	48 e5       	ldi	r20, 0x58	; 88
    2cbe:	52 e0       	ldi	r21, 0x02	; 2
    2cc0:	24 e1       	ldi	r18, 0x14	; 20
    2cc2:	7e de       	rcall	.-772    	; 0x29c0 <CameraControl_DeviceInfo_CopyString>
											g_stDeviceInfo.sVendorExtensionDescription, 
											DEVINFO_MAX_STRING_SIZE);
		g_nStage ++;
    2cc4:	80 91 4e 02 	lds	r24, 0x024E
    2cc8:	8f 5f       	subi	r24, 0xFF	; 255
    2cca:	80 93 4e 02 	sts	0x024E, r24
	case 2:
		// Function Mode
		g_stDeviceInfo.iFunctionMode = *((uint16_t*)p);
    2cce:	eb 81       	ldd	r30, Y+3	; 0x03
    2cd0:	fc 81       	ldd	r31, Y+4	; 0x04
    2cd2:	81 91       	ld	r24, Z+
    2cd4:	91 91       	ld	r25, Z+
    2cd6:	90 93 6d 02 	sts	0x026D, r25
    2cda:	80 93 6c 02 	sts	0x026C, r24
		p += 2;		count -=2;
    2cde:	fc 83       	std	Y+4, r31	; 0x04
    2ce0:	eb 83       	std	Y+3, r30	; 0x03
    2ce2:	89 81       	ldd	r24, Y+1	; 0x01
    2ce4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ce6:	02 97       	sbiw	r24, 0x02	; 2
    2ce8:	9a 83       	std	Y+2, r25	; 0x02
    2cea:	89 83       	std	Y+1, r24	; 0x01
		g_nStage ++;
    2cec:	80 91 4e 02 	lds	r24, 0x024E
    2cf0:	8f 5f       	subi	r24, 0xFF	; 255
    2cf2:	80 93 4e 02 	sts	0x024E, r24
	case 3:
		// Operations Supported
		CameraControl_DeviceInfo_CopyArray(&p, &count, 2, &g_stDeviceInfo.iOperationsSupported, OPERATION_SUPPORT_BASE);
    2cf6:	ce 01       	movw	r24, r28
    2cf8:	03 96       	adiw	r24, 0x03	; 3
    2cfa:	be 01       	movw	r22, r28
    2cfc:	6f 5f       	subi	r22, 0xFF	; 255
    2cfe:	7f 4f       	sbci	r23, 0xFF	; 255
    2d00:	42 e0       	ldi	r20, 0x02	; 2
    2d02:	2e e6       	ldi	r18, 0x6E	; 110
    2d04:	32 e0       	ldi	r19, 0x02	; 2
    2d06:	00 e0       	ldi	r16, 0x00	; 0
    2d08:	10 e1       	ldi	r17, 0x10	; 16
    2d0a:	b3 de       	rcall	.-666    	; 0x2a72 <CameraControl_DeviceInfo_CopyArray>
		g_nStage ++;
    2d0c:	80 91 4e 02 	lds	r24, 0x024E
    2d10:	8f 5f       	subi	r24, 0xFF	; 255
    2d12:	80 93 4e 02 	sts	0x024E, r24
	case 4:
		// Events Supported
		CameraControl_DeviceInfo_CopyArray(&p, &count, 2, &g_stDeviceInfo.iEventsSupported, EVENT_SUPPORT_BASE);
    2d16:	ce 01       	movw	r24, r28
    2d18:	03 96       	adiw	r24, 0x03	; 3
    2d1a:	be 01       	movw	r22, r28
    2d1c:	6f 5f       	subi	r22, 0xFF	; 255
    2d1e:	7f 4f       	sbci	r23, 0xFF	; 255
    2d20:	42 e0       	ldi	r20, 0x02	; 2
    2d22:	26 e7       	ldi	r18, 0x76	; 118
    2d24:	32 e0       	ldi	r19, 0x02	; 2
    2d26:	00 e0       	ldi	r16, 0x00	; 0
    2d28:	10 e4       	ldi	r17, 0x40	; 64
    2d2a:	a3 de       	rcall	.-698    	; 0x2a72 <CameraControl_DeviceInfo_CopyArray>
		g_nStage ++;
    2d2c:	80 91 4e 02 	lds	r24, 0x024E
    2d30:	8f 5f       	subi	r24, 0xFF	; 255
    2d32:	80 93 4e 02 	sts	0x024E, r24
	case 5:
		// Device Properties Supported
		CameraControl_DeviceInfo_CopyArray(&p, &count, 2, &g_stDeviceInfo.iPropertiesSupported, PROPERTY_SUPPORT_BASE);
    2d36:	ce 01       	movw	r24, r28
    2d38:	03 96       	adiw	r24, 0x03	; 3
    2d3a:	be 01       	movw	r22, r28
    2d3c:	6f 5f       	subi	r22, 0xFF	; 255
    2d3e:	7f 4f       	sbci	r23, 0xFF	; 255
    2d40:	42 e0       	ldi	r20, 0x02	; 2
    2d42:	2e e7       	ldi	r18, 0x7E	; 126
    2d44:	32 e0       	ldi	r19, 0x02	; 2
    2d46:	00 e0       	ldi	r16, 0x00	; 0
    2d48:	10 e5       	ldi	r17, 0x50	; 80
    2d4a:	93 de       	rcall	.-730    	; 0x2a72 <CameraControl_DeviceInfo_CopyArray>
		g_nStage ++;
    2d4c:	80 91 4e 02 	lds	r24, 0x024E
    2d50:	8f 5f       	subi	r24, 0xFF	; 255
    2d52:	80 93 4e 02 	sts	0x024E, r24
	case 6:
		// Capture formats
		CameraControl_DeviceInfo_CopyArray(&p, &count, 2, &g_stDeviceInfo.iCaptureFormatsSupported, CAP_FORMAT_SUPPORT_BASE);
    2d56:	ce 01       	movw	r24, r28
    2d58:	03 96       	adiw	r24, 0x03	; 3
    2d5a:	be 01       	movw	r22, r28
    2d5c:	6f 5f       	subi	r22, 0xFF	; 255
    2d5e:	7f 4f       	sbci	r23, 0xFF	; 255
    2d60:	42 e0       	ldi	r20, 0x02	; 2
    2d62:	26 e8       	ldi	r18, 0x86	; 134
    2d64:	32 e0       	ldi	r19, 0x02	; 2
    2d66:	00 e0       	ldi	r16, 0x00	; 0
    2d68:	10 e3       	ldi	r17, 0x30	; 48
    2d6a:	83 de       	rcall	.-762    	; 0x2a72 <CameraControl_DeviceInfo_CopyArray>
		g_nStage ++;
    2d6c:	80 91 4e 02 	lds	r24, 0x024E
    2d70:	8f 5f       	subi	r24, 0xFF	; 255
    2d72:	80 93 4e 02 	sts	0x024E, r24
	case 7:
		// Image Formats
		CameraControl_DeviceInfo_CopyArray(&p, &count, 2, &g_stDeviceInfo.iImageFormatsSupported, IM_FORMAT_SUPPORT_BASE);
    2d76:	ce 01       	movw	r24, r28
    2d78:	03 96       	adiw	r24, 0x03	; 3
    2d7a:	be 01       	movw	r22, r28
    2d7c:	6f 5f       	subi	r22, 0xFF	; 255
    2d7e:	7f 4f       	sbci	r23, 0xFF	; 255
    2d80:	42 e0       	ldi	r20, 0x02	; 2
    2d82:	2e e8       	ldi	r18, 0x8E	; 142
    2d84:	32 e0       	ldi	r19, 0x02	; 2
    2d86:	00 e0       	ldi	r16, 0x00	; 0
    2d88:	18 e3       	ldi	r17, 0x38	; 56
    2d8a:	73 de       	rcall	.-794    	; 0x2a72 <CameraControl_DeviceInfo_CopyArray>
		g_nStage ++;
    2d8c:	80 91 4e 02 	lds	r24, 0x024E
    2d90:	8f 5f       	subi	r24, 0xFF	; 255
    2d92:	80 93 4e 02 	sts	0x024E, r24
	case 8:
		// Manufacturer
		CameraControl_DeviceInfo_CopyString(&p, &count, 
    2d96:	ce 01       	movw	r24, r28
    2d98:	03 96       	adiw	r24, 0x03	; 3
    2d9a:	be 01       	movw	r22, r28
    2d9c:	6f 5f       	subi	r22, 0xFF	; 255
    2d9e:	7f 4f       	sbci	r23, 0xFF	; 255
    2da0:	46 e9       	ldi	r20, 0x96	; 150
    2da2:	52 e0       	ldi	r21, 0x02	; 2
    2da4:	24 e1       	ldi	r18, 0x14	; 20
    2da6:	0c de       	rcall	.-1000   	; 0x29c0 <CameraControl_DeviceInfo_CopyString>
											g_stDeviceInfo.sManufacturer, 
											DEVINFO_MAX_STRING_SIZE);
		g_nStage ++;
    2da8:	80 91 4e 02 	lds	r24, 0x024E
    2dac:	8f 5f       	subi	r24, 0xFF	; 255
    2dae:	80 93 4e 02 	sts	0x024E, r24
	case 9:
		// Model
		CameraControl_DeviceInfo_CopyString(&p, &count, 
    2db2:	ce 01       	movw	r24, r28
    2db4:	03 96       	adiw	r24, 0x03	; 3
    2db6:	be 01       	movw	r22, r28
    2db8:	6f 5f       	subi	r22, 0xFF	; 255
    2dba:	7f 4f       	sbci	r23, 0xFF	; 255
    2dbc:	4a ea       	ldi	r20, 0xAA	; 170
    2dbe:	52 e0       	ldi	r21, 0x02	; 2
    2dc0:	24 e1       	ldi	r18, 0x14	; 20
    2dc2:	fe dd       	rcall	.-1028   	; 0x29c0 <CameraControl_DeviceInfo_CopyString>
											g_stDeviceInfo.Model, 
											DEVINFO_MAX_STRING_SIZE);
		g_nStage ++;
    2dc4:	80 91 4e 02 	lds	r24, 0x024E
    2dc8:	8f 5f       	subi	r24, 0xFF	; 255
    2dca:	80 93 4e 02 	sts	0x024E, r24
	case 10:
		// Device version
		CameraControl_DeviceInfo_CopyString(&p, &count, 
    2dce:	ce 01       	movw	r24, r28
    2dd0:	03 96       	adiw	r24, 0x03	; 3
    2dd2:	be 01       	movw	r22, r28
    2dd4:	6f 5f       	subi	r22, 0xFF	; 255
    2dd6:	7f 4f       	sbci	r23, 0xFF	; 255
    2dd8:	4e eb       	ldi	r20, 0xBE	; 190
    2dda:	52 e0       	ldi	r21, 0x02	; 2
    2ddc:	24 e1       	ldi	r18, 0x14	; 20
    2dde:	f0 dd       	rcall	.-1056   	; 0x29c0 <CameraControl_DeviceInfo_CopyString>
											g_stDeviceInfo.DeviceVersion, 
											DEVINFO_MAX_STRING_SIZE);
		g_nStage ++;
    2de0:	80 91 4e 02 	lds	r24, 0x024E
    2de4:	8f 5f       	subi	r24, 0xFF	; 255
    2de6:	80 93 4e 02 	sts	0x024E, r24
	case 11:
		// Serial number
		CameraControl_DeviceInfo_CopyString(&p, &count, 
    2dea:	ce 01       	movw	r24, r28
    2dec:	03 96       	adiw	r24, 0x03	; 3
    2dee:	be 01       	movw	r22, r28
    2df0:	6f 5f       	subi	r22, 0xFF	; 255
    2df2:	7f 4f       	sbci	r23, 0xFF	; 255
    2df4:	42 ed       	ldi	r20, 0xD2	; 210
    2df6:	52 e0       	ldi	r21, 0x02	; 2
    2df8:	24 e1       	ldi	r18, 0x14	; 20
    2dfa:	e2 dd       	rcall	.-1084   	; 0x29c0 <CameraControl_DeviceInfo_CopyString>
											g_stDeviceInfo.SerialNumber, 
											DEVINFO_MAX_STRING_SIZE);
		g_nStage = 0;
    2dfc:	10 92 4e 02 	sts	0x024E, r1
	}
}
    2e00:	0f 90       	pop	r0
    2e02:	0f 90       	pop	r0
    2e04:	0f 90       	pop	r0
    2e06:	0f 90       	pop	r0
    2e08:	cf 91       	pop	r28
    2e0a:	df 91       	pop	r29
    2e0c:	1f 91       	pop	r17
    2e0e:	0f 91       	pop	r16
    2e10:	08 95       	ret

00002e12 <CameraControl_DeviceInfo_GetInfo>:

/*------------------------------------------------------------------------------
 * CameraControl_DeviceInfo_GetInfo
 */
uint8_t CameraControl_DeviceInfo_GetInfo ( USB_ClassInfo_SI_Host_t* SIInterfaceInfo )
{
    2e12:	8f 92       	push	r8
    2e14:	9f 92       	push	r9
    2e16:	af 92       	push	r10
    2e18:	bf 92       	push	r11
    2e1a:	cf 92       	push	r12
    2e1c:	df 92       	push	r13
    2e1e:	ef 92       	push	r14
    2e20:	ff 92       	push	r15
    2e22:	0f 93       	push	r16
    2e24:	1f 93       	push	r17
    2e26:	df 93       	push	r29
    2e28:	cf 93       	push	r28
    2e2a:	cd b7       	in	r28, 0x3d	; 61
    2e2c:	de b7       	in	r29, 0x3e	; 62
    2e2e:	68 97       	sbiw	r28, 0x18	; 24
    2e30:	0f b6       	in	r0, 0x3f	; 63
    2e32:	f8 94       	cli
    2e34:	de bf       	out	0x3e, r29	; 62
    2e36:	0f be       	out	0x3f, r0	; 63
    2e38:	cd bf       	out	0x3d, r28	; 61
    2e3a:	7c 01       	movw	r14, r24

	g_iDataIsValid = 1;
	
	// Receive the final response block from the device 
	return CameraControl_GetResponseAndCheck (SIInterfaceInfo, &PIMABlock);
}
    2e3c:	8d b6       	in	r8, 0x3d	; 61
    2e3e:	9e b6       	in	r9, 0x3e	; 62
uint8_t CameraControl_DeviceInfo_GetInfo ( USB_ClassInfo_SI_Host_t* SIInterfaceInfo )
{
	uint16_t DeviceInfoSize;
	uint8_t ErrorCode;

	CHECK_CAMERA_CONNECTION;
    2e40:	80 91 f6 03 	lds	r24, 0x03F6
    2e44:	8b 30       	cpi	r24, 0x0B	; 11
    2e46:	21 f4       	brne	.+8      	; 0x2e50 <CameraControl_DeviceInfo_GetInfo+0x3e>
    2e48:	f7 01       	movw	r30, r14
    2e4a:	86 81       	ldd	r24, Z+6	; 0x06
    2e4c:	88 23       	and	r24, r24
    2e4e:	69 f4       	brne	.+26     	; 0x2e6a <CameraControl_DeviceInfo_GetInfo+0x58>
    2e50:	00 d0       	rcall	.+0      	; 0x2e52 <CameraControl_DeviceInfo_GetInfo+0x40>
    2e52:	86 ed       	ldi	r24, 0xD6	; 214
    2e54:	9a e0       	ldi	r25, 0x0A	; 10
    2e56:	ed b7       	in	r30, 0x3d	; 61
    2e58:	fe b7       	in	r31, 0x3e	; 62
    2e5a:	92 83       	std	Z+2, r25	; 0x02
    2e5c:	81 83       	std	Z+1, r24	; 0x01
    2e5e:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    2e62:	0f 90       	pop	r0
    2e64:	0f 90       	pop	r0
    2e66:	80 e0       	ldi	r24, 0x00	; 0
    2e68:	57 c0       	rjmp	.+174    	; 0x2f18 <CameraControl_DeviceInfo_GetInfo+0x106>

	SIInterfaceInfo->State.TransactionID = 0;
    2e6a:	f7 01       	movw	r30, r14
    2e6c:	17 86       	std	Z+15, r1	; 0x0f
    2e6e:	10 8a       	std	Z+16, r1	; 0x10
    2e70:	11 8a       	std	Z+17, r1	; 0x11
    2e72:	12 8a       	std	Z+18, r1	; 0x12

	// Create PIMA message block
	PIMA_Container_t PIMABlock = (PIMA_Container_t)
    2e74:	6e 01       	movw	r12, r28
    2e76:	08 94       	sec
    2e78:	c1 1c       	adc	r12, r1
    2e7a:	d1 1c       	adc	r13, r1
    2e7c:	88 e1       	ldi	r24, 0x18	; 24
    2e7e:	f6 01       	movw	r30, r12
    2e80:	11 92       	st	Z+, r1
    2e82:	8a 95       	dec	r24
    2e84:	e9 f7       	brne	.-6      	; 0x2e80 <CameraControl_DeviceInfo_GetInfo+0x6e>
    2e86:	8c e0       	ldi	r24, 0x0C	; 12
    2e88:	90 e0       	ldi	r25, 0x00	; 0
    2e8a:	a0 e0       	ldi	r26, 0x00	; 0
    2e8c:	b0 e0       	ldi	r27, 0x00	; 0
    2e8e:	89 83       	std	Y+1, r24	; 0x01
    2e90:	9a 83       	std	Y+2, r25	; 0x02
    2e92:	ab 83       	std	Y+3, r26	; 0x03
    2e94:	bc 83       	std	Y+4, r27	; 0x04
    2e96:	81 e0       	ldi	r24, 0x01	; 1
    2e98:	90 e0       	ldi	r25, 0x00	; 0
    2e9a:	9e 83       	std	Y+6, r25	; 0x06
    2e9c:	8d 83       	std	Y+5, r24	; 0x05
    2e9e:	81 e0       	ldi	r24, 0x01	; 1
    2ea0:	90 e1       	ldi	r25, 0x10	; 16
    2ea2:	98 87       	std	Y+8, r25	; 0x08
    2ea4:	8f 83       	std	Y+7, r24	; 0x07
			.Code          = CPU_TO_LE16(PTP_OC_GetDeviceInfo),
			.TransactionID = CPU_TO_LE32(0x00000000),
			.Params        = {},
		};

	ErrorCode = CameraControl_InitiateTransaction ( SIInterfaceInfo, &PIMABlock );
    2ea6:	c7 01       	movw	r24, r14
    2ea8:	b6 01       	movw	r22, r12
    2eaa:	a5 dc       	rcall	.-1718   	; 0x27f6 <CameraControl_InitiateTransaction>

	// Get the size (in bytes) of the device info structure
	DeviceInfoSize = (PIMABlock.DataLength - PIMA_COMMAND_SIZE(0));
    2eac:	09 81       	ldd	r16, Y+1	; 0x01
    2eae:	1a 81       	ldd	r17, Y+2	; 0x02
    2eb0:	0c 50       	subi	r16, 0x0C	; 12
    2eb2:	10 40       	sbci	r17, 0x00	; 0
	printf_P(PSTR(ESC_FG_CYAN "	Got device info of %d bytes.\r\n" ESC_FG_WHITE), DeviceInfoSize);
    2eb4:	00 d0       	rcall	.+0      	; 0x2eb6 <CameraControl_DeviceInfo_GetInfo+0xa4>
    2eb6:	00 d0       	rcall	.+0      	; 0x2eb8 <CameraControl_DeviceInfo_GetInfo+0xa6>
    2eb8:	8c ea       	ldi	r24, 0xAC	; 172
    2eba:	9a e0       	ldi	r25, 0x0A	; 10
    2ebc:	ed b7       	in	r30, 0x3d	; 61
    2ebe:	fe b7       	in	r31, 0x3e	; 62
    2ec0:	92 83       	std	Z+2, r25	; 0x02
    2ec2:	81 83       	std	Z+1, r24	; 0x01
    2ec4:	14 83       	std	Z+4, r17	; 0x04
    2ec6:	03 83       	std	Z+3, r16	; 0x03
    2ec8:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>

	// Create a buffer large enough to hold the entire device info
	uint8_t DeviceInfo[DeviceInfoSize];
    2ecc:	0f 90       	pop	r0
    2ece:	0f 90       	pop	r0
    2ed0:	0f 90       	pop	r0
    2ed2:	0f 90       	pop	r0
    2ed4:	8d b7       	in	r24, 0x3d	; 61
    2ed6:	9e b7       	in	r25, 0x3e	; 62
    2ed8:	80 1b       	sub	r24, r16
    2eda:	91 0b       	sbc	r25, r17
    2edc:	0f b6       	in	r0, 0x3f	; 63
    2ede:	f8 94       	cli
    2ee0:	9e bf       	out	0x3e, r25	; 62
    2ee2:	0f be       	out	0x3f, r0	; 63
    2ee4:	8d bf       	out	0x3d, r24	; 61
    2ee6:	ad b6       	in	r10, 0x3d	; 61
    2ee8:	be b6       	in	r11, 0x3e	; 62
    2eea:	08 94       	sec
    2eec:	a1 1c       	adc	r10, r1
    2eee:	b1 1c       	adc	r11, r1

	// Read in the data block data (containing device info)
	SI_Host_ReadData(SIInterfaceInfo, DeviceInfo, DeviceInfoSize);
    2ef0:	c7 01       	movw	r24, r14
    2ef2:	b5 01       	movw	r22, r10
    2ef4:	a8 01       	movw	r20, r16
    2ef6:	fd d9       	rcall	.-3078   	; 0x22f2 <SI_Host_ReadData>
			 *  \ingroup Group_PipePacketManagement_AVR8
			 */
			static inline void Pipe_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Pipe_ClearIN(void)
			{
				UPINTX &= ~((1 << RXINI) | (1 << FIFOCON));
    2ef8:	80 91 a6 00 	lds	r24, 0x00A6
    2efc:	8e 77       	andi	r24, 0x7E	; 126
    2efe:	80 93 a6 00 	sts	0x00A6, r24
	Pipe_ClearIN();

	// Create a pointer for walking through the info dataset 
	uint8_t* DeviceInfoPos = DeviceInfo;

	g_nStage = 0;
    2f02:	10 92 4e 02 	sts	0x024E, r1
	CameraControl_DeviceInfo_Parse(DeviceInfoSize, DeviceInfoPos);
    2f06:	c8 01       	movw	r24, r16
    2f08:	b5 01       	movw	r22, r10
    2f0a:	74 de       	rcall	.-792    	; 0x2bf4 <CameraControl_DeviceInfo_Parse>

	g_iDataIsValid = 1;
    2f0c:	81 e0       	ldi	r24, 0x01	; 1
    2f0e:	80 93 4f 02 	sts	0x024F, r24
	
	// Receive the final response block from the device 
	return CameraControl_GetResponseAndCheck (SIInterfaceInfo, &PIMABlock);
    2f12:	c7 01       	movw	r24, r14
    2f14:	b6 01       	movw	r22, r12
    2f16:	3a dc       	rcall	.-1932   	; 0x278c <CameraControl_GetResponseAndCheck>
}
    2f18:	0f b6       	in	r0, 0x3f	; 63
    2f1a:	f8 94       	cli
    2f1c:	9e be       	out	0x3e, r9	; 62
    2f1e:	0f be       	out	0x3f, r0	; 63
    2f20:	8d be       	out	0x3d, r8	; 61
    2f22:	68 96       	adiw	r28, 0x18	; 24
    2f24:	0f b6       	in	r0, 0x3f	; 63
    2f26:	f8 94       	cli
    2f28:	de bf       	out	0x3e, r29	; 62
    2f2a:	0f be       	out	0x3f, r0	; 63
    2f2c:	cd bf       	out	0x3d, r28	; 61
    2f2e:	cf 91       	pop	r28
    2f30:	df 91       	pop	r29
    2f32:	1f 91       	pop	r17
    2f34:	0f 91       	pop	r16
    2f36:	ff 90       	pop	r15
    2f38:	ef 90       	pop	r14
    2f3a:	df 90       	pop	r13
    2f3c:	cf 90       	pop	r12
    2f3e:	bf 90       	pop	r11
    2f40:	af 90       	pop	r10
    2f42:	9f 90       	pop	r9
    2f44:	8f 90       	pop	r8
    2f46:	08 95       	ret

00002f48 <CameraControl_DeviceInfo_Printout>:

/*------------------------------------------------------------------------------
 * CameraControl_DeviceInfo_Printout
 */
uint8_t CameraControl_DeviceInfo_Printout ( USB_ClassInfo_SI_Host_t* SIInterfaceInfo )
{
    2f48:	8f 92       	push	r8
    2f4a:	9f 92       	push	r9
    2f4c:	af 92       	push	r10
    2f4e:	bf 92       	push	r11
    2f50:	cf 92       	push	r12
    2f52:	df 92       	push	r13
    2f54:	ef 92       	push	r14
    2f56:	ff 92       	push	r15
    2f58:	0f 93       	push	r16
    2f5a:	1f 93       	push	r17
    2f5c:	cf 93       	push	r28
    2f5e:	df 93       	push	r29
	uint8_t 	errorCode = 0;

	CHECK_CAMERA_CONNECTION;
    2f60:	20 91 f6 03 	lds	r18, 0x03F6
    2f64:	2b 30       	cpi	r18, 0x0B	; 11
    2f66:	21 f4       	brne	.+8      	; 0x2f70 <CameraControl_DeviceInfo_Printout+0x28>
    2f68:	fc 01       	movw	r30, r24
    2f6a:	26 81       	ldd	r18, Z+6	; 0x06
    2f6c:	22 23       	and	r18, r18
    2f6e:	61 f4       	brne	.+24     	; 0x2f88 <CameraControl_DeviceInfo_Printout+0x40>
    2f70:	00 d0       	rcall	.+0      	; 0x2f72 <CameraControl_DeviceInfo_Printout+0x2a>
    2f72:	84 e9       	ldi	r24, 0x94	; 148
    2f74:	9a e0       	ldi	r25, 0x0A	; 10
    2f76:	ed b7       	in	r30, 0x3d	; 61
    2f78:	fe b7       	in	r31, 0x3e	; 62
    2f7a:	92 83       	std	Z+2, r25	; 0x02
    2f7c:	81 83       	std	Z+1, r24	; 0x01
    2f7e:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    2f82:	0f 90       	pop	r0
    2f84:	0f 90       	pop	r0
    2f86:	f2 c1       	rjmp	.+996    	; 0x336c <CameraControl_DeviceInfo_Printout+0x424>

	if ( !g_iDataIsValid )
    2f88:	20 91 4f 02 	lds	r18, 0x024F
    2f8c:	22 23       	and	r18, r18
    2f8e:	81 f4       	brne	.+32     	; 0x2fb0 <CameraControl_DeviceInfo_Printout+0x68>
	{
		errorCode = CameraControl_DeviceInfo_GetInfo ( SIInterfaceInfo );
    2f90:	40 df       	rcall	.-384    	; 0x2e12 <CameraControl_DeviceInfo_GetInfo>
    2f92:	18 2f       	mov	r17, r24
		if (PIPE_RWSTREAM_NoError != errorCode )
    2f94:	88 23       	and	r24, r24
    2f96:	61 f0       	breq	.+24     	; 0x2fb0 <CameraControl_DeviceInfo_Printout+0x68>
		{
			printf_P(PSTR("Error reading device info\r\n"));
    2f98:	00 d0       	rcall	.+0      	; 0x2f9a <CameraControl_DeviceInfo_Printout+0x52>
    2f9a:	28 e7       	ldi	r18, 0x78	; 120
    2f9c:	3a e0       	ldi	r19, 0x0A	; 10
    2f9e:	ed b7       	in	r30, 0x3d	; 61
    2fa0:	fe b7       	in	r31, 0x3e	; 62
    2fa2:	32 83       	std	Z+2, r19	; 0x02
    2fa4:	21 83       	std	Z+1, r18	; 0x01
    2fa6:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
			return errorCode;	
    2faa:	0f 90       	pop	r0
    2fac:	0f 90       	pop	r0
    2fae:	df c1       	rjmp	.+958    	; 0x336e <CameraControl_DeviceInfo_Printout+0x426>
		}
	}

	printf_P(PSTR("Std.Ver.:\t%d\r\n"), g_stDeviceInfo.iStandardVersion);
    2fb0:	00 d0       	rcall	.+0      	; 0x2fb2 <CameraControl_DeviceInfo_Printout+0x6a>
    2fb2:	00 d0       	rcall	.+0      	; 0x2fb4 <CameraControl_DeviceInfo_Printout+0x6c>
    2fb4:	89 e6       	ldi	r24, 0x69	; 105
    2fb6:	9a e0       	ldi	r25, 0x0A	; 10
    2fb8:	ed b7       	in	r30, 0x3d	; 61
    2fba:	fe b7       	in	r31, 0x3e	; 62
    2fbc:	92 83       	std	Z+2, r25	; 0x02
    2fbe:	81 83       	std	Z+1, r24	; 0x01
    2fc0:	80 91 50 02 	lds	r24, 0x0250
    2fc4:	90 91 51 02 	lds	r25, 0x0251
    2fc8:	94 83       	std	Z+4, r25	; 0x04
    2fca:	83 83       	std	Z+3, r24	; 0x03
    2fcc:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
	printf_P(PSTR("Vend.Ext.ID.:\t%d\r\n"), g_stDeviceInfo.iVendorExtensionID);
    2fd0:	00 d0       	rcall	.+0      	; 0x2fd2 <CameraControl_DeviceInfo_Printout+0x8a>
    2fd2:	86 e5       	ldi	r24, 0x56	; 86
    2fd4:	9a e0       	ldi	r25, 0x0A	; 10
    2fd6:	ed b7       	in	r30, 0x3d	; 61
    2fd8:	fe b7       	in	r31, 0x3e	; 62
    2fda:	92 83       	std	Z+2, r25	; 0x02
    2fdc:	81 83       	std	Z+1, r24	; 0x01
    2fde:	80 91 52 02 	lds	r24, 0x0252
    2fe2:	90 91 53 02 	lds	r25, 0x0253
    2fe6:	a0 91 54 02 	lds	r26, 0x0254
    2fea:	b0 91 55 02 	lds	r27, 0x0255
    2fee:	83 83       	std	Z+3, r24	; 0x03
    2ff0:	94 83       	std	Z+4, r25	; 0x04
    2ff2:	a5 83       	std	Z+5, r26	; 0x05
    2ff4:	b6 83       	std	Z+6, r27	; 0x06
    2ff6:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
	printf_P(PSTR("Vend.Ext.Ver.:\t%d\r\n"), g_stDeviceInfo.iVendorExtensionVersion);
    2ffa:	0f 90       	pop	r0
    2ffc:	0f 90       	pop	r0
    2ffe:	82 e4       	ldi	r24, 0x42	; 66
    3000:	9a e0       	ldi	r25, 0x0A	; 10
    3002:	ed b7       	in	r30, 0x3d	; 61
    3004:	fe b7       	in	r31, 0x3e	; 62
    3006:	92 83       	std	Z+2, r25	; 0x02
    3008:	81 83       	std	Z+1, r24	; 0x01
    300a:	80 91 56 02 	lds	r24, 0x0256
    300e:	90 91 57 02 	lds	r25, 0x0257
    3012:	94 83       	std	Z+4, r25	; 0x04
    3014:	83 83       	std	Z+3, r24	; 0x03
    3016:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
	printf_P(PSTR("\r\nVend.Ext.Desc.:\t%s\r\n"), g_stDeviceInfo.sVendorExtensionDescription);
    301a:	8b e2       	ldi	r24, 0x2B	; 43
    301c:	9a e0       	ldi	r25, 0x0A	; 10
    301e:	ed b7       	in	r30, 0x3d	; 61
    3020:	fe b7       	in	r31, 0x3e	; 62
    3022:	92 83       	std	Z+2, r25	; 0x02
    3024:	81 83       	std	Z+1, r24	; 0x01
    3026:	88 e5       	ldi	r24, 0x58	; 88
    3028:	92 e0       	ldi	r25, 0x02	; 2
    302a:	94 83       	std	Z+4, r25	; 0x04
    302c:	83 83       	std	Z+3, r24	; 0x03
    302e:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
	printf_P(PSTR("Func.Mode:\t%d\r\n"), g_stDeviceInfo.iFunctionMode);
    3032:	8b e1       	ldi	r24, 0x1B	; 27
    3034:	9a e0       	ldi	r25, 0x0A	; 10
    3036:	ed b7       	in	r30, 0x3d	; 61
    3038:	fe b7       	in	r31, 0x3e	; 62
    303a:	92 83       	std	Z+2, r25	; 0x02
    303c:	81 83       	std	Z+1, r24	; 0x01
    303e:	80 91 6c 02 	lds	r24, 0x026C
    3042:	90 91 6d 02 	lds	r25, 0x026D
    3046:	94 83       	std	Z+4, r25	; 0x04
    3048:	83 83       	std	Z+3, r24	; 0x03
    304a:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
	
	PRINT_CAPS(g_stDeviceInfo.iOperationsSupported,"\r\nOperations supported:\r\n",OPERATION_SUPPORT_BASE);
    304e:	a0 90 6e 02 	lds	r10, 0x026E
    3052:	b0 90 6f 02 	lds	r11, 0x026F
    3056:	c0 90 70 02 	lds	r12, 0x0270
    305a:	d0 90 71 02 	lds	r13, 0x0271
    305e:	e0 90 72 02 	lds	r14, 0x0272
    3062:	f0 90 73 02 	lds	r15, 0x0273
    3066:	00 91 74 02 	lds	r16, 0x0274
    306a:	10 91 75 02 	lds	r17, 0x0275
    306e:	0f 90       	pop	r0
    3070:	0f 90       	pop	r0
    3072:	81 e0       	ldi	r24, 0x01	; 1
    3074:	9a e0       	ldi	r25, 0x0A	; 10
    3076:	ed b7       	in	r30, 0x3d	; 61
    3078:	fe b7       	in	r31, 0x3e	; 62
    307a:	92 83       	std	Z+2, r25	; 0x02
    307c:	81 83       	std	Z+1, r24	; 0x01
    307e:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    3082:	0f 90       	pop	r0
    3084:	0f 90       	pop	r0
    3086:	c0 e0       	ldi	r28, 0x00	; 0
    3088:	d0 e1       	ldi	r29, 0x10	; 16
    308a:	e3 ef       	ldi	r30, 0xF3	; 243
    308c:	8e 2e       	mov	r8, r30
    308e:	e9 e0       	ldi	r30, 0x09	; 9
    3090:	9e 2e       	mov	r9, r30
    3092:	c5 01       	movw	r24, r10
    3094:	81 70       	andi	r24, 0x01	; 1
    3096:	90 70       	andi	r25, 0x00	; 0
    3098:	00 97       	sbiw	r24, 0x00	; 0
    309a:	71 f0       	breq	.+28     	; 0x30b8 <CameraControl_DeviceInfo_Printout+0x170>
    309c:	00 d0       	rcall	.+0      	; 0x309e <CameraControl_DeviceInfo_Printout+0x156>
    309e:	00 d0       	rcall	.+0      	; 0x30a0 <CameraControl_DeviceInfo_Printout+0x158>
    30a0:	ed b7       	in	r30, 0x3d	; 61
    30a2:	fe b7       	in	r31, 0x3e	; 62
    30a4:	92 82       	std	Z+2, r9	; 0x02
    30a6:	81 82       	std	Z+1, r8	; 0x01
    30a8:	d4 83       	std	Z+4, r29	; 0x04
    30aa:	c3 83       	std	Z+3, r28	; 0x03
    30ac:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    30b0:	0f 90       	pop	r0
    30b2:	0f 90       	pop	r0
    30b4:	0f 90       	pop	r0
    30b6:	0f 90       	pop	r0
    30b8:	21 96       	adiw	r28, 0x01	; 1
    30ba:	f0 e1       	ldi	r31, 0x10	; 16
    30bc:	c0 34       	cpi	r28, 0x40	; 64
    30be:	df 07       	cpc	r29, r31
    30c0:	61 f0       	breq	.+24     	; 0x30da <CameraControl_DeviceInfo_Printout+0x192>
    30c2:	95 01       	movw	r18, r10
    30c4:	a6 01       	movw	r20, r12
    30c6:	b7 01       	movw	r22, r14
    30c8:	c8 01       	movw	r24, r16
    30ca:	01 e0       	ldi	r16, 0x01	; 1
    30cc:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <__lshrdi3>
    30d0:	59 01       	movw	r10, r18
    30d2:	6a 01       	movw	r12, r20
    30d4:	7b 01       	movw	r14, r22
    30d6:	8c 01       	movw	r16, r24
    30d8:	dc cf       	rjmp	.-72     	; 0x3092 <CameraControl_DeviceInfo_Printout+0x14a>
	PRINT_CAPS(g_stDeviceInfo.iEventsSupported,"\r\nEvents supported:\r\n",EVENT_SUPPORT_BASE);
    30da:	a0 90 76 02 	lds	r10, 0x0276
    30de:	b0 90 77 02 	lds	r11, 0x0277
    30e2:	c0 90 78 02 	lds	r12, 0x0278
    30e6:	d0 90 79 02 	lds	r13, 0x0279
    30ea:	e0 90 7a 02 	lds	r14, 0x027A
    30ee:	f0 90 7b 02 	lds	r15, 0x027B
    30f2:	00 91 7c 02 	lds	r16, 0x027C
    30f6:	10 91 7d 02 	lds	r17, 0x027D
    30fa:	00 d0       	rcall	.+0      	; 0x30fc <CameraControl_DeviceInfo_Printout+0x1b4>
    30fc:	8d ed       	ldi	r24, 0xDD	; 221
    30fe:	99 e0       	ldi	r25, 0x09	; 9
    3100:	ed b7       	in	r30, 0x3d	; 61
    3102:	fe b7       	in	r31, 0x3e	; 62
    3104:	92 83       	std	Z+2, r25	; 0x02
    3106:	81 83       	std	Z+1, r24	; 0x01
    3108:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    310c:	0f 90       	pop	r0
    310e:	0f 90       	pop	r0
    3110:	c0 e0       	ldi	r28, 0x00	; 0
    3112:	d0 e4       	ldi	r29, 0x40	; 64
    3114:	7f ec       	ldi	r23, 0xCF	; 207
    3116:	87 2e       	mov	r8, r23
    3118:	79 e0       	ldi	r23, 0x09	; 9
    311a:	97 2e       	mov	r9, r23
    311c:	c5 01       	movw	r24, r10
    311e:	81 70       	andi	r24, 0x01	; 1
    3120:	90 70       	andi	r25, 0x00	; 0
    3122:	00 97       	sbiw	r24, 0x00	; 0
    3124:	71 f0       	breq	.+28     	; 0x3142 <CameraControl_DeviceInfo_Printout+0x1fa>
    3126:	00 d0       	rcall	.+0      	; 0x3128 <CameraControl_DeviceInfo_Printout+0x1e0>
    3128:	00 d0       	rcall	.+0      	; 0x312a <CameraControl_DeviceInfo_Printout+0x1e2>
    312a:	ed b7       	in	r30, 0x3d	; 61
    312c:	fe b7       	in	r31, 0x3e	; 62
    312e:	92 82       	std	Z+2, r9	; 0x02
    3130:	81 82       	std	Z+1, r8	; 0x01
    3132:	d4 83       	std	Z+4, r29	; 0x04
    3134:	c3 83       	std	Z+3, r28	; 0x03
    3136:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    313a:	0f 90       	pop	r0
    313c:	0f 90       	pop	r0
    313e:	0f 90       	pop	r0
    3140:	0f 90       	pop	r0
    3142:	21 96       	adiw	r28, 0x01	; 1
    3144:	f0 e4       	ldi	r31, 0x40	; 64
    3146:	c0 34       	cpi	r28, 0x40	; 64
    3148:	df 07       	cpc	r29, r31
    314a:	61 f0       	breq	.+24     	; 0x3164 <CameraControl_DeviceInfo_Printout+0x21c>
    314c:	95 01       	movw	r18, r10
    314e:	a6 01       	movw	r20, r12
    3150:	b7 01       	movw	r22, r14
    3152:	c8 01       	movw	r24, r16
    3154:	01 e0       	ldi	r16, 0x01	; 1
    3156:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <__lshrdi3>
    315a:	59 01       	movw	r10, r18
    315c:	6a 01       	movw	r12, r20
    315e:	7b 01       	movw	r14, r22
    3160:	8c 01       	movw	r16, r24
    3162:	dc cf       	rjmp	.-72     	; 0x311c <CameraControl_DeviceInfo_Printout+0x1d4>
	PRINT_CAPS(g_stDeviceInfo.iPropertiesSupported,"\r\nDevice properties supported:\r\n",PROPERTY_SUPPORT_BASE);
    3164:	a0 90 7e 02 	lds	r10, 0x027E
    3168:	b0 90 7f 02 	lds	r11, 0x027F
    316c:	c0 90 80 02 	lds	r12, 0x0280
    3170:	d0 90 81 02 	lds	r13, 0x0281
    3174:	e0 90 82 02 	lds	r14, 0x0282
    3178:	f0 90 83 02 	lds	r15, 0x0283
    317c:	00 91 84 02 	lds	r16, 0x0284
    3180:	10 91 85 02 	lds	r17, 0x0285
    3184:	00 d0       	rcall	.+0      	; 0x3186 <CameraControl_DeviceInfo_Printout+0x23e>
    3186:	8e ea       	ldi	r24, 0xAE	; 174
    3188:	99 e0       	ldi	r25, 0x09	; 9
    318a:	ed b7       	in	r30, 0x3d	; 61
    318c:	fe b7       	in	r31, 0x3e	; 62
    318e:	92 83       	std	Z+2, r25	; 0x02
    3190:	81 83       	std	Z+1, r24	; 0x01
    3192:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    3196:	0f 90       	pop	r0
    3198:	0f 90       	pop	r0
    319a:	c0 e0       	ldi	r28, 0x00	; 0
    319c:	d0 e5       	ldi	r29, 0x50	; 80
    319e:	60 ea       	ldi	r22, 0xA0	; 160
    31a0:	86 2e       	mov	r8, r22
    31a2:	69 e0       	ldi	r22, 0x09	; 9
    31a4:	96 2e       	mov	r9, r22
    31a6:	c5 01       	movw	r24, r10
    31a8:	81 70       	andi	r24, 0x01	; 1
    31aa:	90 70       	andi	r25, 0x00	; 0
    31ac:	00 97       	sbiw	r24, 0x00	; 0
    31ae:	71 f0       	breq	.+28     	; 0x31cc <CameraControl_DeviceInfo_Printout+0x284>
    31b0:	00 d0       	rcall	.+0      	; 0x31b2 <CameraControl_DeviceInfo_Printout+0x26a>
    31b2:	00 d0       	rcall	.+0      	; 0x31b4 <CameraControl_DeviceInfo_Printout+0x26c>
    31b4:	ed b7       	in	r30, 0x3d	; 61
    31b6:	fe b7       	in	r31, 0x3e	; 62
    31b8:	92 82       	std	Z+2, r9	; 0x02
    31ba:	81 82       	std	Z+1, r8	; 0x01
    31bc:	d4 83       	std	Z+4, r29	; 0x04
    31be:	c3 83       	std	Z+3, r28	; 0x03
    31c0:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    31c4:	0f 90       	pop	r0
    31c6:	0f 90       	pop	r0
    31c8:	0f 90       	pop	r0
    31ca:	0f 90       	pop	r0
    31cc:	21 96       	adiw	r28, 0x01	; 1
    31ce:	f0 e5       	ldi	r31, 0x50	; 80
    31d0:	c0 34       	cpi	r28, 0x40	; 64
    31d2:	df 07       	cpc	r29, r31
    31d4:	61 f0       	breq	.+24     	; 0x31ee <CameraControl_DeviceInfo_Printout+0x2a6>
    31d6:	95 01       	movw	r18, r10
    31d8:	a6 01       	movw	r20, r12
    31da:	b7 01       	movw	r22, r14
    31dc:	c8 01       	movw	r24, r16
    31de:	01 e0       	ldi	r16, 0x01	; 1
    31e0:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <__lshrdi3>
    31e4:	59 01       	movw	r10, r18
    31e6:	6a 01       	movw	r12, r20
    31e8:	7b 01       	movw	r14, r22
    31ea:	8c 01       	movw	r16, r24
    31ec:	dc cf       	rjmp	.-72     	; 0x31a6 <CameraControl_DeviceInfo_Printout+0x25e>
	PRINT_CAPS(g_stDeviceInfo.iCaptureFormatsSupported,"\r\nCapture formats:\r\n",CAP_FORMAT_SUPPORT_BASE);
    31ee:	a0 90 86 02 	lds	r10, 0x0286
    31f2:	b0 90 87 02 	lds	r11, 0x0287
    31f6:	c0 90 88 02 	lds	r12, 0x0288
    31fa:	d0 90 89 02 	lds	r13, 0x0289
    31fe:	e0 90 8a 02 	lds	r14, 0x028A
    3202:	f0 90 8b 02 	lds	r15, 0x028B
    3206:	00 91 8c 02 	lds	r16, 0x028C
    320a:	10 91 8d 02 	lds	r17, 0x028D
    320e:	00 d0       	rcall	.+0      	; 0x3210 <CameraControl_DeviceInfo_Printout+0x2c8>
    3210:	8b e8       	ldi	r24, 0x8B	; 139
    3212:	99 e0       	ldi	r25, 0x09	; 9
    3214:	ed b7       	in	r30, 0x3d	; 61
    3216:	fe b7       	in	r31, 0x3e	; 62
    3218:	92 83       	std	Z+2, r25	; 0x02
    321a:	81 83       	std	Z+1, r24	; 0x01
    321c:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    3220:	0f 90       	pop	r0
    3222:	0f 90       	pop	r0
    3224:	c0 e0       	ldi	r28, 0x00	; 0
    3226:	d0 e3       	ldi	r29, 0x30	; 48
    3228:	5d e7       	ldi	r21, 0x7D	; 125
    322a:	85 2e       	mov	r8, r21
    322c:	59 e0       	ldi	r21, 0x09	; 9
    322e:	95 2e       	mov	r9, r21
    3230:	c5 01       	movw	r24, r10
    3232:	81 70       	andi	r24, 0x01	; 1
    3234:	90 70       	andi	r25, 0x00	; 0
    3236:	00 97       	sbiw	r24, 0x00	; 0
    3238:	71 f0       	breq	.+28     	; 0x3256 <CameraControl_DeviceInfo_Printout+0x30e>
    323a:	00 d0       	rcall	.+0      	; 0x323c <CameraControl_DeviceInfo_Printout+0x2f4>
    323c:	00 d0       	rcall	.+0      	; 0x323e <CameraControl_DeviceInfo_Printout+0x2f6>
    323e:	ed b7       	in	r30, 0x3d	; 61
    3240:	fe b7       	in	r31, 0x3e	; 62
    3242:	92 82       	std	Z+2, r9	; 0x02
    3244:	81 82       	std	Z+1, r8	; 0x01
    3246:	d4 83       	std	Z+4, r29	; 0x04
    3248:	c3 83       	std	Z+3, r28	; 0x03
    324a:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    324e:	0f 90       	pop	r0
    3250:	0f 90       	pop	r0
    3252:	0f 90       	pop	r0
    3254:	0f 90       	pop	r0
    3256:	21 96       	adiw	r28, 0x01	; 1
    3258:	f0 e3       	ldi	r31, 0x30	; 48
    325a:	c0 34       	cpi	r28, 0x40	; 64
    325c:	df 07       	cpc	r29, r31
    325e:	61 f0       	breq	.+24     	; 0x3278 <CameraControl_DeviceInfo_Printout+0x330>
    3260:	95 01       	movw	r18, r10
    3262:	a6 01       	movw	r20, r12
    3264:	b7 01       	movw	r22, r14
    3266:	c8 01       	movw	r24, r16
    3268:	01 e0       	ldi	r16, 0x01	; 1
    326a:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <__lshrdi3>
    326e:	59 01       	movw	r10, r18
    3270:	6a 01       	movw	r12, r20
    3272:	7b 01       	movw	r14, r22
    3274:	8c 01       	movw	r16, r24
    3276:	dc cf       	rjmp	.-72     	; 0x3230 <CameraControl_DeviceInfo_Printout+0x2e8>
	PRINT_CAPS(g_stDeviceInfo.iImageFormatsSupported,"\r\nImage Formats:\r\n",IM_FORMAT_SUPPORT_BASE);
    3278:	a0 90 8e 02 	lds	r10, 0x028E
    327c:	b0 90 8f 02 	lds	r11, 0x028F
    3280:	c0 90 90 02 	lds	r12, 0x0290
    3284:	d0 90 91 02 	lds	r13, 0x0291
    3288:	e0 90 92 02 	lds	r14, 0x0292
    328c:	f0 90 93 02 	lds	r15, 0x0293
    3290:	00 91 94 02 	lds	r16, 0x0294
    3294:	10 91 95 02 	lds	r17, 0x0295
    3298:	00 d0       	rcall	.+0      	; 0x329a <CameraControl_DeviceInfo_Printout+0x352>
    329a:	8a e6       	ldi	r24, 0x6A	; 106
    329c:	99 e0       	ldi	r25, 0x09	; 9
    329e:	ed b7       	in	r30, 0x3d	; 61
    32a0:	fe b7       	in	r31, 0x3e	; 62
    32a2:	92 83       	std	Z+2, r25	; 0x02
    32a4:	81 83       	std	Z+1, r24	; 0x01
    32a6:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    32aa:	0f 90       	pop	r0
    32ac:	0f 90       	pop	r0
    32ae:	c0 e0       	ldi	r28, 0x00	; 0
    32b0:	d8 e3       	ldi	r29, 0x38	; 56
    32b2:	4c e5       	ldi	r20, 0x5C	; 92
    32b4:	84 2e       	mov	r8, r20
    32b6:	49 e0       	ldi	r20, 0x09	; 9
    32b8:	94 2e       	mov	r9, r20
    32ba:	c5 01       	movw	r24, r10
    32bc:	81 70       	andi	r24, 0x01	; 1
    32be:	90 70       	andi	r25, 0x00	; 0
    32c0:	00 97       	sbiw	r24, 0x00	; 0
    32c2:	71 f0       	breq	.+28     	; 0x32e0 <CameraControl_DeviceInfo_Printout+0x398>
    32c4:	00 d0       	rcall	.+0      	; 0x32c6 <CameraControl_DeviceInfo_Printout+0x37e>
    32c6:	00 d0       	rcall	.+0      	; 0x32c8 <CameraControl_DeviceInfo_Printout+0x380>
    32c8:	ed b7       	in	r30, 0x3d	; 61
    32ca:	fe b7       	in	r31, 0x3e	; 62
    32cc:	92 82       	std	Z+2, r9	; 0x02
    32ce:	81 82       	std	Z+1, r8	; 0x01
    32d0:	d4 83       	std	Z+4, r29	; 0x04
    32d2:	c3 83       	std	Z+3, r28	; 0x03
    32d4:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    32d8:	0f 90       	pop	r0
    32da:	0f 90       	pop	r0
    32dc:	0f 90       	pop	r0
    32de:	0f 90       	pop	r0
    32e0:	21 96       	adiw	r28, 0x01	; 1
    32e2:	f8 e3       	ldi	r31, 0x38	; 56
    32e4:	c0 34       	cpi	r28, 0x40	; 64
    32e6:	df 07       	cpc	r29, r31
    32e8:	61 f0       	breq	.+24     	; 0x3302 <CameraControl_DeviceInfo_Printout+0x3ba>
    32ea:	95 01       	movw	r18, r10
    32ec:	a6 01       	movw	r20, r12
    32ee:	b7 01       	movw	r22, r14
    32f0:	c8 01       	movw	r24, r16
    32f2:	01 e0       	ldi	r16, 0x01	; 1
    32f4:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <__lshrdi3>
    32f8:	59 01       	movw	r10, r18
    32fa:	6a 01       	movw	r12, r20
    32fc:	7b 01       	movw	r14, r22
    32fe:	8c 01       	movw	r16, r24
    3300:	dc cf       	rjmp	.-72     	; 0x32ba <CameraControl_DeviceInfo_Printout+0x372>

	printf_P(PSTR("\r\nManufacturer:\t%s\r\n"), g_stDeviceInfo.sManufacturer);
    3302:	00 d0       	rcall	.+0      	; 0x3304 <CameraControl_DeviceInfo_Printout+0x3bc>
    3304:	00 d0       	rcall	.+0      	; 0x3306 <CameraControl_DeviceInfo_Printout+0x3be>
    3306:	87 e4       	ldi	r24, 0x47	; 71
    3308:	99 e0       	ldi	r25, 0x09	; 9
    330a:	ed b7       	in	r30, 0x3d	; 61
    330c:	fe b7       	in	r31, 0x3e	; 62
    330e:	92 83       	std	Z+2, r25	; 0x02
    3310:	81 83       	std	Z+1, r24	; 0x01
    3312:	c6 e9       	ldi	r28, 0x96	; 150
    3314:	d2 e0       	ldi	r29, 0x02	; 2
    3316:	d4 83       	std	Z+4, r29	; 0x04
    3318:	c3 83       	std	Z+3, r28	; 0x03
    331a:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
	printf_P(PSTR("Model:\t\t%s\r\n"), g_stDeviceInfo.Model);
    331e:	8a e3       	ldi	r24, 0x3A	; 58
    3320:	99 e0       	ldi	r25, 0x09	; 9
    3322:	ed b7       	in	r30, 0x3d	; 61
    3324:	fe b7       	in	r31, 0x3e	; 62
    3326:	92 83       	std	Z+2, r25	; 0x02
    3328:	81 83       	std	Z+1, r24	; 0x01
    332a:	ce 01       	movw	r24, r28
    332c:	44 96       	adiw	r24, 0x14	; 20
    332e:	94 83       	std	Z+4, r25	; 0x04
    3330:	83 83       	std	Z+3, r24	; 0x03
    3332:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
	printf_P(PSTR("Device ver.:\t%s\r\n"), g_stDeviceInfo.DeviceVersion);
    3336:	88 e2       	ldi	r24, 0x28	; 40
    3338:	99 e0       	ldi	r25, 0x09	; 9
    333a:	ed b7       	in	r30, 0x3d	; 61
    333c:	fe b7       	in	r31, 0x3e	; 62
    333e:	92 83       	std	Z+2, r25	; 0x02
    3340:	81 83       	std	Z+1, r24	; 0x01
    3342:	ce 01       	movw	r24, r28
    3344:	88 96       	adiw	r24, 0x28	; 40
    3346:	94 83       	std	Z+4, r25	; 0x04
    3348:	83 83       	std	Z+3, r24	; 0x03
    334a:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
	printf_P(PSTR("Serial Num.:\t%s\r\n"), g_stDeviceInfo.SerialNumber);
    334e:	86 e1       	ldi	r24, 0x16	; 22
    3350:	99 e0       	ldi	r25, 0x09	; 9
    3352:	ed b7       	in	r30, 0x3d	; 61
    3354:	fe b7       	in	r31, 0x3e	; 62
    3356:	92 83       	std	Z+2, r25	; 0x02
    3358:	81 83       	std	Z+1, r24	; 0x01
    335a:	ec 96       	adiw	r28, 0x3c	; 60
    335c:	d4 83       	std	Z+4, r29	; 0x04
    335e:	c3 83       	std	Z+3, r28	; 0x03
    3360:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>

	return 0;
    3364:	0f 90       	pop	r0
    3366:	0f 90       	pop	r0
    3368:	0f 90       	pop	r0
    336a:	0f 90       	pop	r0
    336c:	10 e0       	ldi	r17, 0x00	; 0
}
    336e:	81 2f       	mov	r24, r17
    3370:	df 91       	pop	r29
    3372:	cf 91       	pop	r28
    3374:	1f 91       	pop	r17
    3376:	0f 91       	pop	r16
    3378:	ff 90       	pop	r15
    337a:	ef 90       	pop	r14
    337c:	df 90       	pop	r13
    337e:	cf 90       	pop	r12
    3380:	bf 90       	pop	r11
    3382:	af 90       	pop	r10
    3384:	9f 90       	pop	r9
    3386:	8f 90       	pop	r8
    3388:	08 95       	ret

0000338a <CameraControl_GetStorageIDs>:

/*------------------------------------------------------------------------------
 * CameraControl_GetStorageIDs
 */
uint8_t CameraControl_GetStorageIDs ( USB_ClassInfo_SI_Host_t* SIInterfaceInfo )
{
    338a:	af 92       	push	r10
    338c:	bf 92       	push	r11
    338e:	cf 92       	push	r12
    3390:	df 92       	push	r13
    3392:	ef 92       	push	r14
    3394:	ff 92       	push	r15
    3396:	0f 93       	push	r16
    3398:	1f 93       	push	r17
    339a:	df 93       	push	r29
    339c:	cf 93       	push	r28
    339e:	cd b7       	in	r28, 0x3d	; 61
    33a0:	de b7       	in	r29, 0x3e	; 62
    33a2:	68 97       	sbiw	r28, 0x18	; 24
    33a4:	0f b6       	in	r0, 0x3f	; 63
    33a6:	f8 94       	cli
    33a8:	de bf       	out	0x3e, r29	; 62
    33aa:	0f be       	out	0x3f, r0	; 63
    33ac:	cd bf       	out	0x3d, r28	; 61
    33ae:	7c 01       	movw	r14, r24
		g_aiStorageIDs[iIDNum++]=*StorageInfoPos++;
	}

	// Receive the final response block from the device 
	return CameraControl_GetResponseAndCheck (SIInterfaceInfo, &PIMABlock);
}
    33b0:	ad b6       	in	r10, 0x3d	; 61
    33b2:	be b6       	in	r11, 0x3e	; 62
	uint16_t ArrayLength;
	uint8_t ErrorCode;
	uint8_t	iCount = 0;
	uint8_t iIDNum = 0;

	CHECK_CAMERA_CONNECTION;
    33b4:	80 91 f6 03 	lds	r24, 0x03F6
    33b8:	8b 30       	cpi	r24, 0x0B	; 11
    33ba:	21 f4       	brne	.+8      	; 0x33c4 <CameraControl_GetStorageIDs+0x3a>
    33bc:	f7 01       	movw	r30, r14
    33be:	86 81       	ldd	r24, Z+6	; 0x06
    33c0:	88 23       	and	r24, r24
    33c2:	69 f4       	brne	.+26     	; 0x33de <CameraControl_GetStorageIDs+0x54>
    33c4:	00 d0       	rcall	.+0      	; 0x33c6 <CameraControl_GetStorageIDs+0x3c>
    33c6:	82 ee       	ldi	r24, 0xE2	; 226
    33c8:	9c e0       	ldi	r25, 0x0C	; 12
    33ca:	ed b7       	in	r30, 0x3d	; 61
    33cc:	fe b7       	in	r31, 0x3e	; 62
    33ce:	92 83       	std	Z+2, r25	; 0x02
    33d0:	81 83       	std	Z+1, r24	; 0x01
    33d2:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>
    33d6:	0f 90       	pop	r0
    33d8:	0f 90       	pop	r0
    33da:	80 e0       	ldi	r24, 0x00	; 0
    33dc:	76 c0       	rjmp	.+236    	; 0x34ca <CameraControl_GetStorageIDs+0x140>
	
	// Create PIMA message block
	PIMA_Container_t PIMABlock = (PIMA_Container_t)
    33de:	be 01       	movw	r22, r28
    33e0:	6f 5f       	subi	r22, 0xFF	; 255
    33e2:	7f 4f       	sbci	r23, 0xFF	; 255
    33e4:	88 e1       	ldi	r24, 0x18	; 24
    33e6:	fb 01       	movw	r30, r22
    33e8:	11 92       	st	Z+, r1
    33ea:	8a 95       	dec	r24
    33ec:	e9 f7       	brne	.-6      	; 0x33e8 <CameraControl_GetStorageIDs+0x5e>
    33ee:	8c e0       	ldi	r24, 0x0C	; 12
    33f0:	90 e0       	ldi	r25, 0x00	; 0
    33f2:	a0 e0       	ldi	r26, 0x00	; 0
    33f4:	b0 e0       	ldi	r27, 0x00	; 0
    33f6:	89 83       	std	Y+1, r24	; 0x01
    33f8:	9a 83       	std	Y+2, r25	; 0x02
    33fa:	ab 83       	std	Y+3, r26	; 0x03
    33fc:	bc 83       	std	Y+4, r27	; 0x04
    33fe:	81 e0       	ldi	r24, 0x01	; 1
    3400:	90 e0       	ldi	r25, 0x00	; 0
    3402:	9e 83       	std	Y+6, r25	; 0x06
    3404:	8d 83       	std	Y+5, r24	; 0x05
    3406:	84 e0       	ldi	r24, 0x04	; 4
    3408:	90 e1       	ldi	r25, 0x10	; 16
    340a:	98 87       	std	Y+8, r25	; 0x08
    340c:	8f 83       	std	Y+7, r24	; 0x07
			.Params        = {},
		};


	// Send the command and get response
	ErrorCode = CameraControl_InitiateTransaction ( SIInterfaceInfo, &PIMABlock );
    340e:	c7 01       	movw	r24, r14
    3410:	f2 d9       	rcall	.-3100   	; 0x27f6 <CameraControl_InitiateTransaction>
	if ( ErrorCode != PIPE_RWSTREAM_NoError ) return ErrorCode;
    3412:	88 23       	and	r24, r24
    3414:	09 f0       	breq	.+2      	; 0x3418 <CameraControl_GetStorageIDs+0x8e>
    3416:	59 c0       	rjmp	.+178    	; 0x34ca <CameraControl_GetStorageIDs+0x140>

	// Get the size (in bytes) of the device info structure
	ArrayLength = (PIMABlock.DataLength - PIMA_COMMAND_SIZE(0));
    3418:	09 81       	ldd	r16, Y+1	; 0x01
    341a:	1a 81       	ldd	r17, Y+2	; 0x02
    341c:	0c 50       	subi	r16, 0x0C	; 12
    341e:	10 40       	sbci	r17, 0x00	; 0
	printf_P(PSTR(ESC_FG_CYAN "	Got storage IDs of %d bytes.\r\n" ESC_FG_WHITE), ArrayLength);
    3420:	00 d0       	rcall	.+0      	; 0x3422 <CameraControl_GetStorageIDs+0x98>
    3422:	00 d0       	rcall	.+0      	; 0x3424 <CameraControl_GetStorageIDs+0x9a>
    3424:	88 eb       	ldi	r24, 0xB8	; 184
    3426:	9c e0       	ldi	r25, 0x0C	; 12
    3428:	ed b7       	in	r30, 0x3d	; 61
    342a:	fe b7       	in	r31, 0x3e	; 62
    342c:	92 83       	std	Z+2, r25	; 0x02
    342e:	81 83       	std	Z+1, r24	; 0x01
    3430:	14 83       	std	Z+4, r17	; 0x04
    3432:	03 83       	std	Z+3, r16	; 0x03
    3434:	0e 94 91 22 	call	0x4522	; 0x4522 <printf_P>

	// Create a buffer large enough to hold the entire Storage IDs list
	uint8_t StorageIDs[ArrayLength];
    3438:	0f 90       	pop	r0
    343a:	0f 90       	pop	r0
    343c:	0f 90       	pop	r0
    343e:	0f 90       	pop	r0
    3440:	8d b7       	in	r24, 0x3d	; 61
    3442:	9e b7       	in	r25, 0x3e	; 62
    3444:	80 1b       	sub	r24, r16
    3446:	91 0b       	sbc	r25, r17
    3448:	0f b6       	in	r0, 0x3f	; 63
    344a:	f8 94       	cli
    344c:	9e bf       	out	0x3e, r25	; 62
    344e:	0f be       	out	0x3f, r0	; 63
    3450:	8d bf       	out	0x3d, r24	; 61
    3452:	cd b6       	in	r12, 0x3d	; 61
    3454:	de b6       	in	r13, 0x3e	; 62
    3456:	08 94       	sec
    3458:	c1 1c       	adc	r12, r1
    345a:	d1 1c       	adc	r13, r1

	// Read in the data block data (containing device info)
	SI_Host_ReadData(SIInterfaceInfo, StorageIDs, ArrayLength);
    345c:	c7 01       	movw	r24, r14
    345e:	b6 01       	movw	r22, r12
    3460:	a8 01       	movw	r20, r16
    3462:	0e 94 79 11 	call	0x22f2	; 0x22f2 <SI_Host_ReadData>
    3466:	80 91 a6 00 	lds	r24, 0x00A6
    346a:	8e 77       	andi	r24, 0x7E	; 126
    346c:	80 93 a6 00 	sts	0x00A6, r24

	// Once all the data has been read, the pipe must be cleared before the response can be sent
	Pipe_ClearIN();

	// Create a pointer for walking through the info dataset 
	uint32_t* StorageInfoPos = (uint32_t*)((void*)(StorageIDs));
    3470:	f6 01       	movw	r30, r12

	g_iNumOfStorages = *StorageInfoPos++;
    3472:	80 81       	ld	r24, Z
    3474:	80 93 e6 02 	sts	0x02E6, r24
    3478:	86 01       	movw	r16, r12
    347a:	0c 5f       	subi	r16, 0xFC	; 252
    347c:	1f 4f       	sbci	r17, 0xFF	; 255
	iCount = (g_iNumOfStorages>MAX_NUM_STORAGES)?MAX_NUM_STORAGES:g_iNumOfStorages;
    347e:	80 91 e6 02 	lds	r24, 0x02E6
    3482:	85 30       	cpi	r24, 0x05	; 5
    3484:	18 f4       	brcc	.+6      	; 0x348c <CameraControl_GetStorageIDs+0x102>
    3486:	60 91 e6 02 	lds	r22, 0x02E6
    348a:	01 c0       	rjmp	.+2      	; 0x348e <CameraControl_GetStorageIDs+0x104>
    348c:	64 e0       	ldi	r22, 0x04	; 4
    348e:	20 e0       	ldi	r18, 0x00	; 0
    3490:	30 e0       	ldi	r19, 0x00	; 0
    3492:	14 c0       	rjmp	.+40     	; 0x34bc <CameraControl_GetStorageIDs+0x132>
	iIDNum = 0;

	while (iCount--)
	{
		g_aiStorageIDs[iIDNum++]=*StorageInfoPos++;
    3494:	f8 01       	movw	r30, r16
    3496:	81 91       	ld	r24, Z+
    3498:	91 91       	ld	r25, Z+
    349a:	a1 91       	ld	r26, Z+
    349c:	b1 91       	ld	r27, Z+
    349e:	8f 01       	movw	r16, r30
    34a0:	a9 01       	movw	r20, r18
    34a2:	44 0f       	add	r20, r20
    34a4:	55 1f       	adc	r21, r21
    34a6:	44 0f       	add	r20, r20
    34a8:	55 1f       	adc	r21, r21
    34aa:	4b 5f       	subi	r20, 0xFB	; 251
    34ac:	5b 4f       	sbci	r21, 0xFB	; 251
    34ae:	fa 01       	movw	r30, r20
    34b0:	80 83       	st	Z, r24
    34b2:	91 83       	std	Z+1, r25	; 0x01
    34b4:	a2 83       	std	Z+2, r26	; 0x02
    34b6:	b3 83       	std	Z+3, r27	; 0x03
    34b8:	2f 5f       	subi	r18, 0xFF	; 255
    34ba:	3f 4f       	sbci	r19, 0xFF	; 255

	g_iNumOfStorages = *StorageInfoPos++;
	iCount = (g_iNumOfStorages>MAX_NUM_STORAGES)?MAX_NUM_STORAGES:g_iNumOfStorages;
	iIDNum = 0;

	while (iCount--)
    34bc:	61 50       	subi	r22, 0x01	; 1
    34be:	50 f7       	brcc	.-44     	; 0x3494 <CameraControl_GetStorageIDs+0x10a>
	{
		g_aiStorageIDs[iIDNum++]=*StorageInfoPos++;
	}

	// Receive the final response block from the device 
	return CameraControl_GetResponseAndCheck (SIInterfaceInfo, &PIMABlock);
    34c0:	c7 01       	movw	r24, r14
    34c2:	be 01       	movw	r22, r28
    34c4:	6f 5f       	subi	r22, 0xFF	; 255
    34c6:	7f 4f       	sbci	r23, 0xFF	; 255
    34c8:	61 d9       	rcall	.-3390   	; 0x278c <CameraControl_GetResponseAndCheck>
}
    34ca:	0f b6       	in	r0, 0x3f	; 63
    34cc:	f8 94       	cli
    34ce:	be be       	out	0x3e, r11	; 62
    34d0:	0f be       	out	0x3f, r0	; 63
    34d2:	ad be       	out	0x3d, r10	; 61
    34d4:	68 96       	adiw	r28, 0x18	; 24
    34d6:	0f b6       	in	r0, 0x3f	; 63
    34d8:	f8 94       	cli
    34da:	de bf       	out	0x3e, r29	; 62
    34dc:	0f be       	out	0x3f, r0	; 63
    34de:	cd bf       	out	0x3d, r28	; 61
    34e0:	cf 91       	pop	r28
    34e2:	df 91       	pop	r29
    34e4:	1f 91       	pop	r17
    34e6:	0f 91       	pop	r16
    34e8:	ff 90       	pop	r15
    34ea:	ef 90       	pop	r14
    34ec:	df 90       	pop	r13
    34ee:	cf 90       	pop	r12
    34f0:	bf 90       	pop	r11
    34f2:	af 90       	pop	r10
    34f4:	08 95       	ret

000034f6 <CameraControl_GetStorageInfo>:
/*------------------------------------------------------------------------------
 * CameraControl_GetStorageInfo
 */
uint8_t CameraControl_GetStorageInfo ( USB_ClassInfo_SI_Host_t* SIInterfaceInfo, 
									   uint8_t iStorageIndex )
{
    34f6:	af 92       	push	r10
    34f8:	bf 92       	push	r11
    34fa:	cf 92       	push	r12
    34fc:	df 92       	push	r13
    34fe:	ef 92       	push	r14
    3500:	ff 92       	push	r15
    3502:	0f 93       	push	r16
    3504:	1f 93       	push	r17
    3506:	df 93       	push	r29
    3508:	cf 93       	push	r28
    350a:	cd b7       	in	r28, 0x3d	; 61
    350c:	de b7       	in	r29, 0x3e	; 62
    350e:	6a 97       	sbiw	r28, 0x1a	; 26
    3510:	0f b6       	in	r0, 0x3f	; 63
    3512:	f8 94       	cli
    3514:	de bf       	out	0x3e, r29	; 62
    3516:	0f be       	out	0x3f, r0	; 63
    3518:	cd bf       	out	0x3d, r28	; 61
    351a:	6c 01       	movw	r12, r24
	}
	g_astStorageInfo[iStorageIndex].sVolumeLabel[iTemp2] = '\0';

	// Receive the final response block from the device 
	return CameraControl_GetResponseAndCheck (SIInterfaceInfo, &PIMABlock);
}
    351c:	ad b6       	in	r10, 0x3d	; 61
    351e:	be b6       	in	r11, 0x3e	; 62
	uint16_t StorageInfoSize;
	uint8_t ErrorCode;
	uint32_t iStorageID;
	uint8_t iTemp1, iTemp2;

	CHECK_CAMERA_CONNECTION;
    3520:	80 91 f6 03 	lds	r24, 0x03F6
    3524:	8b 30       	cpi	r24, 0x0B	; 11
    3526:	31 f4       	brne	.+12     	; 0x3534 <CameraControl_GetStorageInfo+0x3e>
    3528:	d6 01       	movw	r26, r12
    352a:	16 96       	adiw	r26, 0x06	; 6
    352c:	8c 91       	ld	r24, X
    352e:	16 97       	sbiw	r26, 0x06	; 6
    3530:	88 23       	and	r24, r24
    3532:	61 f4       	brne	.+24     	; 0x354c <CameraControl_GetStorageInfo+0x56>
    3534:	00 d0       	rcall	.+0      	; 0x3536 <CameraControl_GetStorageInfo+0x40>
    3536:	80 ea       	ldi	r24, 0xA0	; 160
    3538:	9c e0       	ldi	r25, 0x0C	; 12
    353a:	ed b7       	in	r30, 0x3d	; 61
    353c:	fe b7       	in	r31, 0x3e	; 62
    353e:	92 83       	std	Z+2, r25	; 0x02
    3540:	81 83       	std	Z+1, r24	; 0x01
    3542:	ef d7       	rcall	.+4062   	; 0x4522 <printf_P>
    3544:	0f 90       	pop	r0
    3546:	0f 90       	pop	r0
    3548:	80 e0       	ldi	r24, 0x00	; 0
    354a:	74 c1       	rjmp	.+744    	; 0x3834 <CameraControl_GetStorageInfo+0x33e>

	if ( iStorageIndex >= g_iNumOfStorages )
    354c:	80 91 e6 02 	lds	r24, 0x02E6
    3550:	68 17       	cp	r22, r24
    3552:	f8 f0       	brcs	.+62     	; 0x3592 <CameraControl_GetStorageInfo+0x9c>
	{
		// The index is higher thet the available storage IDs
		printf_P(PSTR("Error getting storage info - storage index %d is bigger then num of storages %d.\r\n"), 
    3554:	20 91 e6 02 	lds	r18, 0x02E6
    3558:	00 d0       	rcall	.+0      	; 0x355a <CameraControl_GetStorageInfo+0x64>
    355a:	00 d0       	rcall	.+0      	; 0x355c <CameraControl_GetStorageInfo+0x66>
    355c:	00 d0       	rcall	.+0      	; 0x355e <CameraControl_GetStorageInfo+0x68>
    355e:	ed b7       	in	r30, 0x3d	; 61
    3560:	fe b7       	in	r31, 0x3e	; 62
    3562:	31 96       	adiw	r30, 0x01	; 1
    3564:	8d e4       	ldi	r24, 0x4D	; 77
    3566:	9c e0       	ldi	r25, 0x0C	; 12
    3568:	ad b7       	in	r26, 0x3d	; 61
    356a:	be b7       	in	r27, 0x3e	; 62
    356c:	12 96       	adiw	r26, 0x02	; 2
    356e:	9c 93       	st	X, r25
    3570:	8e 93       	st	-X, r24
    3572:	11 97       	sbiw	r26, 0x01	; 1
    3574:	62 83       	std	Z+2, r22	; 0x02
    3576:	13 82       	std	Z+3, r1	; 0x03
    3578:	24 83       	std	Z+4, r18	; 0x04
    357a:	15 82       	std	Z+5, r1	; 0x05
    357c:	d2 d7       	rcall	.+4004   	; 0x4522 <printf_P>
    357e:	ed b7       	in	r30, 0x3d	; 61
    3580:	fe b7       	in	r31, 0x3e	; 62
    3582:	36 96       	adiw	r30, 0x06	; 6
    3584:	0f b6       	in	r0, 0x3f	; 63
    3586:	f8 94       	cli
    3588:	fe bf       	out	0x3e, r31	; 62
    358a:	0f be       	out	0x3f, r0	; 63
    358c:	ed bf       	out	0x3d, r30	; 61
							iStorageIndex, g_iNumOfStorages);
		return SI_ERROR_LOGICAL_CMD_FAILED;
    358e:	80 e8       	ldi	r24, 0x80	; 128
    3590:	51 c1       	rjmp	.+674    	; 0x3834 <CameraControl_GetStorageInfo+0x33e>
	}

	iStorageID = g_aiStorageIDs[iStorageIndex];
    3592:	e6 2e       	mov	r14, r22
    3594:	ff 24       	eor	r15, r15
    3596:	f7 01       	movw	r30, r14
    3598:	ee 0f       	add	r30, r30
    359a:	ff 1f       	adc	r31, r31
    359c:	ee 0f       	add	r30, r30
    359e:	ff 1f       	adc	r31, r31
    35a0:	eb 5f       	subi	r30, 0xFB	; 251
    35a2:	fb 4f       	sbci	r31, 0xFB	; 251
    35a4:	80 81       	ld	r24, Z
    35a6:	91 81       	ldd	r25, Z+1	; 0x01
    35a8:	a2 81       	ldd	r26, Z+2	; 0x02
    35aa:	b3 81       	ldd	r27, Z+3	; 0x03

	// Create PIMA message block
	PIMA_Container_t PIMABlock = (PIMA_Container_t)
    35ac:	be 01       	movw	r22, r28
    35ae:	6f 5f       	subi	r22, 0xFF	; 255
    35b0:	7f 4f       	sbci	r23, 0xFF	; 255
    35b2:	28 e1       	ldi	r18, 0x18	; 24
    35b4:	fb 01       	movw	r30, r22
    35b6:	11 92       	st	Z+, r1
    35b8:	2a 95       	dec	r18
    35ba:	e9 f7       	brne	.-6      	; 0x35b6 <CameraControl_GetStorageInfo+0xc0>
    35bc:	20 e1       	ldi	r18, 0x10	; 16
    35be:	30 e0       	ldi	r19, 0x00	; 0
    35c0:	40 e0       	ldi	r20, 0x00	; 0
    35c2:	50 e0       	ldi	r21, 0x00	; 0
    35c4:	29 83       	std	Y+1, r18	; 0x01
    35c6:	3a 83       	std	Y+2, r19	; 0x02
    35c8:	4b 83       	std	Y+3, r20	; 0x03
    35ca:	5c 83       	std	Y+4, r21	; 0x04
    35cc:	21 e0       	ldi	r18, 0x01	; 1
    35ce:	30 e0       	ldi	r19, 0x00	; 0
    35d0:	3e 83       	std	Y+6, r19	; 0x06
    35d2:	2d 83       	std	Y+5, r18	; 0x05
    35d4:	25 e0       	ldi	r18, 0x05	; 5
    35d6:	30 e1       	ldi	r19, 0x10	; 16
    35d8:	38 87       	std	Y+8, r19	; 0x08
    35da:	2f 83       	std	Y+7, r18	; 0x07
    35dc:	8d 87       	std	Y+13, r24	; 0x0d
    35de:	9e 87       	std	Y+14, r25	; 0x0e
    35e0:	af 87       	std	Y+15, r26	; 0x0f
    35e2:	b8 8b       	std	Y+16, r27	; 0x10
			.Code          = CPU_TO_LE16(PTP_OC_GetStorageInfo),
			.Params        = {iStorageID},
		};

	// Send the command and get response
	ErrorCode = CameraControl_InitiateTransaction ( SIInterfaceInfo, &PIMABlock );
    35e4:	c6 01       	movw	r24, r12
    35e6:	07 d9       	rcall	.-3570   	; 0x27f6 <CameraControl_InitiateTransaction>
	if ( ErrorCode != PIPE_RWSTREAM_NoError ) return ErrorCode;
    35e8:	88 23       	and	r24, r24
    35ea:	09 f0       	breq	.+2      	; 0x35ee <CameraControl_GetStorageInfo+0xf8>
    35ec:	23 c1       	rjmp	.+582    	; 0x3834 <CameraControl_GetStorageInfo+0x33e>

	// Get the size (in bytes) of the device info structure
	StorageInfoSize = (PIMABlock.DataLength - PIMA_COMMAND_SIZE(0));
    35ee:	49 81       	ldd	r20, Y+1	; 0x01
    35f0:	5a 81       	ldd	r21, Y+2	; 0x02
    35f2:	4c 50       	subi	r20, 0x0C	; 12
    35f4:	50 40       	sbci	r21, 0x00	; 0
	printf_P(PSTR(ESC_FG_CYAN "	Got storage info of %d bytes.\r\n" ESC_FG_WHITE), StorageInfoSize);
    35f6:	00 d0       	rcall	.+0      	; 0x35f8 <CameraControl_GetStorageInfo+0x102>
    35f8:	00 d0       	rcall	.+0      	; 0x35fa <CameraControl_GetStorageInfo+0x104>
    35fa:	82 e2       	ldi	r24, 0x22	; 34
    35fc:	9c e0       	ldi	r25, 0x0C	; 12
    35fe:	ad b7       	in	r26, 0x3d	; 61
    3600:	be b7       	in	r27, 0x3e	; 62
    3602:	12 96       	adiw	r26, 0x02	; 2
    3604:	9c 93       	st	X, r25
    3606:	8e 93       	st	-X, r24
    3608:	11 97       	sbiw	r26, 0x01	; 1
    360a:	14 96       	adiw	r26, 0x04	; 4
    360c:	5c 93       	st	X, r21
    360e:	4e 93       	st	-X, r20
    3610:	13 97       	sbiw	r26, 0x03	; 3
    3612:	49 8f       	std	Y+25, r20	; 0x19
    3614:	5a 8f       	std	Y+26, r21	; 0x1a
    3616:	85 d7       	rcall	.+3850   	; 0x4522 <printf_P>

	// Create a buffer large enough to hold the entire device info
	uint8_t StorageInfo[StorageInfoSize];
    3618:	0f 90       	pop	r0
    361a:	0f 90       	pop	r0
    361c:	0f 90       	pop	r0
    361e:	0f 90       	pop	r0
    3620:	49 8d       	ldd	r20, Y+25	; 0x19
    3622:	5a 8d       	ldd	r21, Y+26	; 0x1a
    3624:	ed b7       	in	r30, 0x3d	; 61
    3626:	fe b7       	in	r31, 0x3e	; 62
    3628:	e4 1b       	sub	r30, r20
    362a:	f5 0b       	sbc	r31, r21
    362c:	0f b6       	in	r0, 0x3f	; 63
    362e:	f8 94       	cli
    3630:	fe bf       	out	0x3e, r31	; 62
    3632:	0f be       	out	0x3f, r0	; 63
    3634:	ed bf       	out	0x3d, r30	; 61
    3636:	0d b7       	in	r16, 0x3d	; 61
    3638:	1e b7       	in	r17, 0x3e	; 62
    363a:	0f 5f       	subi	r16, 0xFF	; 255
    363c:	1f 4f       	sbci	r17, 0xFF	; 255

	// Read in the data block data (containing device info)
	SI_Host_ReadData(SIInterfaceInfo, StorageInfo, StorageInfoSize);
    363e:	c6 01       	movw	r24, r12
    3640:	b8 01       	movw	r22, r16
    3642:	0e 94 79 11 	call	0x22f2	; 0x22f2 <SI_Host_ReadData>
    3646:	80 91 a6 00 	lds	r24, 0x00A6
    364a:	8e 77       	andi	r24, 0x7E	; 126
    364c:	80 93 a6 00 	sts	0x00A6, r24
	Pipe_ClearIN();

	// Create a pointer for walking through the info dataset 
	uint8_t* DeviceInfoPos = StorageInfo;

	g_astStorageInfo[iStorageIndex].iStorageType 	= *((uint16_t*)(DeviceInfoPos)); DeviceInfoPos+=2;
    3650:	d8 01       	movw	r26, r16
    3652:	8d 91       	ld	r24, X+
    3654:	9c 91       	ld	r25, X
    3656:	11 97       	sbiw	r26, 0x01	; 1
    3658:	2a e3       	ldi	r18, 0x3A	; 58
    365a:	30 e0       	ldi	r19, 0x00	; 0
    365c:	e2 9e       	mul	r14, r18
    365e:	f0 01       	movw	r30, r0
    3660:	e3 9e       	mul	r14, r19
    3662:	f0 0d       	add	r31, r0
    3664:	f2 9e       	mul	r15, r18
    3666:	f0 0d       	add	r31, r0
    3668:	11 24       	eor	r1, r1
    366a:	eb 5e       	subi	r30, 0xEB	; 235
    366c:	fb 4f       	sbci	r31, 0xFB	; 251
    366e:	91 83       	std	Z+1, r25	; 0x01
    3670:	80 83       	st	Z, r24
	g_astStorageInfo[iStorageIndex].iFSType 		= *((uint16_t*)(DeviceInfoPos)); DeviceInfoPos+=2;
    3672:	12 96       	adiw	r26, 0x02	; 2
    3674:	8d 91       	ld	r24, X+
    3676:	9c 91       	ld	r25, X
    3678:	13 97       	sbiw	r26, 0x03	; 3
    367a:	93 83       	std	Z+3, r25	; 0x03
    367c:	82 83       	std	Z+2, r24	; 0x02
	g_astStorageInfo[iStorageIndex].iAccessCap		= *((uint16_t*)(DeviceInfoPos)); DeviceInfoPos+=2;
    367e:	14 96       	adiw	r26, 0x04	; 4
    3680:	8d 91       	ld	r24, X+
    3682:	9c 91       	ld	r25, X
    3684:	15 97       	sbiw	r26, 0x05	; 5
    3686:	95 83       	std	Z+5, r25	; 0x05
    3688:	84 83       	std	Z+4, r24	; 0x04
	g_astStorageInfo[iStorageIndex].iMaxCapacity	= *((uint64_t*)(DeviceInfoPos)); DeviceInfoPos+=8;
    368a:	16 96       	adiw	r26, 0x06	; 6
    368c:	7c 91       	ld	r23, X
    368e:	16 97       	sbiw	r26, 0x06	; 6
    3690:	17 96       	adiw	r26, 0x07	; 7
    3692:	6c 91       	ld	r22, X
    3694:	17 97       	sbiw	r26, 0x07	; 7
    3696:	18 96       	adiw	r26, 0x08	; 8
    3698:	5c 91       	ld	r21, X
    369a:	18 97       	sbiw	r26, 0x08	; 8
    369c:	19 96       	adiw	r26, 0x09	; 9
    369e:	4c 91       	ld	r20, X
    36a0:	19 97       	sbiw	r26, 0x09	; 9
    36a2:	1a 96       	adiw	r26, 0x0a	; 10
    36a4:	3c 91       	ld	r19, X
    36a6:	1a 97       	sbiw	r26, 0x0a	; 10
    36a8:	1b 96       	adiw	r26, 0x0b	; 11
    36aa:	2c 91       	ld	r18, X
    36ac:	1b 97       	sbiw	r26, 0x0b	; 11
    36ae:	1c 96       	adiw	r26, 0x0c	; 12
    36b0:	9c 91       	ld	r25, X
    36b2:	1c 97       	sbiw	r26, 0x0c	; 12
    36b4:	1d 96       	adiw	r26, 0x0d	; 13
    36b6:	8c 91       	ld	r24, X
    36b8:	df 01       	movw	r26, r30
    36ba:	16 96       	adiw	r26, 0x06	; 6
    36bc:	76 83       	std	Z+6, r23	; 0x06
    36be:	11 96       	adiw	r26, 0x01	; 1
    36c0:	6c 93       	st	X, r22
    36c2:	11 97       	sbiw	r26, 0x01	; 1
    36c4:	12 96       	adiw	r26, 0x02	; 2
    36c6:	5c 93       	st	X, r21
    36c8:	12 97       	sbiw	r26, 0x02	; 2
    36ca:	13 96       	adiw	r26, 0x03	; 3
    36cc:	4c 93       	st	X, r20
    36ce:	13 97       	sbiw	r26, 0x03	; 3
    36d0:	14 96       	adiw	r26, 0x04	; 4
    36d2:	3c 93       	st	X, r19
    36d4:	14 97       	sbiw	r26, 0x04	; 4
    36d6:	15 96       	adiw	r26, 0x05	; 5
    36d8:	2c 93       	st	X, r18
    36da:	15 97       	sbiw	r26, 0x05	; 5
    36dc:	16 96       	adiw	r26, 0x06	; 6
    36de:	9c 93       	st	X, r25
    36e0:	16 97       	sbiw	r26, 0x06	; 6
    36e2:	17 96       	adiw	r26, 0x07	; 7
    36e4:	8c 93       	st	X, r24
	g_astStorageInfo[iStorageIndex].iFreeSpaceBytes	= *((uint64_t*)(DeviceInfoPos)); DeviceInfoPos+=8;
    36e6:	d8 01       	movw	r26, r16
    36e8:	1e 96       	adiw	r26, 0x0e	; 14
    36ea:	7c 91       	ld	r23, X
    36ec:	1e 97       	sbiw	r26, 0x0e	; 14
    36ee:	1f 96       	adiw	r26, 0x0f	; 15
    36f0:	6c 91       	ld	r22, X
    36f2:	1f 97       	sbiw	r26, 0x0f	; 15
    36f4:	50 96       	adiw	r26, 0x10	; 16
    36f6:	5c 91       	ld	r21, X
    36f8:	50 97       	sbiw	r26, 0x10	; 16
    36fa:	51 96       	adiw	r26, 0x11	; 17
    36fc:	4c 91       	ld	r20, X
    36fe:	51 97       	sbiw	r26, 0x11	; 17
    3700:	52 96       	adiw	r26, 0x12	; 18
    3702:	3c 91       	ld	r19, X
    3704:	52 97       	sbiw	r26, 0x12	; 18
    3706:	53 96       	adiw	r26, 0x13	; 19
    3708:	2c 91       	ld	r18, X
    370a:	53 97       	sbiw	r26, 0x13	; 19
    370c:	54 96       	adiw	r26, 0x14	; 20
    370e:	9c 91       	ld	r25, X
    3710:	54 97       	sbiw	r26, 0x14	; 20
    3712:	55 96       	adiw	r26, 0x15	; 21
    3714:	8c 91       	ld	r24, X
    3716:	df 01       	movw	r26, r30
    3718:	1e 96       	adiw	r26, 0x0e	; 14
    371a:	76 87       	std	Z+14, r23	; 0x0e
    371c:	11 96       	adiw	r26, 0x01	; 1
    371e:	6c 93       	st	X, r22
    3720:	11 97       	sbiw	r26, 0x01	; 1
    3722:	12 96       	adiw	r26, 0x02	; 2
    3724:	5c 93       	st	X, r21
    3726:	12 97       	sbiw	r26, 0x02	; 2
    3728:	13 96       	adiw	r26, 0x03	; 3
    372a:	4c 93       	st	X, r20
    372c:	13 97       	sbiw	r26, 0x03	; 3
    372e:	14 96       	adiw	r26, 0x04	; 4
    3730:	3c 93       	st	X, r19
    3732:	14 97       	sbiw	r26, 0x04	; 4
    3734:	15 96       	adiw	r26, 0x05	; 5
    3736:	2c 93       	st	X, r18
    3738:	15 97       	sbiw	r26, 0x05	; 5
    373a:	16 96       	adiw	r26, 0x06	; 6
    373c:	9c 93       	st	X, r25
    373e:	16 97       	sbiw	r26, 0x06	; 6
    3740:	17 96       	adiw	r26, 0x07	; 7
    3742:	8c 93       	st	X, r24
	g_astStorageInfo[iStorageIndex].iFreeSpaceImages= *((uint32_t*)(DeviceInfoPos)); DeviceInfoPos+=4;
    3744:	d8 01       	movw	r26, r16
    3746:	56 96       	adiw	r26, 0x16	; 22
    3748:	2d 91       	ld	r18, X+
    374a:	3d 91       	ld	r19, X+
    374c:	4d 91       	ld	r20, X+
    374e:	5c 91       	ld	r21, X
    3750:	59 97       	sbiw	r26, 0x19	; 25
    3752:	26 8b       	std	Z+22, r18	; 0x16
    3754:	37 8b       	std	Z+23, r19	; 0x17
    3756:	40 8f       	std	Z+24, r20	; 0x18
    3758:	51 8f       	std	Z+25, r21	; 0x19
	
	iTemp1 = *DeviceInfoPos++;	// get the length of the Storage Description field string
    375a:	a8 01       	movw	r20, r16
    375c:	45 5e       	subi	r20, 0xE5	; 229
    375e:	5f 4f       	sbci	r21, 0xFF	; 255
    3760:	5a 96       	adiw	r26, 0x1a	; 26
    3762:	0c 91       	ld	r16, X
    3764:	5a 97       	sbiw	r26, 0x1a	; 26
    3766:	00 31       	cpi	r16, 0x10	; 16
    3768:	08 f0       	brcs	.+2      	; 0x376c <CameraControl_GetStorageInfo+0x276>
    376a:	0f e0       	ldi	r16, 0x0F	; 15
    376c:	fa 01       	movw	r30, r20
    376e:	10 2f       	mov	r17, r16
    3770:	20 e0       	ldi	r18, 0x00	; 0
    3772:	30 e0       	ldi	r19, 0x00	; 0
	if ( iTemp1 > (STORAGE_MAX_STRING_SIZE-1) ) iTemp1 = STORAGE_MAX_STRING_SIZE-1;
	iTemp2 = 0;	

	while (iTemp1--)
	{
		g_astStorageInfo[iStorageIndex].sDescription[iTemp2++] = *DeviceInfoPos;
    3774:	6a e3       	ldi	r22, 0x3A	; 58
    3776:	70 e0       	ldi	r23, 0x00	; 0
    3778:	e6 9e       	mul	r14, r22
    377a:	c0 01       	movw	r24, r0
    377c:	e7 9e       	mul	r14, r23
    377e:	90 0d       	add	r25, r0
    3780:	f6 9e       	mul	r15, r22
    3782:	90 0d       	add	r25, r0
    3784:	11 24       	eor	r1, r1
    3786:	8b 5e       	subi	r24, 0xEB	; 235
    3788:	9b 4f       	sbci	r25, 0xFB	; 251
    378a:	0a c0       	rjmp	.+20     	; 0x37a0 <CameraControl_GetStorageInfo+0x2aa>
    378c:	60 81       	ld	r22, Z
    378e:	dc 01       	movw	r26, r24
    3790:	a2 0f       	add	r26, r18
    3792:	b3 1f       	adc	r27, r19
    3794:	5a 96       	adiw	r26, 0x1a	; 26
    3796:	6c 93       	st	X, r22
    3798:	5a 97       	sbiw	r26, 0x1a	; 26
		DeviceInfoPos += 2;
    379a:	32 96       	adiw	r30, 0x02	; 2
    379c:	2f 5f       	subi	r18, 0xFF	; 255
    379e:	3f 4f       	sbci	r19, 0xFF	; 255
	
	iTemp1 = *DeviceInfoPos++;	// get the length of the Storage Description field string
	if ( iTemp1 > (STORAGE_MAX_STRING_SIZE-1) ) iTemp1 = STORAGE_MAX_STRING_SIZE-1;
	iTemp2 = 0;	

	while (iTemp1--)
    37a0:	11 50       	subi	r17, 0x01	; 1
    37a2:	a0 f7       	brcc	.-24     	; 0x378c <CameraControl_GetStorageInfo+0x296>
}

/*------------------------------------------------------------------------------
 * CameraControl_GetStorageInfo
 */
uint8_t CameraControl_GetStorageInfo ( USB_ClassInfo_SI_Host_t* SIInterfaceInfo, 
    37a4:	80 2f       	mov	r24, r16
    37a6:	90 e0       	ldi	r25, 0x00	; 0
    37a8:	dc 01       	movw	r26, r24
    37aa:	aa 0f       	add	r26, r26
    37ac:	bb 1f       	adc	r27, r27
	
	iTemp1 = *DeviceInfoPos++;	// get the length of the Storage Description field string
	if ( iTemp1 > (STORAGE_MAX_STRING_SIZE-1) ) iTemp1 = STORAGE_MAX_STRING_SIZE-1;
	iTemp2 = 0;	

	while (iTemp1--)
    37ae:	a4 0f       	add	r26, r20
    37b0:	b5 1f       	adc	r27, r21
	{
		g_astStorageInfo[iStorageIndex].sDescription[iTemp2++] = *DeviceInfoPos;
		DeviceInfoPos += 2;
	}
	g_astStorageInfo[iStorageIndex].sDescription[iTemp2] = '\0';
    37b2:	2a e3       	ldi	r18, 0x3A	; 58
    37b4:	30 e0       	ldi	r19, 0x00	; 0
    37b6:	e2 9e       	mul	r14, r18
    37b8:	f0 01       	movw	r30, r0
    37ba:	e3 9e       	mul	r14, r19
    37bc:	f0 0d       	add	r31, r0
    37be:	f2 9e       	mul	r15, r18
    37c0:	f0 0d       	add	r31, r0
    37c2:	11 24       	eor	r1, r1
    37c4:	eb 5e       	subi	r30, 0xEB	; 235
    37c6:	fb 4f       	sbci	r31, 0xFB	; 251
    37c8:	e8 0f       	add	r30, r24
    37ca:	f9 1f       	adc	r31, r25
    37cc:	12 8e       	std	Z+26, r1	; 0x1a

	iTemp1 = *DeviceInfoPos++;	// get the length of the Volume Label field string
    37ce:	6c 91       	ld	r22, X
    37d0:	60 31       	cpi	r22, 0x10	; 16
    37d2:	08 f0       	brcs	.+2      	; 0x37d6 <CameraControl_GetStorageInfo+0x2e0>
    37d4:	6f e0       	ldi	r22, 0x0F	; 15
    37d6:	76 2f       	mov	r23, r22
    37d8:	20 e0       	ldi	r18, 0x00	; 0
    37da:	30 e0       	ldi	r19, 0x00	; 0
	if ( iTemp1 > (STORAGE_MAX_STRING_SIZE-1) ) iTemp1 = STORAGE_MAX_STRING_SIZE-1;
	iTemp2 = 0;	

	while (iTemp1--)
	{
		g_astStorageInfo[iStorageIndex].sVolumeLabel[iTemp2++] = *DeviceInfoPos;
    37dc:	4a e3       	ldi	r20, 0x3A	; 58
    37de:	50 e0       	ldi	r21, 0x00	; 0
    37e0:	e4 9e       	mul	r14, r20
    37e2:	c0 01       	movw	r24, r0
    37e4:	e5 9e       	mul	r14, r21
    37e6:	90 0d       	add	r25, r0
    37e8:	f4 9e       	mul	r15, r20
    37ea:	90 0d       	add	r25, r0
    37ec:	11 24       	eor	r1, r1
    37ee:	8b 5e       	subi	r24, 0xEB	; 235
    37f0:	9b 4f       	sbci	r25, 0xFB	; 251
    37f2:	0a c0       	rjmp	.+20     	; 0x3808 <CameraControl_GetStorageInfo+0x312>
    37f4:	11 96       	adiw	r26, 0x01	; 1
    37f6:	4c 91       	ld	r20, X
    37f8:	11 97       	sbiw	r26, 0x01	; 1
    37fa:	fc 01       	movw	r30, r24
    37fc:	e2 0f       	add	r30, r18
    37fe:	f3 1f       	adc	r31, r19
    3800:	42 a7       	std	Z+42, r20	; 0x2a
    3802:	2f 5f       	subi	r18, 0xFF	; 255
    3804:	3f 4f       	sbci	r19, 0xFF	; 255
    3806:	12 96       	adiw	r26, 0x02	; 2

	iTemp1 = *DeviceInfoPos++;	// get the length of the Volume Label field string
	if ( iTemp1 > (STORAGE_MAX_STRING_SIZE-1) ) iTemp1 = STORAGE_MAX_STRING_SIZE-1;
	iTemp2 = 0;	

	while (iTemp1--)
    3808:	71 50       	subi	r23, 0x01	; 1
    380a:	a0 f7       	brcc	.-24     	; 0x37f4 <CameraControl_GetStorageInfo+0x2fe>
	{
		g_astStorageInfo[iStorageIndex].sVolumeLabel[iTemp2++] = *DeviceInfoPos;
		DeviceInfoPos += 2;
	}
	g_astStorageInfo[iStorageIndex].sVolumeLabel[iTemp2] = '\0';
    380c:	8a e3       	ldi	r24, 0x3A	; 58
    380e:	90 e0       	ldi	r25, 0x00	; 0
    3810:	e8 9e       	mul	r14, r24
    3812:	f0 01       	movw	r30, r0
    3814:	e9 9e       	mul	r14, r25
    3816:	f0 0d       	add	r31, r0
    3818:	f8 9e       	mul	r15, r24
    381a:	f0 0d       	add	r31, r0
    381c:	11 24       	eor	r1, r1
    381e:	eb 5e       	subi	r30, 0xEB	; 235
    3820:	fb 4f       	sbci	r31, 0xFB	; 251
    3822:	e6 0f       	add	r30, r22
    3824:	f1 1d       	adc	r31, r1
    3826:	12 a6       	std	Z+42, r1	; 0x2a

	// Receive the final response block from the device 
	return CameraControl_GetResponseAndCheck (SIInterfaceInfo, &PIMABlock);
    3828:	c6 01       	movw	r24, r12
    382a:	be 01       	movw	r22, r28
    382c:	6f 5f       	subi	r22, 0xFF	; 255
    382e:	7f 4f       	sbci	r23, 0xFF	; 255
    3830:	0e 94 c6 13 	call	0x278c	; 0x278c <CameraControl_GetResponseAndCheck>
}
    3834:	0f b6       	in	r0, 0x3f	; 63
    3836:	f8 94       	cli
    3838:	be be       	out	0x3e, r11	; 62
    383a:	0f be       	out	0x3f, r0	; 63
    383c:	ad be       	out	0x3d, r10	; 61
    383e:	6a 96       	adiw	r28, 0x1a	; 26
    3840:	0f b6       	in	r0, 0x3f	; 63
    3842:	f8 94       	cli
    3844:	de bf       	out	0x3e, r29	; 62
    3846:	0f be       	out	0x3f, r0	; 63
    3848:	cd bf       	out	0x3d, r28	; 61
    384a:	cf 91       	pop	r28
    384c:	df 91       	pop	r29
    384e:	1f 91       	pop	r17
    3850:	0f 91       	pop	r16
    3852:	ff 90       	pop	r15
    3854:	ef 90       	pop	r14
    3856:	df 90       	pop	r13
    3858:	cf 90       	pop	r12
    385a:	bf 90       	pop	r11
    385c:	af 90       	pop	r10
    385e:	08 95       	ret

00003860 <CameraControl_StorageInfo_Printout>:

/*------------------------------------------------------------------------------
 * CameraControl_StorageInfo_Printout - shows all storage information
 */
uint8_t CameraControl_StorageInfo_Printout 	( USB_ClassInfo_SI_Host_t* SIInterfaceInfo )
{
    3860:	2f 92       	push	r2
    3862:	3f 92       	push	r3
    3864:	4f 92       	push	r4
    3866:	5f 92       	push	r5
    3868:	6f 92       	push	r6
    386a:	7f 92       	push	r7
    386c:	8f 92       	push	r8
    386e:	9f 92       	push	r9
    3870:	af 92       	push	r10
    3872:	bf 92       	push	r11
    3874:	cf 92       	push	r12
    3876:	df 92       	push	r13
    3878:	ef 92       	push	r14
    387a:	ff 92       	push	r15
    387c:	0f 93       	push	r16
    387e:	1f 93       	push	r17
    3880:	df 93       	push	r29
    3882:	cf 93       	push	r28
    3884:	00 d0       	rcall	.+0      	; 0x3886 <CameraControl_StorageInfo_Printout+0x26>
    3886:	00 d0       	rcall	.+0      	; 0x3888 <CameraControl_StorageInfo_Printout+0x28>
    3888:	cd b7       	in	r28, 0x3d	; 61
    388a:	de b7       	in	r29, 0x3e	; 62
    388c:	8c 01       	movw	r16, r24
	uint8_t ErrorCode = PIPE_RWSTREAM_NoError;
	uint8_t storageIdx = 0;	

	CHECK_CAMERA_CONNECTION;	
    388e:	80 91 f6 03 	lds	r24, 0x03F6
    3892:	8b 30       	cpi	r24, 0x0B	; 11
    3894:	31 f4       	brne	.+12     	; 0x38a2 <CameraControl_StorageInfo_Printout+0x42>
    3896:	d8 01       	movw	r26, r16
    3898:	16 96       	adiw	r26, 0x06	; 6
    389a:	8c 91       	ld	r24, X
    389c:	16 97       	sbiw	r26, 0x06	; 6
    389e:	88 23       	and	r24, r24
    38a0:	61 f4       	brne	.+24     	; 0x38ba <CameraControl_StorageInfo_Printout+0x5a>
    38a2:	00 d0       	rcall	.+0      	; 0x38a4 <CameraControl_StorageInfo_Printout+0x44>
    38a4:	8a e0       	ldi	r24, 0x0A	; 10
    38a6:	9c e0       	ldi	r25, 0x0C	; 12
    38a8:	ed b7       	in	r30, 0x3d	; 61
    38aa:	fe b7       	in	r31, 0x3e	; 62
    38ac:	92 83       	std	Z+2, r25	; 0x02
    38ae:	81 83       	std	Z+1, r24	; 0x01
    38b0:	38 d6       	rcall	.+3184   	; 0x4522 <printf_P>
    38b2:	0f 90       	pop	r0
    38b4:	0f 90       	pop	r0
    38b6:	aa 24       	eor	r10, r10
    38b8:	0d c1       	rjmp	.+538    	; 0x3ad4 <CameraControl_StorageInfo_Printout+0x274>

	ErrorCode = CameraControl_GetStorageIDs ( SIInterfaceInfo );
    38ba:	c8 01       	movw	r24, r16
    38bc:	66 dd       	rcall	.-1332   	; 0x338a <CameraControl_GetStorageIDs>
    38be:	a8 2e       	mov	r10, r24
	if ( ErrorCode != PIPE_RWSTREAM_NoError ) return ErrorCode;
    38c0:	88 23       	and	r24, r24
    38c2:	09 f0       	breq	.+2      	; 0x38c6 <CameraControl_StorageInfo_Printout+0x66>
    38c4:	07 c1       	rjmp	.+526    	; 0x3ad4 <CameraControl_StorageInfo_Printout+0x274>
    38c6:	bb 24       	eor	r11, r11

	for (	storageIdx=0; storageIdx < g_iNumOfStorages; storageIdx ++ )
	{
		printf_P(PSTR("Retrieving storage index %d (ID=0x%X)\r\n"), storageIdx, g_aiStorageIDs[storageIdx]);
    38c8:	42 ee       	ldi	r20, 0xE2	; 226
    38ca:	c4 2e       	mov	r12, r20
    38cc:	4b e0       	ldi	r20, 0x0B	; 11
    38ce:	d4 2e       	mov	r13, r20

		ErrorCode = CameraControl_GetStorageInfo ( SIInterfaceInfo, storageIdx );
		if (ErrorCode != PIPE_RWSTREAM_NoError)  return ErrorCode;

		printf_P(PSTR("	Storage type: 0x%X\r\n"), g_astStorageInfo[storageIdx].iStorageType );
    38d0:	3a e3       	ldi	r19, 0x3A	; 58
    38d2:	83 2e       	mov	r8, r19
    38d4:	91 2c       	mov	r9, r1
    38d6:	2c ec       	ldi	r18, 0xCC	; 204
    38d8:	62 2e       	mov	r6, r18
    38da:	2b e0       	ldi	r18, 0x0B	; 11
    38dc:	72 2e       	mov	r7, r18
		printf_P(PSTR("	File-system type: 0x%X\r\n"), g_astStorageInfo[storageIdx].iFSType );
    38de:	92 eb       	ldi	r25, 0xB2	; 178
    38e0:	49 2e       	mov	r4, r25
    38e2:	9b e0       	ldi	r25, 0x0B	; 11
    38e4:	59 2e       	mov	r5, r25
		printf_P(PSTR("	Access capability: 0x%X\r\n"), g_astStorageInfo[storageIdx].iAccessCap );
    38e6:	87 e9       	ldi	r24, 0x97	; 151
    38e8:	28 2e       	mov	r2, r24
    38ea:	8b e0       	ldi	r24, 0x0B	; 11
    38ec:	38 2e       	mov	r3, r24
    38ee:	1a 83       	std	Y+2, r17	; 0x02
    38f0:	09 83       	std	Y+1, r16	; 0x01
    38f2:	e9 c0       	rjmp	.+466    	; 0x3ac6 <CameraControl_StorageInfo_Printout+0x266>
	ErrorCode = CameraControl_GetStorageIDs ( SIInterfaceInfo );
	if ( ErrorCode != PIPE_RWSTREAM_NoError ) return ErrorCode;

	for (	storageIdx=0; storageIdx < g_iNumOfStorages; storageIdx ++ )
	{
		printf_P(PSTR("Retrieving storage index %d (ID=0x%X)\r\n"), storageIdx, g_aiStorageIDs[storageIdx]);
    38f4:	0b 2d       	mov	r16, r11
    38f6:	10 e0       	ldi	r17, 0x00	; 0
    38f8:	f8 01       	movw	r30, r16
    38fa:	ee 0f       	add	r30, r30
    38fc:	ff 1f       	adc	r31, r31
    38fe:	ee 0f       	add	r30, r30
    3900:	ff 1f       	adc	r31, r31
    3902:	eb 5f       	subi	r30, 0xFB	; 251
    3904:	fb 4f       	sbci	r31, 0xFB	; 251
    3906:	80 81       	ld	r24, Z
    3908:	91 81       	ldd	r25, Z+1	; 0x01
    390a:	a2 81       	ldd	r26, Z+2	; 0x02
    390c:	b3 81       	ldd	r27, Z+3	; 0x03
    390e:	2d b7       	in	r18, 0x3d	; 61
    3910:	3e b7       	in	r19, 0x3e	; 62
    3912:	28 50       	subi	r18, 0x08	; 8
    3914:	30 40       	sbci	r19, 0x00	; 0
    3916:	0f b6       	in	r0, 0x3f	; 63
    3918:	f8 94       	cli
    391a:	3e bf       	out	0x3e, r19	; 62
    391c:	0f be       	out	0x3f, r0	; 63
    391e:	2d bf       	out	0x3d, r18	; 61
    3920:	2f 5f       	subi	r18, 0xFF	; 255
    3922:	3f 4f       	sbci	r19, 0xFF	; 255
    3924:	ed b7       	in	r30, 0x3d	; 61
    3926:	fe b7       	in	r31, 0x3e	; 62
    3928:	d2 82       	std	Z+2, r13	; 0x02
    392a:	c1 82       	std	Z+1, r12	; 0x01
    392c:	f9 01       	movw	r30, r18
    392e:	13 83       	std	Z+3, r17	; 0x03
    3930:	02 83       	std	Z+2, r16	; 0x02
    3932:	84 83       	std	Z+4, r24	; 0x04
    3934:	95 83       	std	Z+5, r25	; 0x05
    3936:	a6 83       	std	Z+6, r26	; 0x06
    3938:	b7 83       	std	Z+7, r27	; 0x07
    393a:	f3 d5       	rcall	.+3046   	; 0x4522 <printf_P>

		ErrorCode = CameraControl_GetStorageInfo ( SIInterfaceInfo, storageIdx );
    393c:	2d b7       	in	r18, 0x3d	; 61
    393e:	3e b7       	in	r19, 0x3e	; 62
    3940:	28 5f       	subi	r18, 0xF8	; 248
    3942:	3f 4f       	sbci	r19, 0xFF	; 255
    3944:	0f b6       	in	r0, 0x3f	; 63
    3946:	f8 94       	cli
    3948:	3e bf       	out	0x3e, r19	; 62
    394a:	0f be       	out	0x3f, r0	; 63
    394c:	2d bf       	out	0x3d, r18	; 61
    394e:	89 81       	ldd	r24, Y+1	; 0x01
    3950:	9a 81       	ldd	r25, Y+2	; 0x02
    3952:	6b 2d       	mov	r22, r11
    3954:	d0 dd       	rcall	.-1120   	; 0x34f6 <CameraControl_GetStorageInfo>
		if (ErrorCode != PIPE_RWSTREAM_NoError)  return ErrorCode;
    3956:	88 23       	and	r24, r24
    3958:	09 f0       	breq	.+2      	; 0x395c <CameraControl_StorageInfo_Printout+0xfc>
    395a:	bb c0       	rjmp	.+374    	; 0x3ad2 <CameraControl_StorageInfo_Printout+0x272>

		printf_P(PSTR("	Storage type: 0x%X\r\n"), g_astStorageInfo[storageIdx].iStorageType );
    395c:	08 9d       	mul	r16, r8
    395e:	70 01       	movw	r14, r0
    3960:	09 9d       	mul	r16, r9
    3962:	f0 0c       	add	r15, r0
    3964:	18 9d       	mul	r17, r8
    3966:	f0 0c       	add	r15, r0
    3968:	11 24       	eor	r1, r1
    396a:	c7 01       	movw	r24, r14
    396c:	8b 5e       	subi	r24, 0xEB	; 235
    396e:	9b 4f       	sbci	r25, 0xFB	; 251
    3970:	9c 83       	std	Y+4, r25	; 0x04
    3972:	8b 83       	std	Y+3, r24	; 0x03
    3974:	dc 01       	movw	r26, r24
    3976:	8d 91       	ld	r24, X+
    3978:	9c 91       	ld	r25, X
    397a:	00 d0       	rcall	.+0      	; 0x397c <CameraControl_StorageInfo_Printout+0x11c>
    397c:	00 d0       	rcall	.+0      	; 0x397e <CameraControl_StorageInfo_Printout+0x11e>
    397e:	ed b7       	in	r30, 0x3d	; 61
    3980:	fe b7       	in	r31, 0x3e	; 62
    3982:	72 82       	std	Z+2, r7	; 0x02
    3984:	61 82       	std	Z+1, r6	; 0x01
    3986:	94 83       	std	Z+4, r25	; 0x04
    3988:	83 83       	std	Z+3, r24	; 0x03
    398a:	cb d5       	rcall	.+2966   	; 0x4522 <printf_P>
		printf_P(PSTR("	File-system type: 0x%X\r\n"), g_astStorageInfo[storageIdx].iFSType );
    398c:	ab 81       	ldd	r26, Y+3	; 0x03
    398e:	bc 81       	ldd	r27, Y+4	; 0x04
    3990:	12 96       	adiw	r26, 0x02	; 2
    3992:	8d 91       	ld	r24, X+
    3994:	9c 91       	ld	r25, X
    3996:	13 97       	sbiw	r26, 0x03	; 3
    3998:	ed b7       	in	r30, 0x3d	; 61
    399a:	fe b7       	in	r31, 0x3e	; 62
    399c:	52 82       	std	Z+2, r5	; 0x02
    399e:	41 82       	std	Z+1, r4	; 0x01
    39a0:	94 83       	std	Z+4, r25	; 0x04
    39a2:	83 83       	std	Z+3, r24	; 0x03
    39a4:	be d5       	rcall	.+2940   	; 0x4522 <printf_P>
		printf_P(PSTR("	Access capability: 0x%X\r\n"), g_astStorageInfo[storageIdx].iAccessCap );
    39a6:	ab 81       	ldd	r26, Y+3	; 0x03
    39a8:	bc 81       	ldd	r27, Y+4	; 0x04
    39aa:	14 96       	adiw	r26, 0x04	; 4
    39ac:	8d 91       	ld	r24, X+
    39ae:	9c 91       	ld	r25, X
    39b0:	15 97       	sbiw	r26, 0x05	; 5
    39b2:	ed b7       	in	r30, 0x3d	; 61
    39b4:	fe b7       	in	r31, 0x3e	; 62
    39b6:	32 82       	std	Z+2, r3	; 0x02
    39b8:	21 82       	std	Z+1, r2	; 0x01
    39ba:	94 83       	std	Z+4, r25	; 0x04
    39bc:	83 83       	std	Z+3, r24	; 0x03
    39be:	b1 d5       	rcall	.+2914   	; 0x4522 <printf_P>
		printf_P(PSTR("	Max capacity: 0x%X\r\n"), g_astStorageInfo[storageIdx].iMaxCapacity );
    39c0:	eb 81       	ldd	r30, Y+3	; 0x03
    39c2:	fc 81       	ldd	r31, Y+4	; 0x04
    39c4:	36 96       	adiw	r30, 0x06	; 6
    39c6:	ab 81       	ldd	r26, Y+3	; 0x03
    39c8:	bc 81       	ldd	r27, Y+4	; 0x04
    39ca:	16 96       	adiw	r26, 0x06	; 6
    39cc:	6c 91       	ld	r22, X
    39ce:	51 81       	ldd	r21, Z+1	; 0x01
    39d0:	42 81       	ldd	r20, Z+2	; 0x02
    39d2:	33 81       	ldd	r19, Z+3	; 0x03
    39d4:	24 81       	ldd	r18, Z+4	; 0x04
    39d6:	95 81       	ldd	r25, Z+5	; 0x05
    39d8:	86 81       	ldd	r24, Z+6	; 0x06
    39da:	77 81       	ldd	r23, Z+7	; 0x07
    39dc:	00 d0       	rcall	.+0      	; 0x39de <CameraControl_StorageInfo_Printout+0x17e>
    39de:	00 d0       	rcall	.+0      	; 0x39e0 <CameraControl_StorageInfo_Printout+0x180>
    39e0:	00 d0       	rcall	.+0      	; 0x39e2 <CameraControl_StorageInfo_Printout+0x182>
    39e2:	ed b7       	in	r30, 0x3d	; 61
    39e4:	fe b7       	in	r31, 0x3e	; 62
    39e6:	31 96       	adiw	r30, 0x01	; 1
    39e8:	01 e8       	ldi	r16, 0x81	; 129
    39ea:	1b e0       	ldi	r17, 0x0B	; 11
    39ec:	ad b7       	in	r26, 0x3d	; 61
    39ee:	be b7       	in	r27, 0x3e	; 62
    39f0:	12 96       	adiw	r26, 0x02	; 2
    39f2:	1c 93       	st	X, r17
    39f4:	0e 93       	st	-X, r16
    39f6:	11 97       	sbiw	r26, 0x01	; 1
    39f8:	62 83       	std	Z+2, r22	; 0x02
    39fa:	53 83       	std	Z+3, r21	; 0x03
    39fc:	44 83       	std	Z+4, r20	; 0x04
    39fe:	35 83       	std	Z+5, r19	; 0x05
    3a00:	26 83       	std	Z+6, r18	; 0x06
    3a02:	97 83       	std	Z+7, r25	; 0x07
    3a04:	80 87       	std	Z+8, r24	; 0x08
    3a06:	71 87       	std	Z+9, r23	; 0x09
    3a08:	8c d5       	rcall	.+2840   	; 0x4522 <printf_P>
		printf_P(PSTR("	Free space: 0x%X\r\n"), g_astStorageInfo[storageIdx].iFreeSpaceBytes );
    3a0a:	eb 81       	ldd	r30, Y+3	; 0x03
    3a0c:	fc 81       	ldd	r31, Y+4	; 0x04
    3a0e:	3e 96       	adiw	r30, 0x0e	; 14
    3a10:	ab 81       	ldd	r26, Y+3	; 0x03
    3a12:	bc 81       	ldd	r27, Y+4	; 0x04
    3a14:	1e 96       	adiw	r26, 0x0e	; 14
    3a16:	6c 91       	ld	r22, X
    3a18:	51 81       	ldd	r21, Z+1	; 0x01
    3a1a:	42 81       	ldd	r20, Z+2	; 0x02
    3a1c:	33 81       	ldd	r19, Z+3	; 0x03
    3a1e:	24 81       	ldd	r18, Z+4	; 0x04
    3a20:	95 81       	ldd	r25, Z+5	; 0x05
    3a22:	86 81       	ldd	r24, Z+6	; 0x06
    3a24:	77 81       	ldd	r23, Z+7	; 0x07
    3a26:	ed b7       	in	r30, 0x3d	; 61
    3a28:	fe b7       	in	r31, 0x3e	; 62
    3a2a:	31 96       	adiw	r30, 0x01	; 1
    3a2c:	0d e6       	ldi	r16, 0x6D	; 109
    3a2e:	1b e0       	ldi	r17, 0x0B	; 11
    3a30:	ad b7       	in	r26, 0x3d	; 61
    3a32:	be b7       	in	r27, 0x3e	; 62
    3a34:	12 96       	adiw	r26, 0x02	; 2
    3a36:	1c 93       	st	X, r17
    3a38:	0e 93       	st	-X, r16
    3a3a:	11 97       	sbiw	r26, 0x01	; 1
    3a3c:	62 83       	std	Z+2, r22	; 0x02
    3a3e:	53 83       	std	Z+3, r21	; 0x03
    3a40:	44 83       	std	Z+4, r20	; 0x04
    3a42:	35 83       	std	Z+5, r19	; 0x05
    3a44:	26 83       	std	Z+6, r18	; 0x06
    3a46:	97 83       	std	Z+7, r25	; 0x07
    3a48:	80 87       	std	Z+8, r24	; 0x08
    3a4a:	71 87       	std	Z+9, r23	; 0x09
    3a4c:	6a d5       	rcall	.+2772   	; 0x4522 <printf_P>
		printf_P(PSTR("	Free space for images: 0x%X\r\n"), g_astStorageInfo[storageIdx].iFreeSpaceImages );
    3a4e:	eb 81       	ldd	r30, Y+3	; 0x03
    3a50:	fc 81       	ldd	r31, Y+4	; 0x04
    3a52:	86 89       	ldd	r24, Z+22	; 0x16
    3a54:	97 89       	ldd	r25, Z+23	; 0x17
    3a56:	a0 8d       	ldd	r26, Z+24	; 0x18
    3a58:	b1 8d       	ldd	r27, Z+25	; 0x19
    3a5a:	0f 90       	pop	r0
    3a5c:	0f 90       	pop	r0
    3a5e:	0f 90       	pop	r0
    3a60:	0f 90       	pop	r0
    3a62:	0e e4       	ldi	r16, 0x4E	; 78
    3a64:	1b e0       	ldi	r17, 0x0B	; 11
    3a66:	ed b7       	in	r30, 0x3d	; 61
    3a68:	fe b7       	in	r31, 0x3e	; 62
    3a6a:	12 83       	std	Z+2, r17	; 0x02
    3a6c:	01 83       	std	Z+1, r16	; 0x01
    3a6e:	83 83       	std	Z+3, r24	; 0x03
    3a70:	94 83       	std	Z+4, r25	; 0x04
    3a72:	a5 83       	std	Z+5, r26	; 0x05
    3a74:	b6 83       	std	Z+6, r27	; 0x06
    3a76:	55 d5       	rcall	.+2730   	; 0x4522 <printf_P>
		printf_P(PSTR("	Storage description: '%s'\r\n"), g_astStorageInfo[storageIdx].sDescription );
    3a78:	c7 01       	movw	r24, r14
    3a7a:	81 5d       	subi	r24, 0xD1	; 209
    3a7c:	9b 4f       	sbci	r25, 0xFB	; 251
    3a7e:	0f 90       	pop	r0
    3a80:	0f 90       	pop	r0
    3a82:	e1 e3       	ldi	r30, 0x31	; 49
    3a84:	fb e0       	ldi	r31, 0x0B	; 11
    3a86:	ad b7       	in	r26, 0x3d	; 61
    3a88:	be b7       	in	r27, 0x3e	; 62
    3a8a:	12 96       	adiw	r26, 0x02	; 2
    3a8c:	fc 93       	st	X, r31
    3a8e:	ee 93       	st	-X, r30
    3a90:	11 97       	sbiw	r26, 0x01	; 1
    3a92:	14 96       	adiw	r26, 0x04	; 4
    3a94:	9c 93       	st	X, r25
    3a96:	8e 93       	st	-X, r24
    3a98:	13 97       	sbiw	r26, 0x03	; 3
    3a9a:	43 d5       	rcall	.+2694   	; 0x4522 <printf_P>
		printf_P(PSTR("	Volume label: '%s'\r\n"), g_astStorageInfo[storageIdx].sVolumeLabel );
    3a9c:	c7 01       	movw	r24, r14
    3a9e:	81 5c       	subi	r24, 0xC1	; 193
    3aa0:	9b 4f       	sbci	r25, 0xFB	; 251
    3aa2:	eb e1       	ldi	r30, 0x1B	; 27
    3aa4:	fb e0       	ldi	r31, 0x0B	; 11
    3aa6:	ad b7       	in	r26, 0x3d	; 61
    3aa8:	be b7       	in	r27, 0x3e	; 62
    3aaa:	12 96       	adiw	r26, 0x02	; 2
    3aac:	fc 93       	st	X, r31
    3aae:	ee 93       	st	-X, r30
    3ab0:	11 97       	sbiw	r26, 0x01	; 1
    3ab2:	14 96       	adiw	r26, 0x04	; 4
    3ab4:	9c 93       	st	X, r25
    3ab6:	8e 93       	st	-X, r24
    3ab8:	13 97       	sbiw	r26, 0x03	; 3
    3aba:	33 d5       	rcall	.+2662   	; 0x4522 <printf_P>
	CHECK_CAMERA_CONNECTION;	

	ErrorCode = CameraControl_GetStorageIDs ( SIInterfaceInfo );
	if ( ErrorCode != PIPE_RWSTREAM_NoError ) return ErrorCode;

	for (	storageIdx=0; storageIdx < g_iNumOfStorages; storageIdx ++ )
    3abc:	b3 94       	inc	r11
    3abe:	0f 90       	pop	r0
    3ac0:	0f 90       	pop	r0
    3ac2:	0f 90       	pop	r0
    3ac4:	0f 90       	pop	r0
    3ac6:	80 91 e6 02 	lds	r24, 0x02E6
    3aca:	b8 16       	cp	r11, r24
    3acc:	08 f4       	brcc	.+2      	; 0x3ad0 <CameraControl_StorageInfo_Printout+0x270>
    3ace:	12 cf       	rjmp	.-476    	; 0x38f4 <CameraControl_StorageInfo_Printout+0x94>
    3ad0:	01 c0       	rjmp	.+2      	; 0x3ad4 <CameraControl_StorageInfo_Printout+0x274>
	{
		printf_P(PSTR("Retrieving storage index %d (ID=0x%X)\r\n"), storageIdx, g_aiStorageIDs[storageIdx]);

		ErrorCode = CameraControl_GetStorageInfo ( SIInterfaceInfo, storageIdx );
    3ad2:	a8 2e       	mov	r10, r24
		printf_P(PSTR("	Storage description: '%s'\r\n"), g_astStorageInfo[storageIdx].sDescription );
		printf_P(PSTR("	Volume label: '%s'\r\n"), g_astStorageInfo[storageIdx].sVolumeLabel );
	}

	return ErrorCode;
}
    3ad4:	8a 2d       	mov	r24, r10
    3ad6:	0f 90       	pop	r0
    3ad8:	0f 90       	pop	r0
    3ada:	0f 90       	pop	r0
    3adc:	0f 90       	pop	r0
    3ade:	cf 91       	pop	r28
    3ae0:	df 91       	pop	r29
    3ae2:	1f 91       	pop	r17
    3ae4:	0f 91       	pop	r16
    3ae6:	ff 90       	pop	r15
    3ae8:	ef 90       	pop	r14
    3aea:	df 90       	pop	r13
    3aec:	cf 90       	pop	r12
    3aee:	bf 90       	pop	r11
    3af0:	af 90       	pop	r10
    3af2:	9f 90       	pop	r9
    3af4:	8f 90       	pop	r8
    3af6:	7f 90       	pop	r7
    3af8:	6f 90       	pop	r6
    3afa:	5f 90       	pop	r5
    3afc:	4f 90       	pop	r4
    3afe:	3f 90       	pop	r3
    3b00:	2f 90       	pop	r2
    3b02:	08 95       	ret

00003b04 <CameraControl_GetStorageID>:

/*------------------------------------------------------------------------------
 * CameraControl_GetStorageID - Search for storage ID from its type
 */
uint8_t CameraControl_GetStorageID 	( PTP_STORETYPE_EN enStorageType, uint32_t* iStorageID )
{
    3b04:	1f 93       	push	r17
	uint8_t i;

	for (i=0; i<g_iNumOfStorages; i++)
    3b06:	10 e0       	ldi	r17, 0x00	; 0
	{
		if (g_astStorageInfo[i].iStorageType==enStorageType)
    3b08:	2a e3       	ldi	r18, 0x3A	; 58
    3b0a:	30 e0       	ldi	r19, 0x00	; 0
    3b0c:	90 e0       	ldi	r25, 0x00	; 0
 */
uint8_t CameraControl_GetStorageID 	( PTP_STORETYPE_EN enStorageType, uint32_t* iStorageID )
{
	uint8_t i;

	for (i=0; i<g_iNumOfStorages; i++)
    3b0e:	25 c0       	rjmp	.+74     	; 0x3b5a <CameraControl_GetStorageID+0x56>
	{
		if (g_astStorageInfo[i].iStorageType==enStorageType)
    3b10:	e1 2f       	mov	r30, r17
    3b12:	f0 e0       	ldi	r31, 0x00	; 0
    3b14:	e2 9f       	mul	r30, r18
    3b16:	d0 01       	movw	r26, r0
    3b18:	e3 9f       	mul	r30, r19
    3b1a:	b0 0d       	add	r27, r0
    3b1c:	f2 9f       	mul	r31, r18
    3b1e:	b0 0d       	add	r27, r0
    3b20:	11 24       	eor	r1, r1
    3b22:	ab 5e       	subi	r26, 0xEB	; 235
    3b24:	bb 4f       	sbci	r27, 0xFB	; 251
    3b26:	4d 91       	ld	r20, X+
    3b28:	5c 91       	ld	r21, X
    3b2a:	11 97       	sbiw	r26, 0x01	; 1
    3b2c:	48 17       	cp	r20, r24
    3b2e:	59 07       	cpc	r21, r25
    3b30:	99 f4       	brne	.+38     	; 0x3b58 <CameraControl_GetStorageID+0x54>
		{
			if (iStorageID) *iStorageID=g_aiStorageIDs[i];
    3b32:	61 15       	cp	r22, r1
    3b34:	71 05       	cpc	r23, r1
    3b36:	b9 f0       	breq	.+46     	; 0x3b66 <CameraControl_GetStorageID+0x62>
    3b38:	ee 0f       	add	r30, r30
    3b3a:	ff 1f       	adc	r31, r31
    3b3c:	ee 0f       	add	r30, r30
    3b3e:	ff 1f       	adc	r31, r31
    3b40:	eb 5f       	subi	r30, 0xFB	; 251
    3b42:	fb 4f       	sbci	r31, 0xFB	; 251
    3b44:	80 81       	ld	r24, Z
    3b46:	91 81       	ldd	r25, Z+1	; 0x01
    3b48:	a2 81       	ldd	r26, Z+2	; 0x02
    3b4a:	b3 81       	ldd	r27, Z+3	; 0x03
    3b4c:	fb 01       	movw	r30, r22
    3b4e:	80 83       	st	Z, r24
    3b50:	91 83       	std	Z+1, r25	; 0x01
    3b52:	a2 83       	std	Z+2, r26	; 0x02
    3b54:	b3 83       	std	Z+3, r27	; 0x03
    3b56:	07 c0       	rjmp	.+14     	; 0x3b66 <CameraControl_GetStorageID+0x62>
 */
uint8_t CameraControl_GetStorageID 	( PTP_STORETYPE_EN enStorageType, uint32_t* iStorageID )
{
	uint8_t i;

	for (i=0; i<g_iNumOfStorages; i++)
    3b58:	1f 5f       	subi	r17, 0xFF	; 255
    3b5a:	40 91 e6 02 	lds	r20, 0x02E6
    3b5e:	14 17       	cp	r17, r20
    3b60:	b8 f2       	brcs	.-82     	; 0x3b10 <CameraControl_GetStorageID+0xc>
			if (iStorageID) *iStorageID=g_aiStorageIDs[i];
			return 0;
		}
	}

	return -1;
    3b62:	8f ef       	ldi	r24, 0xFF	; 255
    3b64:	01 c0       	rjmp	.+2      	; 0x3b68 <CameraControl_GetStorageID+0x64>
	for (i=0; i<g_iNumOfStorages; i++)
	{
		if (g_astStorageInfo[i].iStorageType==enStorageType)
		{
			if (iStorageID) *iStorageID=g_aiStorageIDs[i];
			return 0;
    3b66:	80 e0       	ldi	r24, 0x00	; 0
		}
	}

	return -1;
}
    3b68:	1f 91       	pop	r17
    3b6a:	08 95       	ret

00003b6c <CameraControl_DeviceOperation_Capture>:
 * CameraControl_DeviceOperation_Capture
 */
uint16_t CameraControl_DeviceOperation_Capture ( USB_ClassInfo_SI_Host_t* SIInterfaceInfo,
												 PTP_STORETYPE_EN enStorageType,
												 PTP_FMT_EN enFileFormat )
{
    3b6c:	ef 92       	push	r14
    3b6e:	ff 92       	push	r15
    3b70:	0f 93       	push	r16
    3b72:	1f 93       	push	r17
    3b74:	df 93       	push	r29
    3b76:	cf 93       	push	r28
    3b78:	cd b7       	in	r28, 0x3d	; 61
    3b7a:	de b7       	in	r29, 0x3e	; 62
    3b7c:	6d 97       	sbiw	r28, 0x1d	; 29
    3b7e:	0f b6       	in	r0, 0x3f	; 63
    3b80:	f8 94       	cli
    3b82:	de bf       	out	0x3e, r29	; 62
    3b84:	0f be       	out	0x3f, r0	; 63
    3b86:	cd bf       	out	0x3d, r28	; 61
    3b88:	8c 01       	movw	r16, r24
    3b8a:	7a 01       	movw	r14, r20
	uint8_t iError = 0;
	uint32_t iStorageID = 0;
    3b8c:	19 82       	std	Y+1, r1	; 0x01
    3b8e:	1a 82       	std	Y+2, r1	; 0x02
    3b90:	1b 82       	std	Y+3, r1	; 0x03
    3b92:	1c 82       	std	Y+4, r1	; 0x04
	
	CHECK_CAMERA_CONNECTION;
    3b94:	80 91 f6 03 	lds	r24, 0x03F6
    3b98:	8b 30       	cpi	r24, 0x0B	; 11
    3b9a:	21 f4       	brne	.+8      	; 0x3ba4 <CameraControl_DeviceOperation_Capture+0x38>
    3b9c:	f8 01       	movw	r30, r16
    3b9e:	86 81       	ldd	r24, Z+6	; 0x06
    3ba0:	88 23       	and	r24, r24
    3ba2:	59 f4       	brne	.+22     	; 0x3bba <CameraControl_DeviceOperation_Capture+0x4e>
    3ba4:	00 d0       	rcall	.+0      	; 0x3ba6 <CameraControl_DeviceOperation_Capture+0x3a>
    3ba6:	81 e7       	ldi	r24, 0x71	; 113
    3ba8:	9d e0       	ldi	r25, 0x0D	; 13
    3baa:	ed b7       	in	r30, 0x3d	; 61
    3bac:	fe b7       	in	r31, 0x3e	; 62
    3bae:	92 83       	std	Z+2, r25	; 0x02
    3bb0:	81 83       	std	Z+1, r24	; 0x01
    3bb2:	b7 d4       	rcall	.+2414   	; 0x4522 <printf_P>
    3bb4:	0f 90       	pop	r0
    3bb6:	0f 90       	pop	r0
    3bb8:	48 c0       	rjmp	.+144    	; 0x3c4a <CameraControl_DeviceOperation_Capture+0xde>

	// Open a new session
	iError = CameraControl_OpenSession(SIInterfaceInfo);
    3bba:	c8 01       	movw	r24, r16
    3bbc:	6d 8f       	std	Y+29, r22	; 0x1d
    3bbe:	0e 94 32 14 	call	0x2864	; 0x2864 <CameraControl_OpenSession>
	if ( iError != PIPE_RWSTREAM_NoError )
    3bc2:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3bc4:	88 23       	and	r24, r24
    3bc6:	09 f0       	breq	.+2      	; 0x3bca <CameraControl_DeviceOperation_Capture+0x5e>
    3bc8:	3d c0       	rjmp	.+122    	; 0x3c44 <CameraControl_DeviceOperation_Capture+0xd8>
		iError = -1;
		goto ExitFunction;
	}

	// Search for the appropriate storage ID given the type
	if ( CameraControl_GetStorageID ( enStorageType, &iStorageID )!=0 )
    3bca:	86 2f       	mov	r24, r22
    3bcc:	90 e0       	ldi	r25, 0x00	; 0
    3bce:	be 01       	movw	r22, r28
    3bd0:	6f 5f       	subi	r22, 0xFF	; 255
    3bd2:	7f 4f       	sbci	r23, 0xFF	; 255
    3bd4:	97 df       	rcall	.-210    	; 0x3b04 <CameraControl_GetStorageID>
    3bd6:	00 97       	sbiw	r24, 0x00	; 0
    3bd8:	59 f0       	breq	.+22     	; 0x3bf0 <CameraControl_DeviceOperation_Capture+0x84>
	{
		printf_P(PSTR("\r\nStorage not found. Run get_storage_info..."));
    3bda:	00 d0       	rcall	.+0      	; 0x3bdc <CameraControl_DeviceOperation_Capture+0x70>
    3bdc:	84 e4       	ldi	r24, 0x44	; 68
    3bde:	9d e0       	ldi	r25, 0x0D	; 13
    3be0:	ed b7       	in	r30, 0x3d	; 61
    3be2:	fe b7       	in	r31, 0x3e	; 62
    3be4:	92 83       	std	Z+2, r25	; 0x02
    3be6:	81 83       	std	Z+1, r24	; 0x01
    3be8:	9c d4       	rcall	.+2360   	; 0x4522 <printf_P>
		iError = -2;
		goto ExitFunction;
    3bea:	0f 90       	pop	r0
    3bec:	0f 90       	pop	r0
    3bee:	2a c0       	rjmp	.+84     	; 0x3c44 <CameraControl_DeviceOperation_Capture+0xd8>

	// Initiate capture operation
	//  OpCode 0x100E (PTP_OC_InitiateCapture)
	//  Param1 Storage ID
	//  Param2 Object Format
	PIMA_Container_t PIMABlock = (PIMA_Container_t)
    3bf0:	89 81       	ldd	r24, Y+1	; 0x01
    3bf2:	9a 81       	ldd	r25, Y+2	; 0x02
    3bf4:	ab 81       	ldd	r26, Y+3	; 0x03
    3bf6:	bc 81       	ldd	r27, Y+4	; 0x04
    3bf8:	be 01       	movw	r22, r28
    3bfa:	6b 5f       	subi	r22, 0xFB	; 251
    3bfc:	7f 4f       	sbci	r23, 0xFF	; 255
    3bfe:	28 e1       	ldi	r18, 0x18	; 24
    3c00:	fb 01       	movw	r30, r22
    3c02:	11 92       	st	Z+, r1
    3c04:	2a 95       	dec	r18
    3c06:	e9 f7       	brne	.-6      	; 0x3c02 <CameraControl_DeviceOperation_Capture+0x96>
    3c08:	24 e1       	ldi	r18, 0x14	; 20
    3c0a:	30 e0       	ldi	r19, 0x00	; 0
    3c0c:	40 e0       	ldi	r20, 0x00	; 0
    3c0e:	50 e0       	ldi	r21, 0x00	; 0
    3c10:	2d 83       	std	Y+5, r18	; 0x05
    3c12:	3e 83       	std	Y+6, r19	; 0x06
    3c14:	4f 83       	std	Y+7, r20	; 0x07
    3c16:	58 87       	std	Y+8, r21	; 0x08
    3c18:	21 e0       	ldi	r18, 0x01	; 1
    3c1a:	30 e0       	ldi	r19, 0x00	; 0
    3c1c:	3a 87       	std	Y+10, r19	; 0x0a
    3c1e:	29 87       	std	Y+9, r18	; 0x09
    3c20:	2e e0       	ldi	r18, 0x0E	; 14
    3c22:	30 e1       	ldi	r19, 0x10	; 16
    3c24:	3c 87       	std	Y+12, r19	; 0x0c
    3c26:	2b 87       	std	Y+11, r18	; 0x0b
    3c28:	89 8b       	std	Y+17, r24	; 0x11
    3c2a:	9a 8b       	std	Y+18, r25	; 0x12
    3c2c:	ab 8b       	std	Y+19, r26	; 0x13
    3c2e:	bc 8b       	std	Y+20, r27	; 0x14
    3c30:	c7 01       	movw	r24, r14
    3c32:	a0 e0       	ldi	r26, 0x00	; 0
    3c34:	b0 e0       	ldi	r27, 0x00	; 0
    3c36:	8d 8b       	std	Y+21, r24	; 0x15
    3c38:	9e 8b       	std	Y+22, r25	; 0x16
    3c3a:	af 8b       	std	Y+23, r26	; 0x17
    3c3c:	b8 8f       	std	Y+24, r27	; 0x18
			.Type          = CPU_TO_LE16(PIMA_CONTAINER_CommandBlock),
			.Code          = CPU_TO_LE16(PTP_OC_InitiateCapture),
			.Params        = {iStorageID, enFileFormat},
		};
	
	iError = CameraControl_InitiateTransaction ( SIInterfaceInfo, &PIMABlock );
    3c3e:	c8 01       	movw	r24, r16
    3c40:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <CameraControl_InitiateTransaction>
	if ( iError != PIPE_RWSTREAM_NoError )	goto ExitFunction;

ExitFunction:
	// Close the session
	iError = CameraControl_CloseSession(SIInterfaceInfo);
    3c44:	c8 01       	movw	r24, r16
    3c46:	0e 94 8c 14 	call	0x2918	; 0x2918 <CameraControl_CloseSession>
	if ( iError != PIPE_RWSTREAM_NoError )
	{
	}

	return 0;
}
    3c4a:	80 e0       	ldi	r24, 0x00	; 0
    3c4c:	90 e0       	ldi	r25, 0x00	; 0
    3c4e:	6d 96       	adiw	r28, 0x1d	; 29
    3c50:	0f b6       	in	r0, 0x3f	; 63
    3c52:	f8 94       	cli
    3c54:	de bf       	out	0x3e, r29	; 62
    3c56:	0f be       	out	0x3f, r0	; 63
    3c58:	cd bf       	out	0x3d, r28	; 61
    3c5a:	cf 91       	pop	r28
    3c5c:	df 91       	pop	r29
    3c5e:	1f 91       	pop	r17
    3c60:	0f 91       	pop	r16
    3c62:	ff 90       	pop	r15
    3c64:	ef 90       	pop	r14
    3c66:	08 95       	ret

00003c68 <CameraControl_DeviceOperation_GetPropertyDesc>:
/*------------------------------------------------------------------------------
 * CameraControl_DeviceOperation_GetPropertyDesc
 */
uint16_t CameraControl_DeviceOperation_GetPropertyDesc ( USB_ClassInfo_SI_Host_t* SIInterfaceInfo,
												 		 PTP_DEVPROPERTY_EN enPropertyType )
{
    3c68:	6f 92       	push	r6
    3c6a:	7f 92       	push	r7
    3c6c:	9f 92       	push	r9
    3c6e:	af 92       	push	r10
    3c70:	bf 92       	push	r11
    3c72:	cf 92       	push	r12
    3c74:	df 92       	push	r13
    3c76:	ef 92       	push	r14
    3c78:	ff 92       	push	r15
    3c7a:	0f 93       	push	r16
    3c7c:	1f 93       	push	r17
    3c7e:	df 93       	push	r29
    3c80:	cf 93       	push	r28
    3c82:	cd b7       	in	r28, 0x3d	; 61
    3c84:	de b7       	in	r29, 0x3e	; 62
    3c86:	68 97       	sbiw	r28, 0x18	; 24
    3c88:	0f b6       	in	r0, 0x3f	; 63
    3c8a:	f8 94       	cli
    3c8c:	de bf       	out	0x3e, r29	; 62
    3c8e:	0f be       	out	0x3f, r0	; 63
    3c90:	cd bf       	out	0x3d, r28	; 61
    3c92:	8c 01       	movw	r16, r24
    3c94:	7b 01       	movw	r14, r22
	if ( iError != PIPE_RWSTREAM_NoError )
	{
	}

	return 0;
}
    3c96:	6d b6       	in	r6, 0x3d	; 61
    3c98:	7e b6       	in	r7, 0x3e	; 62
{
	uint8_t iError = 0;
	uint8_t iTemp1 = 0;
	uint8_t iTemp2 = 0;

	CHECK_CAMERA_CONNECTION;
    3c9a:	80 91 f6 03 	lds	r24, 0x03F6
    3c9e:	8b 30       	cpi	r24, 0x0B	; 11
    3ca0:	31 f4       	brne	.+12     	; 0x3cae <CameraControl_DeviceOperation_GetPropertyDesc+0x46>
    3ca2:	d8 01       	movw	r26, r16
    3ca4:	16 96       	adiw	r26, 0x06	; 6
    3ca6:	8c 91       	ld	r24, X
    3ca8:	16 97       	sbiw	r26, 0x06	; 6
    3caa:	88 23       	and	r24, r24
    3cac:	59 f4       	brne	.+22     	; 0x3cc4 <CameraControl_DeviceOperation_GetPropertyDesc+0x5c>
    3cae:	00 d0       	rcall	.+0      	; 0x3cb0 <CameraControl_DeviceOperation_GetPropertyDesc+0x48>
    3cb0:	8c e2       	ldi	r24, 0x2C	; 44
    3cb2:	9d e0       	ldi	r25, 0x0D	; 13
    3cb4:	ed b7       	in	r30, 0x3d	; 61
    3cb6:	fe b7       	in	r31, 0x3e	; 62
    3cb8:	92 83       	std	Z+2, r25	; 0x02
    3cba:	81 83       	std	Z+1, r24	; 0x01
    3cbc:	32 d4       	rcall	.+2148   	; 0x4522 <printf_P>
    3cbe:	0f 90       	pop	r0
    3cc0:	0f 90       	pop	r0
    3cc2:	a7 c0       	rjmp	.+334    	; 0x3e12 <CameraControl_DeviceOperation_GetPropertyDesc+0x1aa>

	// Open a new session
	iError = CameraControl_OpenSession(SIInterfaceInfo);
    3cc4:	c8 01       	movw	r24, r16
    3cc6:	0e 94 32 14 	call	0x2864	; 0x2864 <CameraControl_OpenSession>
	if ( iError != PIPE_RWSTREAM_NoError )
    3cca:	88 23       	and	r24, r24
    3ccc:	09 f0       	breq	.+2      	; 0x3cd0 <CameraControl_DeviceOperation_GetPropertyDesc+0x68>
    3cce:	a4 c0       	rjmp	.+328    	; 0x3e18 <CameraControl_DeviceOperation_GetPropertyDesc+0x1b0>
		return iError;
	}

	// Initiate capture operation
	//  OpCode 0x1014 (PTP_OC_GetDevicePropDesc)
	PIMA_Container_t PIMABlock = (PIMA_Container_t)
    3cd0:	be 01       	movw	r22, r28
    3cd2:	6f 5f       	subi	r22, 0xFF	; 255
    3cd4:	7f 4f       	sbci	r23, 0xFF	; 255
    3cd6:	88 e1       	ldi	r24, 0x18	; 24
    3cd8:	db 01       	movw	r26, r22
    3cda:	1d 92       	st	X+, r1
    3cdc:	8a 95       	dec	r24
    3cde:	e9 f7       	brne	.-6      	; 0x3cda <CameraControl_DeviceOperation_GetPropertyDesc+0x72>
    3ce0:	80 e1       	ldi	r24, 0x10	; 16
    3ce2:	90 e0       	ldi	r25, 0x00	; 0
    3ce4:	a0 e0       	ldi	r26, 0x00	; 0
    3ce6:	b0 e0       	ldi	r27, 0x00	; 0
    3ce8:	89 83       	std	Y+1, r24	; 0x01
    3cea:	9a 83       	std	Y+2, r25	; 0x02
    3cec:	ab 83       	std	Y+3, r26	; 0x03
    3cee:	bc 83       	std	Y+4, r27	; 0x04
    3cf0:	81 e0       	ldi	r24, 0x01	; 1
    3cf2:	90 e0       	ldi	r25, 0x00	; 0
    3cf4:	9e 83       	std	Y+6, r25	; 0x06
    3cf6:	8d 83       	std	Y+5, r24	; 0x05
    3cf8:	84 e1       	ldi	r24, 0x14	; 20
    3cfa:	90 e1       	ldi	r25, 0x10	; 16
    3cfc:	98 87       	std	Y+8, r25	; 0x08
    3cfe:	8f 83       	std	Y+7, r24	; 0x07
    3d00:	c7 01       	movw	r24, r14
    3d02:	a0 e0       	ldi	r26, 0x00	; 0
    3d04:	b0 e0       	ldi	r27, 0x00	; 0
    3d06:	8d 87       	std	Y+13, r24	; 0x0d
    3d08:	9e 87       	std	Y+14, r25	; 0x0e
    3d0a:	af 87       	std	Y+15, r26	; 0x0f
    3d0c:	b8 8b       	std	Y+16, r27	; 0x10
			.Type          = CPU_TO_LE16(PIMA_CONTAINER_CommandBlock),
			.Code          = CPU_TO_LE16(PTP_OC_GetDevicePropDesc),
			.Params        = {enPropertyType},
		};
	
	iError = CameraControl_InitiateTransaction ( SIInterfaceInfo, &PIMABlock );
    3d0e:	c8 01       	movw	r24, r16
    3d10:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <CameraControl_InitiateTransaction>
	if ( iError != PIPE_RWSTREAM_NoError )	return -1;
    3d14:	88 23       	and	r24, r24
    3d16:	09 f0       	breq	.+2      	; 0x3d1a <CameraControl_DeviceOperation_GetPropertyDesc+0xb2>
    3d18:	82 c0       	rjmp	.+260    	; 0x3e1e <CameraControl_DeviceOperation_GetPropertyDesc+0x1b6>

	// Get the size (in bytes) of the dataset
	uint16_t DatasetSize = (PIMABlock.DataLength - PIMA_COMMAND_SIZE(0));
    3d1a:	e9 80       	ldd	r14, Y+1	; 0x01
    3d1c:	fa 80       	ldd	r15, Y+2	; 0x02
    3d1e:	e4 ef       	ldi	r30, 0xF4	; 244
    3d20:	ff ef       	ldi	r31, 0xFF	; 255
    3d22:	ee 0e       	add	r14, r30
    3d24:	ff 1e       	adc	r15, r31

	if (DatasetSize==0) return -1;
    3d26:	e1 14       	cp	r14, r1
    3d28:	f1 04       	cpc	r15, r1
    3d2a:	09 f4       	brne	.+2      	; 0x3d2e <CameraControl_DeviceOperation_GetPropertyDesc+0xc6>
    3d2c:	78 c0       	rjmp	.+240    	; 0x3e1e <CameraControl_DeviceOperation_GetPropertyDesc+0x1b6>

	printf_P(PSTR(ESC_FG_CYAN "	Got property info of %d bytes.\r\n" ESC_FG_WHITE), DatasetSize);	
    3d2e:	00 d0       	rcall	.+0      	; 0x3d30 <CameraControl_DeviceOperation_GetPropertyDesc+0xc8>
    3d30:	00 d0       	rcall	.+0      	; 0x3d32 <CameraControl_DeviceOperation_GetPropertyDesc+0xca>
    3d32:	80 e0       	ldi	r24, 0x00	; 0
    3d34:	9d e0       	ldi	r25, 0x0D	; 13
    3d36:	ad b7       	in	r26, 0x3d	; 61
    3d38:	be b7       	in	r27, 0x3e	; 62
    3d3a:	12 96       	adiw	r26, 0x02	; 2
    3d3c:	9c 93       	st	X, r25
    3d3e:	8e 93       	st	-X, r24
    3d40:	11 97       	sbiw	r26, 0x01	; 1
    3d42:	14 96       	adiw	r26, 0x04	; 4
    3d44:	fc 92       	st	X, r15
    3d46:	ee 92       	st	-X, r14
    3d48:	13 97       	sbiw	r26, 0x03	; 3
    3d4a:	eb d3       	rcall	.+2006   	; 0x4522 <printf_P>

	// Create a buffer large enough to hold the entire device info
	uint8_t Dataset[DatasetSize];
    3d4c:	0f 90       	pop	r0
    3d4e:	0f 90       	pop	r0
    3d50:	0f 90       	pop	r0
    3d52:	0f 90       	pop	r0
    3d54:	ed b7       	in	r30, 0x3d	; 61
    3d56:	fe b7       	in	r31, 0x3e	; 62
    3d58:	ee 19       	sub	r30, r14
    3d5a:	ff 09       	sbc	r31, r15
    3d5c:	0f b6       	in	r0, 0x3f	; 63
    3d5e:	f8 94       	cli
    3d60:	fe bf       	out	0x3e, r31	; 62
    3d62:	0f be       	out	0x3f, r0	; 63
    3d64:	ed bf       	out	0x3d, r30	; 61
    3d66:	cd b6       	in	r12, 0x3d	; 61
    3d68:	de b6       	in	r13, 0x3e	; 62
    3d6a:	08 94       	sec
    3d6c:	c1 1c       	adc	r12, r1
    3d6e:	d1 1c       	adc	r13, r1

	// Read in the data block data
	SI_Host_ReadData(SIInterfaceInfo, Dataset, DatasetSize);
    3d70:	c8 01       	movw	r24, r16
    3d72:	b6 01       	movw	r22, r12
    3d74:	a7 01       	movw	r20, r14
    3d76:	0e 94 79 11 	call	0x22f2	; 0x22f2 <SI_Host_ReadData>
    3d7a:	80 91 a6 00 	lds	r24, 0x00A6
    3d7e:	8e 77       	andi	r24, 0x7E	; 126
    3d80:	80 93 a6 00 	sts	0x00A6, r24

	// Once all the data has been read, the pipe must be cleared before the response can be sent
	Pipe_ClearIN();

	// Create a pointer for walking through the info dataset 
	uint8_t* DatasetPos = Dataset;
    3d84:	9c 2c       	mov	r9, r12
		if ( !(iTemp2 % 16) ) 
		{
			putchar('\r'); putchar('\n');
		}

		printf_P ( PSTR("%02x "), *DatasetPos );
    3d86:	8a ef       	ldi	r24, 0xFA	; 250
    3d88:	a8 2e       	mov	r10, r24
    3d8a:	8c e0       	ldi	r24, 0x0C	; 12
    3d8c:	b8 2e       	mov	r11, r24
	// Create a pointer for walking through the info dataset 
	uint8_t* DatasetPos = Dataset;
	iTemp1 = DatasetSize;

	// Read out the description
	while (iTemp1--)
    3d8e:	26 c0       	rjmp	.+76     	; 0x3ddc <CameraControl_DeviceOperation_GetPropertyDesc+0x174>
	{
		if ( !(iTemp2 % 16) ) 
    3d90:	8f 70       	andi	r24, 0x0F	; 15
    3d92:	71 f4       	brne	.+28     	; 0x3db0 <CameraControl_DeviceOperation_GetPropertyDesc+0x148>
		{
			putchar('\r'); putchar('\n');
    3d94:	60 91 ff 04 	lds	r22, 0x04FF
    3d98:	70 91 00 05 	lds	r23, 0x0500
    3d9c:	8d e0       	ldi	r24, 0x0D	; 13
    3d9e:	90 e0       	ldi	r25, 0x00	; 0
    3da0:	83 d3       	rcall	.+1798   	; 0x44a8 <fputc>
    3da2:	60 91 ff 04 	lds	r22, 0x04FF
    3da6:	70 91 00 05 	lds	r23, 0x0500
    3daa:	8a e0       	ldi	r24, 0x0A	; 10
    3dac:	90 e0       	ldi	r25, 0x00	; 0
    3dae:	7c d3       	rcall	.+1784   	; 0x44a8 <fputc>
		}

		printf_P ( PSTR("%02x "), *DatasetPos );
    3db0:	00 d0       	rcall	.+0      	; 0x3db2 <CameraControl_DeviceOperation_GetPropertyDesc+0x14a>
    3db2:	00 d0       	rcall	.+0      	; 0x3db4 <CameraControl_DeviceOperation_GetPropertyDesc+0x14c>
    3db4:	ed b7       	in	r30, 0x3d	; 61
    3db6:	fe b7       	in	r31, 0x3e	; 62
    3db8:	31 96       	adiw	r30, 0x01	; 1
    3dba:	ad b7       	in	r26, 0x3d	; 61
    3dbc:	be b7       	in	r27, 0x3e	; 62
    3dbe:	12 96       	adiw	r26, 0x02	; 2
    3dc0:	bc 92       	st	X, r11
    3dc2:	ae 92       	st	-X, r10
    3dc4:	11 97       	sbiw	r26, 0x01	; 1
    3dc6:	d6 01       	movw	r26, r12
    3dc8:	8d 91       	ld	r24, X+
    3dca:	6d 01       	movw	r12, r26
    3dcc:	82 83       	std	Z+2, r24	; 0x02
    3dce:	13 82       	std	Z+3, r1	; 0x03
    3dd0:	a8 d3       	rcall	.+1872   	; 0x4522 <printf_P>

		DatasetPos++;	
    3dd2:	ea 94       	dec	r14
    3dd4:	0f 90       	pop	r0
    3dd6:	0f 90       	pop	r0
    3dd8:	0f 90       	pop	r0
    3dda:	0f 90       	pop	r0
    3ddc:	8c 2d       	mov	r24, r12
    3dde:	89 19       	sub	r24, r9
	// Create a pointer for walking through the info dataset 
	uint8_t* DatasetPos = Dataset;
	iTemp1 = DatasetSize;

	// Read out the description
	while (iTemp1--)
    3de0:	ee 20       	and	r14, r14
    3de2:	b1 f6       	brne	.-84     	; 0x3d90 <CameraControl_DeviceOperation_GetPropertyDesc+0x128>
		printf_P ( PSTR("%02x "), *DatasetPos );

		DatasetPos++;	
		iTemp2++; 
	}
	putchar('\r'); putchar('\n');
    3de4:	60 91 ff 04 	lds	r22, 0x04FF
    3de8:	70 91 00 05 	lds	r23, 0x0500
    3dec:	8d e0       	ldi	r24, 0x0D	; 13
    3dee:	90 e0       	ldi	r25, 0x00	; 0
    3df0:	5b d3       	rcall	.+1718   	; 0x44a8 <fputc>
    3df2:	60 91 ff 04 	lds	r22, 0x04FF
    3df6:	70 91 00 05 	lds	r23, 0x0500
    3dfa:	8a e0       	ldi	r24, 0x0A	; 10
    3dfc:	90 e0       	ldi	r25, 0x00	; 0
    3dfe:	54 d3       	rcall	.+1704   	; 0x44a8 <fputc>

	// Receive the final response block from the device 
	iError = CameraControl_GetResponseAndCheck (SIInterfaceInfo, &PIMABlock);
    3e00:	c8 01       	movw	r24, r16
    3e02:	be 01       	movw	r22, r28
    3e04:	6f 5f       	subi	r22, 0xFF	; 255
    3e06:	7f 4f       	sbci	r23, 0xFF	; 255
    3e08:	0e 94 c6 13 	call	0x278c	; 0x278c <CameraControl_GetResponseAndCheck>

	// Close the session
	iError = CameraControl_CloseSession(SIInterfaceInfo);
    3e0c:	c8 01       	movw	r24, r16
    3e0e:	0e 94 8c 14 	call	0x2918	; 0x2918 <CameraControl_CloseSession>
	if ( iError != PIPE_RWSTREAM_NoError )
	{
	}

	return 0;
    3e12:	20 e0       	ldi	r18, 0x00	; 0
    3e14:	30 e0       	ldi	r19, 0x00	; 0
    3e16:	05 c0       	rjmp	.+10     	; 0x3e22 <CameraControl_DeviceOperation_GetPropertyDesc+0x1ba>
	// Open a new session
	iError = CameraControl_OpenSession(SIInterfaceInfo);
	if ( iError != PIPE_RWSTREAM_NoError )
	{
		iError = -1;
		return iError;
    3e18:	2f ef       	ldi	r18, 0xFF	; 255
    3e1a:	30 e0       	ldi	r19, 0x00	; 0
    3e1c:	02 c0       	rjmp	.+4      	; 0x3e22 <CameraControl_DeviceOperation_GetPropertyDesc+0x1ba>
	if ( iError != PIPE_RWSTREAM_NoError )	return -1;

	// Get the size (in bytes) of the dataset
	uint16_t DatasetSize = (PIMABlock.DataLength - PIMA_COMMAND_SIZE(0));

	if (DatasetSize==0) return -1;
    3e1e:	2f ef       	ldi	r18, 0xFF	; 255
    3e20:	3f ef       	ldi	r19, 0xFF	; 255
	if ( iError != PIPE_RWSTREAM_NoError )
	{
	}

	return 0;
}
    3e22:	c9 01       	movw	r24, r18
    3e24:	0f b6       	in	r0, 0x3f	; 63
    3e26:	f8 94       	cli
    3e28:	7e be       	out	0x3e, r7	; 62
    3e2a:	0f be       	out	0x3f, r0	; 63
    3e2c:	6d be       	out	0x3d, r6	; 61
    3e2e:	68 96       	adiw	r28, 0x18	; 24
    3e30:	0f b6       	in	r0, 0x3f	; 63
    3e32:	f8 94       	cli
    3e34:	de bf       	out	0x3e, r29	; 62
    3e36:	0f be       	out	0x3f, r0	; 63
    3e38:	cd bf       	out	0x3d, r28	; 61
    3e3a:	cf 91       	pop	r28
    3e3c:	df 91       	pop	r29
    3e3e:	1f 91       	pop	r17
    3e40:	0f 91       	pop	r16
    3e42:	ff 90       	pop	r15
    3e44:	ef 90       	pop	r14
    3e46:	df 90       	pop	r13
    3e48:	cf 90       	pop	r12
    3e4a:	bf 90       	pop	r11
    3e4c:	af 90       	pop	r10
    3e4e:	9f 90       	pop	r9
    3e50:	7f 90       	pop	r7
    3e52:	6f 90       	pop	r6
    3e54:	08 95       	ret

00003e56 <CameraControl_DeviceEvents_PollEvents>:

/*------------------------------------------------------------------------------
 * CameraControl_DeviceEvents_PollEvents
 */
uint8_t CameraControl_DeviceEvents_PollEvents( USB_ClassInfo_SI_Host_t* SIInterfaceInfo )
{
    3e56:	0f 93       	push	r16
    3e58:	1f 93       	push	r17
    3e5a:	df 93       	push	r29
    3e5c:	cf 93       	push	r28
    3e5e:	cd b7       	in	r28, 0x3d	; 61
    3e60:	de b7       	in	r29, 0x3e	; 62
    3e62:	68 97       	sbiw	r28, 0x18	; 24
    3e64:	0f b6       	in	r0, 0x3f	; 63
    3e66:	f8 94       	cli
    3e68:	de bf       	out	0x3e, r29	; 62
    3e6a:	0f be       	out	0x3f, r0	; 63
    3e6c:	cd bf       	out	0x3d, r28	; 61
    3e6e:	8c 01       	movw	r16, r24
	uint8_t iError = 0;
	PIMA_Container_t PIMABlock;

	if (CAMERA_CONTROL_NOT_CONNECTED) return 0;
    3e70:	80 91 f6 03 	lds	r24, 0x03F6
    3e74:	8b 30       	cpi	r24, 0x0B	; 11
    3e76:	09 f0       	breq	.+2      	; 0x3e7a <CameraControl_DeviceEvents_PollEvents+0x24>
    3e78:	ed c0       	rjmp	.+474    	; 0x4054 <CameraControl_DeviceEvents_PollEvents+0x1fe>
    3e7a:	f8 01       	movw	r30, r16
    3e7c:	86 81       	ldd	r24, Z+6	; 0x06
    3e7e:	88 23       	and	r24, r24
    3e80:	09 f4       	brne	.+2      	; 0x3e84 <CameraControl_DeviceEvents_PollEvents+0x2e>
    3e82:	e8 c0       	rjmp	.+464    	; 0x4054 <CameraControl_DeviceEvents_PollEvents+0x1fe>
	
	// Check if a message is waiting
	if ( !SI_Host_IsEventReceived ( SIInterfaceInfo ) )
    3e84:	c8 01       	movw	r24, r16
    3e86:	0e 94 98 11 	call	0x2330	; 0x2330 <SI_Host_IsEventReceived>
    3e8a:	88 23       	and	r24, r24
    3e8c:	09 f4       	brne	.+2      	; 0x3e90 <CameraControl_DeviceEvents_PollEvents+0x3a>
    3e8e:	e2 c0       	rjmp	.+452    	; 0x4054 <CameraControl_DeviceEvents_PollEvents+0x1fe>
	{
		return 0;
	}
	
	printf_P(PSTR("\r\nNew event:"));
    3e90:	00 d0       	rcall	.+0      	; 0x3e92 <CameraControl_DeviceEvents_PollEvents+0x3c>
    3e92:	8c e6       	ldi	r24, 0x6C	; 108
    3e94:	9f e0       	ldi	r25, 0x0F	; 15
    3e96:	ed b7       	in	r30, 0x3d	; 61
    3e98:	fe b7       	in	r31, 0x3e	; 62
    3e9a:	92 83       	std	Z+2, r25	; 0x02
    3e9c:	81 83       	std	Z+1, r24	; 0x01
    3e9e:	41 d3       	rcall	.+1666   	; 0x4522 <printf_P>
		
	// Get the event data
	iError =  SI_Host_ReceiveEventHeader(SIInterfaceInfo, &PIMABlock) ;
    3ea0:	0f 90       	pop	r0
    3ea2:	0f 90       	pop	r0
    3ea4:	c8 01       	movw	r24, r16
    3ea6:	be 01       	movw	r22, r28
    3ea8:	6f 5f       	subi	r22, 0xFF	; 255
    3eaa:	7f 4f       	sbci	r23, 0xFF	; 255
    3eac:	0e 94 bb 11 	call	0x2376	; 0x2376 <SI_Host_ReceiveEventHeader>
    3eb0:	08 2f       	mov	r16, r24
	if ( iError != PIPE_RWSTREAM_NoError )	goto ExitFunction;
    3eb2:	88 23       	and	r24, r24
    3eb4:	09 f0       	breq	.+2      	; 0x3eb8 <CameraControl_DeviceEvents_PollEvents+0x62>
    3eb6:	d1 c0       	rjmp	.+418    	; 0x405a <CameraControl_DeviceEvents_PollEvents+0x204>
	//		uint16_t Code; /**< Command, event or response code of the container. */
	//		uint32_t TransactionID; /**< Unique container ID to link blocks together. */
	//		uint32_t Params[3]; /**< Block parameters to be issued along with the block code (command blocks only). */
	//  } ATTR_PACKED PIMA_Container_t;
	
	if ( PIMABlock.Type != PIMA_CONTAINER_EventBlock )
    3eb8:	8d 81       	ldd	r24, Y+5	; 0x05
    3eba:	9e 81       	ldd	r25, Y+6	; 0x06
    3ebc:	84 30       	cpi	r24, 0x04	; 4
    3ebe:	91 05       	cpc	r25, r1
    3ec0:	09 f0       	breq	.+2      	; 0x3ec4 <CameraControl_DeviceEvents_PollEvents+0x6e>
    3ec2:	ca c0       	rjmp	.+404    	; 0x4058 <CameraControl_DeviceEvents_PollEvents+0x202>
	
	// Print out the transaction ID and event message
	// printf_P(PSTR("\r\nNew event:"));
	
	// Get the response code
	switch ( PIMABlock.Code )
    3ec4:	8f 81       	ldd	r24, Y+7	; 0x07
    3ec6:	98 85       	ldd	r25, Y+8	; 0x08
    3ec8:	f0 e4       	ldi	r31, 0x40	; 64
    3eca:	86 30       	cpi	r24, 0x06	; 6
    3ecc:	9f 07       	cpc	r25, r31
    3ece:	09 f4       	brne	.+2      	; 0x3ed2 <CameraControl_DeviceEvents_PollEvents+0x7c>
    3ed0:	77 c0       	rjmp	.+238    	; 0x3fc0 <CameraControl_DeviceEvents_PollEvents+0x16a>
    3ed2:	20 e4       	ldi	r18, 0x40	; 64
    3ed4:	87 30       	cpi	r24, 0x07	; 7
    3ed6:	92 07       	cpc	r25, r18
    3ed8:	f0 f4       	brcc	.+60     	; 0x3f16 <CameraControl_DeviceEvents_PollEvents+0xc0>
    3eda:	e0 e4       	ldi	r30, 0x40	; 64
    3edc:	82 30       	cpi	r24, 0x02	; 2
    3ede:	9e 07       	cpc	r25, r30
    3ee0:	09 f4       	brne	.+2      	; 0x3ee4 <CameraControl_DeviceEvents_PollEvents+0x8e>
    3ee2:	4a c0       	rjmp	.+148    	; 0x3f78 <CameraControl_DeviceEvents_PollEvents+0x122>
    3ee4:	f0 e4       	ldi	r31, 0x40	; 64
    3ee6:	83 30       	cpi	r24, 0x03	; 3
    3ee8:	9f 07       	cpc	r25, r31
    3eea:	50 f4       	brcc	.+20     	; 0x3f00 <CameraControl_DeviceEvents_PollEvents+0xaa>
    3eec:	20 e4       	ldi	r18, 0x40	; 64
    3eee:	80 30       	cpi	r24, 0x00	; 0
    3ef0:	92 07       	cpc	r25, r18
    3ef2:	d1 f1       	breq	.+116    	; 0x3f68 <CameraControl_DeviceEvents_PollEvents+0x112>
    3ef4:	e0 e4       	ldi	r30, 0x40	; 64
    3ef6:	81 30       	cpi	r24, 0x01	; 1
    3ef8:	9e 07       	cpc	r25, r30
    3efa:	09 f0       	breq	.+2      	; 0x3efe <CameraControl_DeviceEvents_PollEvents+0xa8>
    3efc:	ae c0       	rjmp	.+348    	; 0x405a <CameraControl_DeviceEvents_PollEvents+0x204>
    3efe:	38 c0       	rjmp	.+112    	; 0x3f70 <CameraControl_DeviceEvents_PollEvents+0x11a>
    3f00:	f0 e4       	ldi	r31, 0x40	; 64
    3f02:	84 30       	cpi	r24, 0x04	; 4
    3f04:	9f 07       	cpc	r25, r31
    3f06:	09 f4       	brne	.+2      	; 0x3f0a <CameraControl_DeviceEvents_PollEvents+0xb4>
    3f08:	43 c0       	rjmp	.+134    	; 0x3f90 <CameraControl_DeviceEvents_PollEvents+0x13a>
    3f0a:	20 e4       	ldi	r18, 0x40	; 64
    3f0c:	85 30       	cpi	r24, 0x05	; 5
    3f0e:	92 07       	cpc	r25, r18
    3f10:	08 f0       	brcs	.+2      	; 0x3f14 <CameraControl_DeviceEvents_PollEvents+0xbe>
    3f12:	50 c0       	rjmp	.+160    	; 0x3fb4 <CameraControl_DeviceEvents_PollEvents+0x15e>
    3f14:	37 c0       	rjmp	.+110    	; 0x3f84 <CameraControl_DeviceEvents_PollEvents+0x12e>
    3f16:	e0 e4       	ldi	r30, 0x40	; 64
    3f18:	8c 30       	cpi	r24, 0x0C	; 12
    3f1a:	9e 07       	cpc	r25, r30
    3f1c:	09 f4       	brne	.+2      	; 0x3f20 <CameraControl_DeviceEvents_PollEvents+0xca>
    3f1e:	6d c0       	rjmp	.+218    	; 0x3ffa <CameraControl_DeviceEvents_PollEvents+0x1a4>
    3f20:	f0 e4       	ldi	r31, 0x40	; 64
    3f22:	8d 30       	cpi	r24, 0x0D	; 13
    3f24:	9f 07       	cpc	r25, r31
    3f26:	80 f4       	brcc	.+32     	; 0x3f48 <CameraControl_DeviceEvents_PollEvents+0xf2>
    3f28:	20 e4       	ldi	r18, 0x40	; 64
    3f2a:	88 30       	cpi	r24, 0x08	; 8
    3f2c:	92 07       	cpc	r25, r18
    3f2e:	09 f4       	brne	.+2      	; 0x3f32 <CameraControl_DeviceEvents_PollEvents+0xdc>
    3f30:	53 c0       	rjmp	.+166    	; 0x3fd8 <CameraControl_DeviceEvents_PollEvents+0x182>
    3f32:	e0 e4       	ldi	r30, 0x40	; 64
    3f34:	88 30       	cpi	r24, 0x08	; 8
    3f36:	9e 07       	cpc	r25, r30
    3f38:	08 f4       	brcc	.+2      	; 0x3f3c <CameraControl_DeviceEvents_PollEvents+0xe6>
    3f3a:	48 c0       	rjmp	.+144    	; 0x3fcc <CameraControl_DeviceEvents_PollEvents+0x176>
    3f3c:	f0 e4       	ldi	r31, 0x40	; 64
    3f3e:	8a 30       	cpi	r24, 0x0A	; 10
    3f40:	9f 07       	cpc	r25, r31
    3f42:	09 f0       	breq	.+2      	; 0x3f46 <CameraControl_DeviceEvents_PollEvents+0xf0>
    3f44:	8a c0       	rjmp	.+276    	; 0x405a <CameraControl_DeviceEvents_PollEvents+0x204>
    3f46:	53 c0       	rjmp	.+166    	; 0x3fee <CameraControl_DeviceEvents_PollEvents+0x198>
    3f48:	21 ec       	ldi	r18, 0xC1	; 193
    3f4a:	81 30       	cpi	r24, 0x01	; 1
    3f4c:	92 07       	cpc	r25, r18
    3f4e:	09 f4       	brne	.+2      	; 0x3f52 <CameraControl_DeviceEvents_PollEvents+0xfc>
    3f50:	60 c0       	rjmp	.+192    	; 0x4012 <CameraControl_DeviceEvents_PollEvents+0x1bc>
    3f52:	e1 ec       	ldi	r30, 0xC1	; 193
    3f54:	82 30       	cpi	r24, 0x02	; 2
    3f56:	9e 07       	cpc	r25, r30
    3f58:	09 f4       	brne	.+2      	; 0x3f5c <CameraControl_DeviceEvents_PollEvents+0x106>
    3f5a:	61 c0       	rjmp	.+194    	; 0x401e <CameraControl_DeviceEvents_PollEvents+0x1c8>
    3f5c:	f0 e4       	ldi	r31, 0x40	; 64
    3f5e:	8d 30       	cpi	r24, 0x0D	; 13
    3f60:	9f 07       	cpc	r25, r31
    3f62:	09 f0       	breq	.+2      	; 0x3f66 <CameraControl_DeviceEvents_PollEvents+0x110>
    3f64:	7a c0       	rjmp	.+244    	; 0x405a <CameraControl_DeviceEvents_PollEvents+0x204>
    3f66:	4f c0       	rjmp	.+158    	; 0x4006 <CameraControl_DeviceEvents_PollEvents+0x1b0>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Undefined.\r\n"));
    3f68:	00 d0       	rcall	.+0      	; 0x3f6a <CameraControl_DeviceEvents_PollEvents+0x114>
    3f6a:	88 e5       	ldi	r24, 0x58	; 88
    3f6c:	9f e0       	ldi	r25, 0x0F	; 15
    3f6e:	37 c0       	rjmp	.+110    	; 0x3fde <CameraControl_DeviceEvents_PollEvents+0x188>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Cancel transaction.\r\n"));
    3f70:	00 d0       	rcall	.+0      	; 0x3f72 <CameraControl_DeviceEvents_PollEvents+0x11c>
    3f72:	8b e3       	ldi	r24, 0x3B	; 59
    3f74:	9f e0       	ldi	r25, 0x0F	; 15
    3f76:	33 c0       	rjmp	.+102    	; 0x3fde <CameraControl_DeviceEvents_PollEvents+0x188>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Object added ID: 0x%x.\r\n"), PIMABlock.Params[0]);
    3f78:	00 d0       	rcall	.+0      	; 0x3f7a <CameraControl_DeviceEvents_PollEvents+0x124>
    3f7a:	00 d0       	rcall	.+0      	; 0x3f7c <CameraControl_DeviceEvents_PollEvents+0x126>
    3f7c:	00 d0       	rcall	.+0      	; 0x3f7e <CameraControl_DeviceEvents_PollEvents+0x128>
    3f7e:	8b e1       	ldi	r24, 0x1B	; 27
    3f80:	9f e0       	ldi	r25, 0x0F	; 15
    3f82:	0b c0       	rjmp	.+22     	; 0x3f9a <CameraControl_DeviceEvents_PollEvents+0x144>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Object removed ID: 0x%x.\r\n"), PIMABlock.Params[0]);
    3f84:	00 d0       	rcall	.+0      	; 0x3f86 <CameraControl_DeviceEvents_PollEvents+0x130>
    3f86:	00 d0       	rcall	.+0      	; 0x3f88 <CameraControl_DeviceEvents_PollEvents+0x132>
    3f88:	00 d0       	rcall	.+0      	; 0x3f8a <CameraControl_DeviceEvents_PollEvents+0x134>
    3f8a:	89 ef       	ldi	r24, 0xF9	; 249
    3f8c:	9e e0       	ldi	r25, 0x0E	; 14
    3f8e:	05 c0       	rjmp	.+10     	; 0x3f9a <CameraControl_DeviceEvents_PollEvents+0x144>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Storage added ID: 0x%x.\r\n"), PIMABlock.Params[0]);
    3f90:	00 d0       	rcall	.+0      	; 0x3f92 <CameraControl_DeviceEvents_PollEvents+0x13c>
    3f92:	00 d0       	rcall	.+0      	; 0x3f94 <CameraControl_DeviceEvents_PollEvents+0x13e>
    3f94:	00 d0       	rcall	.+0      	; 0x3f96 <CameraControl_DeviceEvents_PollEvents+0x140>
    3f96:	88 ed       	ldi	r24, 0xD8	; 216
    3f98:	9e e0       	ldi	r25, 0x0E	; 14
    3f9a:	ed b7       	in	r30, 0x3d	; 61
    3f9c:	fe b7       	in	r31, 0x3e	; 62
    3f9e:	92 83       	std	Z+2, r25	; 0x02
    3fa0:	81 83       	std	Z+1, r24	; 0x01
    3fa2:	8d 85       	ldd	r24, Y+13	; 0x0d
    3fa4:	9e 85       	ldd	r25, Y+14	; 0x0e
    3fa6:	af 85       	ldd	r26, Y+15	; 0x0f
    3fa8:	b8 89       	ldd	r27, Y+16	; 0x10
    3faa:	83 83       	std	Z+3, r24	; 0x03
    3fac:	94 83       	std	Z+4, r25	; 0x04
    3fae:	a5 83       	std	Z+5, r26	; 0x05
    3fb0:	b6 83       	std	Z+6, r27	; 0x06
    3fb2:	46 c0       	rjmp	.+140    	; 0x4040 <CameraControl_DeviceEvents_PollEvents+0x1ea>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Object removed ID: 0x%x.\r\n"), PIMABlock.Params[0]);
    3fb4:	00 d0       	rcall	.+0      	; 0x3fb6 <CameraControl_DeviceEvents_PollEvents+0x160>
    3fb6:	00 d0       	rcall	.+0      	; 0x3fb8 <CameraControl_DeviceEvents_PollEvents+0x162>
    3fb8:	00 d0       	rcall	.+0      	; 0x3fba <CameraControl_DeviceEvents_PollEvents+0x164>
    3fba:	86 eb       	ldi	r24, 0xB6	; 182
    3fbc:	9e e0       	ldi	r25, 0x0E	; 14
    3fbe:	ed cf       	rjmp	.-38     	; 0x3f9a <CameraControl_DeviceEvents_PollEvents+0x144>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Property changed CODE: 0x%x.\r\n"), PIMABlock.Params[0]);
    3fc0:	00 d0       	rcall	.+0      	; 0x3fc2 <CameraControl_DeviceEvents_PollEvents+0x16c>
    3fc2:	00 d0       	rcall	.+0      	; 0x3fc4 <CameraControl_DeviceEvents_PollEvents+0x16e>
    3fc4:	00 d0       	rcall	.+0      	; 0x3fc6 <CameraControl_DeviceEvents_PollEvents+0x170>
    3fc6:	80 e9       	ldi	r24, 0x90	; 144
    3fc8:	9e e0       	ldi	r25, 0x0E	; 14
    3fca:	e7 cf       	rjmp	.-50     	; 0x3f9a <CameraControl_DeviceEvents_PollEvents+0x144>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Object info changed ID: 0x%x.\r\n"), PIMABlock.Params[0]);
    3fcc:	00 d0       	rcall	.+0      	; 0x3fce <CameraControl_DeviceEvents_PollEvents+0x178>
    3fce:	00 d0       	rcall	.+0      	; 0x3fd0 <CameraControl_DeviceEvents_PollEvents+0x17a>
    3fd0:	00 d0       	rcall	.+0      	; 0x3fd2 <CameraControl_DeviceEvents_PollEvents+0x17c>
    3fd2:	89 e6       	ldi	r24, 0x69	; 105
    3fd4:	9e e0       	ldi	r25, 0x0E	; 14
    3fd6:	e1 cf       	rjmp	.-62     	; 0x3f9a <CameraControl_DeviceEvents_PollEvents+0x144>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Dev info changed.\r\n"));
    3fd8:	00 d0       	rcall	.+0      	; 0x3fda <CameraControl_DeviceEvents_PollEvents+0x184>
    3fda:	8e e4       	ldi	r24, 0x4E	; 78
    3fdc:	9e e0       	ldi	r25, 0x0E	; 14
    3fde:	ed b7       	in	r30, 0x3d	; 61
    3fe0:	fe b7       	in	r31, 0x3e	; 62
    3fe2:	92 83       	std	Z+2, r25	; 0x02
    3fe4:	81 83       	std	Z+1, r24	; 0x01
    3fe6:	9d d2       	rcall	.+1338   	; 0x4522 <printf_P>
			}	
			//	get new info	
			break;
    3fe8:	0f 90       	pop	r0
    3fea:	0f 90       	pop	r0
    3fec:	36 c0       	rjmp	.+108    	; 0x405a <CameraControl_DeviceEvents_PollEvents+0x204>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Storage full ID: 0x%x.\r\n"), PIMABlock.Params[0]);
    3fee:	00 d0       	rcall	.+0      	; 0x3ff0 <CameraControl_DeviceEvents_PollEvents+0x19a>
    3ff0:	00 d0       	rcall	.+0      	; 0x3ff2 <CameraControl_DeviceEvents_PollEvents+0x19c>
    3ff2:	00 d0       	rcall	.+0      	; 0x3ff4 <CameraControl_DeviceEvents_PollEvents+0x19e>
    3ff4:	8e e2       	ldi	r24, 0x2E	; 46
    3ff6:	9e e0       	ldi	r25, 0x0E	; 14
    3ff8:	d0 cf       	rjmp	.-96     	; 0x3f9a <CameraControl_DeviceEvents_PollEvents+0x144>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Storage info changed ID: 0x%x.\r\n"), PIMABlock.Params[0]);
    3ffa:	00 d0       	rcall	.+0      	; 0x3ffc <CameraControl_DeviceEvents_PollEvents+0x1a6>
    3ffc:	00 d0       	rcall	.+0      	; 0x3ffe <CameraControl_DeviceEvents_PollEvents+0x1a8>
    3ffe:	00 d0       	rcall	.+0      	; 0x4000 <CameraControl_DeviceEvents_PollEvents+0x1aa>
    4000:	86 e0       	ldi	r24, 0x06	; 6
    4002:	9e e0       	ldi	r25, 0x0E	; 14
    4004:	ca cf       	rjmp	.-108    	; 0x3f9a <CameraControl_DeviceEvents_PollEvents+0x144>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT: Capture complete TransID: 0x%x.\r\n"), PIMABlock.Params[0]);
    4006:	00 d0       	rcall	.+0      	; 0x4008 <CameraControl_DeviceEvents_PollEvents+0x1b2>
    4008:	00 d0       	rcall	.+0      	; 0x400a <CameraControl_DeviceEvents_PollEvents+0x1b4>
    400a:	00 d0       	rcall	.+0      	; 0x400c <CameraControl_DeviceEvents_PollEvents+0x1b6>
    400c:	8d ed       	ldi	r24, 0xDD	; 221
    400e:	9d e0       	ldi	r25, 0x0D	; 13
    4010:	0b c0       	rjmp	.+22     	; 0x4028 <CameraControl_DeviceEvents_PollEvents+0x1d2>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT [NIKON]: Object ready ID: 0x%x.\r\n"), PIMABlock.Params[0]);
    4012:	00 d0       	rcall	.+0      	; 0x4014 <CameraControl_DeviceEvents_PollEvents+0x1be>
    4014:	00 d0       	rcall	.+0      	; 0x4016 <CameraControl_DeviceEvents_PollEvents+0x1c0>
    4016:	00 d0       	rcall	.+0      	; 0x4018 <CameraControl_DeviceEvents_PollEvents+0x1c2>
    4018:	85 eb       	ldi	r24, 0xB5	; 181
    401a:	9d e0       	ldi	r25, 0x0D	; 13
    401c:	05 c0       	rjmp	.+10     	; 0x4028 <CameraControl_DeviceEvents_PollEvents+0x1d2>
				{
					// 
					break;
				}
				
				printf_P(PSTR("EVENT [NIKON]: Capture overflow ID: 0x%x.\r\n"), PIMABlock.Params[0]);
    401e:	00 d0       	rcall	.+0      	; 0x4020 <CameraControl_DeviceEvents_PollEvents+0x1ca>
    4020:	00 d0       	rcall	.+0      	; 0x4022 <CameraControl_DeviceEvents_PollEvents+0x1cc>
    4022:	00 d0       	rcall	.+0      	; 0x4024 <CameraControl_DeviceEvents_PollEvents+0x1ce>
    4024:	89 e8       	ldi	r24, 0x89	; 137
    4026:	9d e0       	ldi	r25, 0x0D	; 13
    4028:	ed b7       	in	r30, 0x3d	; 61
    402a:	fe b7       	in	r31, 0x3e	; 62
    402c:	92 83       	std	Z+2, r25	; 0x02
    402e:	81 83       	std	Z+1, r24	; 0x01
    4030:	2d 85       	ldd	r18, Y+13	; 0x0d
    4032:	3e 85       	ldd	r19, Y+14	; 0x0e
    4034:	4f 85       	ldd	r20, Y+15	; 0x0f
    4036:	58 89       	ldd	r21, Y+16	; 0x10
    4038:	23 83       	std	Z+3, r18	; 0x03
    403a:	34 83       	std	Z+4, r19	; 0x04
    403c:	45 83       	std	Z+5, r20	; 0x05
    403e:	56 83       	std	Z+6, r21	; 0x06
    4040:	70 d2       	rcall	.+1248   	; 0x4522 <printf_P>
			}	
			break;
    4042:	8d b7       	in	r24, 0x3d	; 61
    4044:	9e b7       	in	r25, 0x3e	; 62
    4046:	06 96       	adiw	r24, 0x06	; 6
    4048:	0f b6       	in	r0, 0x3f	; 63
    404a:	f8 94       	cli
    404c:	9e bf       	out	0x3e, r25	; 62
    404e:	0f be       	out	0x3f, r0	; 63
    4050:	8d bf       	out	0x3d, r24	; 61
    4052:	03 c0       	rjmp	.+6      	; 0x405a <CameraControl_DeviceEvents_PollEvents+0x204>
	if (CAMERA_CONTROL_NOT_CONNECTED) return 0;
	
	// Check if a message is waiting
	if ( !SI_Host_IsEventReceived ( SIInterfaceInfo ) )
	{
		return 0;
    4054:	00 e0       	ldi	r16, 0x00	; 0
    4056:	01 c0       	rjmp	.+2      	; 0x405a <CameraControl_DeviceEvents_PollEvents+0x204>
	//		uint32_t Params[3]; /**< Block parameters to be issued along with the block code (command blocks only). */
	//  } ATTR_PACKED PIMA_Container_t;
	
	if ( PIMABlock.Type != PIMA_CONTAINER_EventBlock )
	{
		iError = -1;
    4058:	0f ef       	ldi	r16, 0xFF	; 255
	}


ExitFunction:
	return iError;
}
    405a:	80 2f       	mov	r24, r16
    405c:	68 96       	adiw	r28, 0x18	; 24
    405e:	0f b6       	in	r0, 0x3f	; 63
    4060:	f8 94       	cli
    4062:	de bf       	out	0x3e, r29	; 62
    4064:	0f be       	out	0x3f, r0	; 63
    4066:	cd bf       	out	0x3d, r28	; 61
    4068:	cf 91       	pop	r28
    406a:	df 91       	pop	r29
    406c:	1f 91       	pop	r17
    406e:	0f 91       	pop	r16
    4070:	08 95       	ret

00004072 <tm_cmd_idn>:
	Print out an identification information   
*/
/**************************************************************************/
void tm_cmd_idn	(uint8_t argc, char **argv)
{
	printf ( "STABILY VERSION:%03d.%d;"			// The project
    4072:	8d b7       	in	r24, 0x3d	; 61
    4074:	9e b7       	in	r25, 0x3e	; 62
    4076:	08 97       	sbiw	r24, 0x08	; 8
    4078:	0f b6       	in	r0, 0x3f	; 63
    407a:	f8 94       	cli
    407c:	9e bf       	out	0x3e, r25	; 62
    407e:	0f be       	out	0x3f, r0	; 63
    4080:	8d bf       	out	0x3d, r24	; 61
    4082:	ed b7       	in	r30, 0x3d	; 61
    4084:	fe b7       	in	r31, 0x3e	; 62
    4086:	31 96       	adiw	r30, 0x01	; 1
    4088:	84 e2       	ldi	r24, 0x24	; 36
    408a:	91 e0       	ldi	r25, 0x01	; 1
    408c:	ad b7       	in	r26, 0x3d	; 61
    408e:	be b7       	in	r27, 0x3e	; 62
    4090:	12 96       	adiw	r26, 0x02	; 2
    4092:	9c 93       	st	X, r25
    4094:	8e 93       	st	-X, r24
    4096:	11 97       	sbiw	r26, 0x01	; 1
    4098:	81 e0       	ldi	r24, 0x01	; 1
    409a:	90 e0       	ldi	r25, 0x00	; 0
    409c:	93 83       	std	Z+3, r25	; 0x03
    409e:	82 83       	std	Z+2, r24	; 0x02
    40a0:	15 82       	std	Z+5, r1	; 0x05
    40a2:	14 82       	std	Z+4, r1	; 0x04
    40a4:	80 e1       	ldi	r24, 0x10	; 16
    40a6:	90 e0       	ldi	r25, 0x00	; 0
    40a8:	97 83       	std	Z+7, r25	; 0x07
    40aa:	86 83       	std	Z+6, r24	; 0x06
    40ac:	29 d2       	rcall	.+1106   	; 0x4500 <printf>
    40ae:	8d b7       	in	r24, 0x3d	; 61
    40b0:	9e b7       	in	r25, 0x3e	; 62
    40b2:	08 96       	adiw	r24, 0x08	; 8
    40b4:	0f b6       	in	r0, 0x3f	; 63
    40b6:	f8 94       	cli
    40b8:	9e bf       	out	0x3e, r25	; 62
    40ba:	0f be       	out	0x3f, r0	; 63
    40bc:	8d bf       	out	0x3d, r24	; 61
			 "CLOCK:%03d MHZ;"					// CPU clock speed MHz
			 "\r\n",
			STABILY_VER,
			STABILY_SUBVER,
			STABILY_CLOCK_SPEED );
}
    40be:	08 95       	ret

000040c0 <tm_cmd_set_quite_mode>:
	Get a properties description
*/
/**************************************************************************/
void tm_cmd_set_quite_mode	(uint8_t argc, char **argv)
{
	if (argc<2) 
    40c0:	82 30       	cpi	r24, 0x02	; 2
    40c2:	58 f4       	brcc	.+22     	; 0x40da <tm_cmd_set_quite_mode+0x1a>
	{
		printf("Need int arg");
    40c4:	00 d0       	rcall	.+0      	; 0x40c6 <tm_cmd_set_quite_mode+0x6>
    40c6:	8e e4       	ldi	r24, 0x4E	; 78
    40c8:	91 e0       	ldi	r25, 0x01	; 1
    40ca:	ed b7       	in	r30, 0x3d	; 61
    40cc:	fe b7       	in	r31, 0x3e	; 62
    40ce:	92 83       	std	Z+2, r25	; 0x02
    40d0:	81 83       	std	Z+1, r24	; 0x01
    40d2:	16 d2       	rcall	.+1068   	; 0x4500 <printf>
		return;
    40d4:	0f 90       	pop	r0
    40d6:	0f 90       	pop	r0
    40d8:	08 95       	ret
	}

	g_bQuiteMode = (atoi (argv[1]))!=0;
    40da:	fb 01       	movw	r30, r22
    40dc:	82 81       	ldd	r24, Z+2	; 0x02
    40de:	93 81       	ldd	r25, Z+3	; 0x03
    40e0:	84 d1       	rcall	.+776    	; 0x43ea <atoi>
    40e2:	21 e0       	ldi	r18, 0x01	; 1
    40e4:	00 97       	sbiw	r24, 0x00	; 0
    40e6:	09 f4       	brne	.+2      	; 0x40ea <tm_cmd_set_quite_mode+0x2a>
    40e8:	20 e0       	ldi	r18, 0x00	; 0
    40ea:	20 93 4d 02 	sts	0x024D, r18
    40ee:	08 95       	ret

000040f0 <tm_cmd_prop_desc>:
/*!
	Get a properties description
*/
/**************************************************************************/
void tm_cmd_prop_desc		(uint8_t argc, char **argv)
{
    40f0:	df 93       	push	r29
    40f2:	cf 93       	push	r28
    40f4:	00 d0       	rcall	.+0      	; 0x40f6 <tm_cmd_prop_desc+0x6>
    40f6:	cd b7       	in	r28, 0x3d	; 61
    40f8:	de b7       	in	r29, 0x3e	; 62
	uint16_t iPropValue;

	if ( argc < 2 )
    40fa:	82 30       	cpi	r24, 0x02	; 2
    40fc:	68 f4       	brcc	.+26     	; 0x4118 <tm_cmd_prop_desc+0x28>
	{
		printf("Not enough params.");
    40fe:	00 d0       	rcall	.+0      	; 0x4100 <tm_cmd_prop_desc+0x10>
    4100:	8b e5       	ldi	r24, 0x5B	; 91
    4102:	91 e0       	ldi	r25, 0x01	; 1
    4104:	ad b7       	in	r26, 0x3d	; 61
    4106:	be b7       	in	r27, 0x3e	; 62
    4108:	12 96       	adiw	r26, 0x02	; 2
    410a:	9c 93       	st	X, r25
    410c:	8e 93       	st	-X, r24
    410e:	11 97       	sbiw	r26, 0x01	; 1
    4110:	f7 d1       	rcall	.+1006   	; 0x4500 <printf>
		return;
    4112:	0f 90       	pop	r0
    4114:	0f 90       	pop	r0
    4116:	27 c0       	rjmp	.+78     	; 0x4166 <tm_cmd_prop_desc+0x76>
	} 

	sscanf( argv[1], "%x", &iPropValue );
    4118:	00 d0       	rcall	.+0      	; 0x411a <tm_cmd_prop_desc+0x2a>
    411a:	00 d0       	rcall	.+0      	; 0x411c <tm_cmd_prop_desc+0x2c>
    411c:	00 d0       	rcall	.+0      	; 0x411e <tm_cmd_prop_desc+0x2e>
    411e:	ed b7       	in	r30, 0x3d	; 61
    4120:	fe b7       	in	r31, 0x3e	; 62
    4122:	31 96       	adiw	r30, 0x01	; 1
    4124:	db 01       	movw	r26, r22
    4126:	12 96       	adiw	r26, 0x02	; 2
    4128:	8d 91       	ld	r24, X+
    412a:	9c 91       	ld	r25, X
    412c:	13 97       	sbiw	r26, 0x03	; 3
    412e:	ad b7       	in	r26, 0x3d	; 61
    4130:	be b7       	in	r27, 0x3e	; 62
    4132:	12 96       	adiw	r26, 0x02	; 2
    4134:	9c 93       	st	X, r25
    4136:	8e 93       	st	-X, r24
    4138:	11 97       	sbiw	r26, 0x01	; 1
    413a:	8e e6       	ldi	r24, 0x6E	; 110
    413c:	91 e0       	ldi	r25, 0x01	; 1
    413e:	93 83       	std	Z+3, r25	; 0x03
    4140:	82 83       	std	Z+2, r24	; 0x02
    4142:	ce 01       	movw	r24, r28
    4144:	01 96       	adiw	r24, 0x01	; 1
    4146:	95 83       	std	Z+5, r25	; 0x05
    4148:	84 83       	std	Z+4, r24	; 0x04
    414a:	79 d2       	rcall	.+1266   	; 0x463e <sscanf>

 	CameraControl_DeviceOperation_GetPropertyDesc ( &DigitalCamera_SI_Interface,
    414c:	ed b7       	in	r30, 0x3d	; 61
    414e:	fe b7       	in	r31, 0x3e	; 62
    4150:	36 96       	adiw	r30, 0x06	; 6
    4152:	0f b6       	in	r0, 0x3f	; 63
    4154:	f8 94       	cli
    4156:	fe bf       	out	0x3e, r31	; 62
    4158:	0f be       	out	0x3f, r0	; 63
    415a:	ed bf       	out	0x3d, r30	; 61
    415c:	69 81       	ldd	r22, Y+1	; 0x01
    415e:	7a 81       	ldd	r23, Y+2	; 0x02
    4160:	80 e0       	ldi	r24, 0x00	; 0
    4162:	91 e0       	ldi	r25, 0x01	; 1
    4164:	81 dd       	rcall	.-1278   	; 0x3c68 <CameraControl_DeviceOperation_GetPropertyDesc>
													iPropValue );
}
    4166:	0f 90       	pop	r0
    4168:	0f 90       	pop	r0
    416a:	cf 91       	pop	r28
    416c:	df 91       	pop	r29
    416e:	08 95       	ret

00004170 <tm_cmd_capture>:
	Capture a still image
*/
/**************************************************************************/
void tm_cmd_capture			(uint8_t argc, char **argv)
{
 	CameraControl_DeviceOperation_Capture ( &DigitalCamera_SI_Interface,
    4170:	80 e0       	ldi	r24, 0x00	; 0
    4172:	91 e0       	ldi	r25, 0x01	; 1
    4174:	64 e0       	ldi	r22, 0x04	; 4
    4176:	70 e0       	ldi	r23, 0x00	; 0
    4178:	41 e0       	ldi	r20, 0x01	; 1
    417a:	58 e3       	ldi	r21, 0x38	; 56
											 PTP_ST_RemovableRAM,
											 PTP_OFC_EXIF_JPEG );
}
    417c:	f7 cc       	rjmp	.-1554   	; 0x3b6c <CameraControl_DeviceOperation_Capture>

0000417e <tm_cmd_get_storage_info>:
/*!
	Print-out the current attached device's storage info   
*/
/**************************************************************************/
void tm_cmd_get_storage_info(uint8_t argc, char **argv)
{
    417e:	cf 93       	push	r28
    4180:	df 93       	push	r29
	CameraControl_OpenSession( &DigitalCamera_SI_Interface );
    4182:	c0 e0       	ldi	r28, 0x00	; 0
    4184:	d1 e0       	ldi	r29, 0x01	; 1
    4186:	ce 01       	movw	r24, r28
    4188:	0e 94 32 14 	call	0x2864	; 0x2864 <CameraControl_OpenSession>
	CameraControl_StorageInfo_Printout 	( &DigitalCamera_SI_Interface );
    418c:	ce 01       	movw	r24, r28
    418e:	68 db       	rcall	.-2352   	; 0x3860 <CameraControl_StorageInfo_Printout>
	CameraControl_CloseSession( &DigitalCamera_SI_Interface );
    4190:	ce 01       	movw	r24, r28
    4192:	0e 94 8c 14 	call	0x2918	; 0x2918 <CameraControl_CloseSession>
}
    4196:	df 91       	pop	r29
    4198:	cf 91       	pop	r28
    419a:	08 95       	ret

0000419c <tm_cmd_get_dev_info>:
	Print-out the current attached device info
*/
/**************************************************************************/
void tm_cmd_get_dev_info	(uint8_t argc, char **argv)
{
	CameraControl_DeviceInfo_Printout ( &DigitalCamera_SI_Interface );
    419c:	80 e0       	ldi	r24, 0x00	; 0
    419e:	91 e0       	ldi	r25, 0x01	; 1
    41a0:	0c 94 a4 17 	jmp	0x2f48	; 0x2f48 <CameraControl_DeviceInfo_Printout>

000041a4 <tm_cmd_status>:
	Print-out the system current status   
*/
/**************************************************************************/
void tm_cmd_status (uint8_t argc, char **argv)
{
	printf ( "Camera connected:%d\r\n", CameraControl_CameraConnected(&DigitalCamera_SI_Interface) );
    41a4:	80 e0       	ldi	r24, 0x00	; 0
    41a6:	91 e0       	ldi	r25, 0x01	; 1
    41a8:	0e 94 d7 14 	call	0x29ae	; 0x29ae <CameraControl_CameraConnected>
    41ac:	00 d0       	rcall	.+0      	; 0x41ae <tm_cmd_status+0xa>
    41ae:	00 d0       	rcall	.+0      	; 0x41b0 <tm_cmd_status+0xc>
    41b0:	ed b7       	in	r30, 0x3d	; 61
    41b2:	fe b7       	in	r31, 0x3e	; 62
    41b4:	31 96       	adiw	r30, 0x01	; 1
    41b6:	21 e7       	ldi	r18, 0x71	; 113
    41b8:	31 e0       	ldi	r19, 0x01	; 1
    41ba:	ad b7       	in	r26, 0x3d	; 61
    41bc:	be b7       	in	r27, 0x3e	; 62
    41be:	12 96       	adiw	r26, 0x02	; 2
    41c0:	3c 93       	st	X, r19
    41c2:	2e 93       	st	-X, r18
    41c4:	11 97       	sbiw	r26, 0x01	; 1
    41c6:	82 83       	std	Z+2, r24	; 0x02
    41c8:	13 82       	std	Z+3, r1	; 0x03
    41ca:	9a d1       	rcall	.+820    	; 0x4500 <printf>
    41cc:	0f 90       	pop	r0
    41ce:	0f 90       	pop	r0
    41d0:	0f 90       	pop	r0
    41d2:	0f 90       	pop	r0
}
    41d4:	08 95       	ret

000041d6 <tm_cmd_echo_on>:
	echo is on
*/
/**************************************************************************/
void tm_cmd_echo_on(uint8_t argc, char **argv)
{
	g_EchoOnOff = 1;
    41d6:	81 e0       	ldi	r24, 0x01	; 1
    41d8:	80 93 b9 01 	sts	0x01B9, r24
	printf ("OK\r\n");
    41dc:	87 e8       	ldi	r24, 0x87	; 135
    41de:	91 e0       	ldi	r25, 0x01	; 1
}
    41e0:	bf c1       	rjmp	.+894    	; 0x4560 <puts>

000041e2 <tm_cmd_echo_off>:
	echo is off    
*/
/**************************************************************************/
void tm_cmd_echo_off(uint8_t argc, char **argv)
{
	g_EchoOnOff = 0;
    41e2:	10 92 b9 01 	sts	0x01B9, r1
	printf("OK\r\n");
    41e6:	87 e8       	ldi	r24, 0x87	; 135
    41e8:	91 e0       	ldi	r25, 0x01	; 1
}
    41ea:	ba c1       	rjmp	.+884    	; 0x4560 <puts>

000041ec <Stabily_Shell_Menu>:
	This is the command prompt shell line printer command    
*/
/**************************************************************************/
void Stabily_Shell_Menu( void )
{
	if ( !g_leftDataToGet && g_EchoOnOff==1)
    41ec:	80 91 e7 02 	lds	r24, 0x02E7
    41f0:	88 23       	and	r24, r24
    41f2:	89 f4       	brne	.+34     	; 0x4216 <Stabily_Shell_Menu+0x2a>
    41f4:	80 91 b9 01 	lds	r24, 0x01B9
    41f8:	81 30       	cpi	r24, 0x01	; 1
    41fa:	69 f4       	brne	.+26     	; 0x4216 <Stabily_Shell_Menu+0x2a>
	{
    	printf( "\r\n");
    41fc:	8b e8       	ldi	r24, 0x8B	; 139
    41fe:	91 e0       	ldi	r25, 0x01	; 1
    4200:	af d1       	rcall	.+862    	; 0x4560 <puts>
    	printf( COMMAND_PROMPT);
    4202:	00 d0       	rcall	.+0      	; 0x4204 <Stabily_Shell_Menu+0x18>
    4204:	8d e8       	ldi	r24, 0x8D	; 141
    4206:	91 e0       	ldi	r25, 0x01	; 1
    4208:	ed b7       	in	r30, 0x3d	; 61
    420a:	fe b7       	in	r31, 0x3e	; 62
    420c:	92 83       	std	Z+2, r25	; 0x02
    420e:	81 83       	std	Z+1, r24	; 0x01
    4210:	77 d1       	rcall	.+750    	; 0x4500 <printf>
    4212:	0f 90       	pop	r0
    4214:	0f 90       	pop	r0
    4216:	08 95       	ret

00004218 <Stabily_Shell_Parse>:
	to find a suitable command line in the cmd_table. Then invokes the
	appropriate function given in the cmd_table.    
*/
/**************************************************************************/
void Stabily_Shell_Parse(char *cmd)
{
    4218:	cf 92       	push	r12
    421a:	df 92       	push	r13
    421c:	ef 92       	push	r14
    421e:	ff 92       	push	r15
    4220:	0f 93       	push	r16
    4222:	1f 93       	push	r17
    4224:	df 93       	push	r29
    4226:	cf 93       	push	r28
    4228:	cd b7       	in	r28, 0x3d	; 61
    422a:	de b7       	in	r29, 0x3e	; 62
    422c:	c0 55       	subi	r28, 0x50	; 80
    422e:	d0 40       	sbci	r29, 0x00	; 0
    4230:	0f b6       	in	r0, 0x3f	; 63
    4232:	f8 94       	cli
    4234:	de bf       	out	0x3e, r29	; 62
    4236:	0f be       	out	0x3f, r0	; 63
    4238:	cd bf       	out	0x3d, r28	; 61
    423a:	7c 01       	movw	r14, r24
    uint8_t argc, i = 0;
    char *argv[40];

    fflush(stdout);

    argv[i] = strtok(cmd, " ");
    423c:	69 e9       	ldi	r22, 0x99	; 153
    423e:	71 e0       	ldi	r23, 0x01	; 1
    4240:	f1 d0       	rcall	.+482    	; 0x4424 <strtok>
    4242:	9a 83       	std	Y+2, r25	; 0x02
    4244:	89 83       	std	Y+1, r24	; 0x01
    4246:	8e 01       	movw	r16, r28
    4248:	0d 5f       	subi	r16, 0xFD	; 253
    424a:	1f 4f       	sbci	r17, 0xFF	; 255
	appropriate function given in the cmd_table.    
*/
/**************************************************************************/
void Stabily_Shell_Parse(char *cmd)
{
    uint8_t argc, i = 0;
    424c:	dd 24       	eor	r13, r13
    fflush(stdout);

    argv[i] = strtok(cmd, " ");
    do
    {
        argv[++i] = strtok(NULL, " ");
    424e:	d3 94       	inc	r13
    4250:	80 e0       	ldi	r24, 0x00	; 0
    4252:	90 e0       	ldi	r25, 0x00	; 0
    4254:	69 e9       	ldi	r22, 0x99	; 153
    4256:	71 e0       	ldi	r23, 0x01	; 1
    4258:	e5 d0       	rcall	.+458    	; 0x4424 <strtok>
    425a:	d8 01       	movw	r26, r16
    425c:	8d 93       	st	X+, r24
    425e:	9d 93       	st	X+, r25
    4260:	8d 01       	movw	r16, r26
    } while ((i < 40) && (argv[i] != NULL));
    4262:	bd 2d       	mov	r27, r13
    4264:	b8 32       	cpi	r27, 0x28	; 40
    4266:	11 f4       	brne	.+4      	; 0x426c <Stabily_Shell_Parse+0x54>
	appropriate function given in the cmd_table.    
*/
/**************************************************************************/
void Stabily_Shell_Parse(char *cmd)
{
    uint8_t argc, i = 0;
    4268:	cc 24       	eor	r12, r12
    426a:	14 c0       	rjmp	.+40     	; 0x4294 <Stabily_Shell_Parse+0x7c>

    argv[i] = strtok(cmd, " ");
    do
    {
        argv[++i] = strtok(NULL, " ");
    } while ((i < 40) && (argv[i] != NULL));
    426c:	00 97       	sbiw	r24, 0x00	; 0
    426e:	79 f7       	brne	.-34     	; 0x424e <Stabily_Shell_Parse+0x36>
    4270:	fb cf       	rjmp	.-10     	; 0x4268 <Stabily_Shell_Parse+0x50>
    
    argc = i;
    for (i=0; cmd_tbl[i].cmd != NULL; i++)
    {
        if (!strcmp(argv[0], cmd_tbl[i].cmd))
    4272:	89 81       	ldd	r24, Y+1	; 0x01
    4274:	9a 81       	ldd	r25, Y+2	; 0x02
    4276:	d9 d0       	rcall	.+434    	; 0x442a <strcmp>
    4278:	00 97       	sbiw	r24, 0x00	; 0
    427a:	59 f4       	brne	.+22     	; 0x4292 <Stabily_Shell_Parse+0x7a>
        {
            cmd_tbl[i].func(argc, argv);
    427c:	d8 01       	movw	r26, r16
    427e:	12 96       	adiw	r26, 0x02	; 2
    4280:	ed 91       	ld	r30, X+
    4282:	fc 91       	ld	r31, X
    4284:	13 97       	sbiw	r26, 0x03	; 3
    4286:	8d 2d       	mov	r24, r13
    4288:	be 01       	movw	r22, r28
    428a:	6f 5f       	subi	r22, 0xFF	; 255
    428c:	7f 4f       	sbci	r23, 0xFF	; 255
    428e:	09 95       	icall
    4290:	25 c0       	rjmp	.+74     	; 0x42dc <Stabily_Shell_Parse+0xc4>
    {
        argv[++i] = strtok(NULL, " ");
    } while ((i < 40) && (argv[i] != NULL));
    
    argc = i;
    for (i=0; cmd_tbl[i].cmd != NULL; i++)
    4292:	c3 94       	inc	r12
    4294:	8c 2d       	mov	r24, r12
    4296:	90 e0       	ldi	r25, 0x00	; 0
    4298:	8c 01       	movw	r16, r24
    429a:	00 0f       	add	r16, r16
    429c:	11 1f       	adc	r17, r17
    429e:	08 0f       	add	r16, r24
    42a0:	19 1f       	adc	r17, r25
    42a2:	00 0f       	add	r16, r16
    42a4:	11 1f       	adc	r17, r17
    42a6:	03 5f       	subi	r16, 0xF3	; 243
    42a8:	1d 4f       	sbci	r17, 0xFD	; 253
    42aa:	f8 01       	movw	r30, r16
    42ac:	60 81       	ld	r22, Z
    42ae:	71 81       	ldd	r23, Z+1	; 0x01
    42b0:	61 15       	cp	r22, r1
    42b2:	71 05       	cpc	r23, r1
    42b4:	f1 f6       	brne	.-68     	; 0x4272 <Stabily_Shell_Parse+0x5a>
            cmd_tbl[i].func(argc, argv);
            Stabily_Shell_Menu();
            return;
        }
    }
    printf( "%s: Command not recognized.\r\n", cmd);
    42b6:	00 d0       	rcall	.+0      	; 0x42b8 <Stabily_Shell_Parse+0xa0>
    42b8:	00 d0       	rcall	.+0      	; 0x42ba <Stabily_Shell_Parse+0xa2>
    42ba:	8b e9       	ldi	r24, 0x9B	; 155
    42bc:	91 e0       	ldi	r25, 0x01	; 1
    42be:	ad b7       	in	r26, 0x3d	; 61
    42c0:	be b7       	in	r27, 0x3e	; 62
    42c2:	12 96       	adiw	r26, 0x02	; 2
    42c4:	9c 93       	st	X, r25
    42c6:	8e 93       	st	-X, r24
    42c8:	11 97       	sbiw	r26, 0x01	; 1
    42ca:	14 96       	adiw	r26, 0x04	; 4
    42cc:	fc 92       	st	X, r15
    42ce:	ee 92       	st	-X, r14
    42d0:	13 97       	sbiw	r26, 0x03	; 3
    42d2:	16 d1       	rcall	.+556    	; 0x4500 <printf>

    Stabily_Shell_Menu();
    42d4:	0f 90       	pop	r0
    42d6:	0f 90       	pop	r0
    42d8:	0f 90       	pop	r0
    42da:	0f 90       	pop	r0
    42dc:	87 df       	rcall	.-242    	; 0x41ec <Stabily_Shell_Menu>
}
    42de:	c0 5b       	subi	r28, 0xB0	; 176
    42e0:	df 4f       	sbci	r29, 0xFF	; 255
    42e2:	0f b6       	in	r0, 0x3f	; 63
    42e4:	f8 94       	cli
    42e6:	de bf       	out	0x3e, r29	; 62
    42e8:	0f be       	out	0x3f, r0	; 63
    42ea:	cd bf       	out	0x3d, r28	; 61
    42ec:	cf 91       	pop	r28
    42ee:	df 91       	pop	r29
    42f0:	1f 91       	pop	r17
    42f2:	0f 91       	pop	r16
    42f4:	ff 90       	pop	r15
    42f6:	ef 90       	pop	r14
    42f8:	df 90       	pop	r13
    42fa:	cf 90       	pop	r12
    42fc:	08 95       	ret

000042fe <Stabily_ShellRX>:
		up arraw = 		0x00 -> 0x48
		down arrow = 	0x00 -> 0x50
*/
/**************************************************************************/
void Stabily_ShellRX( void )
{
    42fe:	0f 93       	push	r16
    4300:	1f 93       	push	r17
    4302:	cf 93       	push	r28
    4304:	df 93       	push	r29
			if (g_EchoOnOff)
			{
		        printf( "\r\n" );
			}				
	               			
			strcpy ((char*)(last_msg), (char*)(msg));	 
    4306:	ca e6       	ldi	r28, 0x6A	; 106
    4308:	d3 e0       	ldi	r29, 0x03	; 3
			 */
			static inline void Serial_SendByte(const char DataByte) ATTR_ALWAYS_INLINE;
			static inline void Serial_SendByte(const char DataByte)
			{
				while (!(UCSR1A & (1 << UDRE1)));
				UDR1 = DataByte;
    430a:	18 e0       	ldi	r17, 0x08	; 8
    430c:	00 e2       	ldi	r16, 0x20	; 32
		down arrow = 	0x00 -> 0x50
*/
/**************************************************************************/
void Stabily_ShellRX( void )
{
	while (Serial_IsCharReceived( ))
    430e:	64 c0       	rjmp	.+200    	; 0x43d8 <Stabily_ShellRX+0xda>
			 *  \return Boolean \c true if a character has been received, \c false otherwise.
			 */
			static inline bool Serial_IsCharReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Serial_IsCharReceived(void)
			{
				return ((UCSR1A & (1 << RXC1)) ? true : false);
    4310:	80 91 c8 00 	lds	r24, 0x00C8
			 *  \return Next byte received from the USART, or a negative value if no byte has been received.
			 */
			static inline int16_t Serial_ReceiveByte(void) ATTR_ALWAYS_INLINE;
			static inline int16_t Serial_ReceiveByte(void)
			{
				if (!(Serial_IsCharReceived()))
    4314:	87 ff       	sbrs	r24, 7
    4316:	03 c0       	rjmp	.+6      	; 0x431e <Stabily_ShellRX+0x20>
				  return -1;
				
				return UDR1;
    4318:	80 91 ce 00 	lds	r24, 0x00CE
    431c:	02 c0       	rjmp	.+4      	; 0x4322 <Stabily_ShellRX+0x24>
			 */
			static inline int16_t Serial_ReceiveByte(void) ATTR_ALWAYS_INLINE;
			static inline int16_t Serial_ReceiveByte(void)
			{
				if (!(Serial_IsCharReceived()))
				  return -1;
    431e:	8f ef       	ldi	r24, 0xFF	; 255
    4320:	9f ef       	ldi	r25, 0xFF	; 255
	{
		char c = Serial_ReceiveByte ( );

	    switch (c)
    4322:	8d 30       	cpi	r24, 0x0D	; 13
    4324:	31 f0       	breq	.+12     	; 0x4332 <Stabily_ShellRX+0x34>
    4326:	8a 33       	cpi	r24, 0x3A	; 58
    4328:	21 f0       	breq	.+8      	; 0x4332 <Stabily_ShellRX+0x34>
    432a:	88 30       	cpi	r24, 0x08	; 8
    432c:	09 f0       	breq	.+2      	; 0x4330 <Stabily_ShellRX+0x32>
    432e:	41 c0       	rjmp	.+130    	; 0x43b2 <Stabily_ShellRX+0xb4>
    4330:	1f c0       	rjmp	.+62     	; 0x4370 <Stabily_ShellRX+0x72>
		case ':':
	    case '\r':
	        // terminate the msg and reset the msg ptr. then send
	        // it to the handler for processing.

	        *msg_ptr = '\0';
    4332:	e0 91 e8 02 	lds	r30, 0x02E8
    4336:	f0 91 e9 02 	lds	r31, 0x02E9
    433a:	10 82       	st	Z, r1

			if (g_EchoOnOff)
    433c:	80 91 b9 01 	lds	r24, 0x01B9
    4340:	88 23       	and	r24, r24
    4342:	19 f0       	breq	.+6      	; 0x434a <Stabily_ShellRX+0x4c>
			{
		        printf( "\r\n" );
    4344:	8b e8       	ldi	r24, 0x8B	; 139
    4346:	91 e0       	ldi	r25, 0x01	; 1
    4348:	0b d1       	rcall	.+534    	; 0x4560 <puts>
			}				
	               			
			strcpy ((char*)(last_msg), (char*)(msg));	 
    434a:	8a ee       	ldi	r24, 0xEA	; 234
    434c:	92 e0       	ldi	r25, 0x02	; 2
    434e:	6a e6       	ldi	r22, 0x6A	; 106
    4350:	73 e0       	ldi	r23, 0x03	; 3
    4352:	74 d0       	rcall	.+232    	; 0x443c <strcpy>
			if ( msg[0] != '\0' )	Stabily_Shell_Parse((char *)msg);
    4354:	80 91 6a 03 	lds	r24, 0x036A
    4358:	88 23       	and	r24, r24
    435a:	21 f0       	breq	.+8      	; 0x4364 <Stabily_ShellRX+0x66>
    435c:	8a e6       	ldi	r24, 0x6A	; 106
    435e:	93 e0       	ldi	r25, 0x03	; 3
    4360:	5b df       	rcall	.-330    	; 0x4218 <Stabily_Shell_Parse>
    4362:	01 c0       	rjmp	.+2      	; 0x4366 <Stabily_ShellRX+0x68>
			else Stabily_Shell_Menu();
    4364:	43 df       	rcall	.-378    	; 0x41ec <Stabily_Shell_Menu>
	        msg_ptr = msg;
    4366:	d0 93 e9 02 	sts	0x02E9, r29
    436a:	c0 93 e8 02 	sts	0x02E8, r28
	        break;
    436e:	34 c0       	rjmp	.+104    	; 0x43d8 <Stabily_ShellRX+0xda>
            
	    case '\b':
	        if (msg_ptr > msg)
    4370:	80 91 e8 02 	lds	r24, 0x02E8
    4374:	90 91 e9 02 	lds	r25, 0x02E9
    4378:	23 e0       	ldi	r18, 0x03	; 3
    437a:	8a 36       	cpi	r24, 0x6A	; 106
    437c:	92 07       	cpc	r25, r18
    437e:	61 f1       	breq	.+88     	; 0x43d8 <Stabily_ShellRX+0xda>
    4380:	58 f1       	brcs	.+86     	; 0x43d8 <Stabily_ShellRX+0xda>
	        {
	            msg_ptr--;
    4382:	01 97       	sbiw	r24, 0x01	; 1
    4384:	90 93 e9 02 	sts	0x02E9, r25
    4388:	80 93 e8 02 	sts	0x02E8, r24
			 *  \param[in] DataByte  Byte to transmit through the USART.
			 */
			static inline void Serial_SendByte(const char DataByte) ATTR_ALWAYS_INLINE;
			static inline void Serial_SendByte(const char DataByte)
			{
				while (!(UCSR1A & (1 << UDRE1)));
    438c:	80 91 c8 00 	lds	r24, 0x00C8
    4390:	85 ff       	sbrs	r24, 5
    4392:	fc cf       	rjmp	.-8      	; 0x438c <Stabily_ShellRX+0x8e>
				UDR1 = DataByte;
    4394:	10 93 ce 00 	sts	0x00CE, r17
			 *  \param[in] DataByte  Byte to transmit through the USART.
			 */
			static inline void Serial_SendByte(const char DataByte) ATTR_ALWAYS_INLINE;
			static inline void Serial_SendByte(const char DataByte)
			{
				while (!(UCSR1A & (1 << UDRE1)));
    4398:	80 91 c8 00 	lds	r24, 0x00C8
    439c:	85 ff       	sbrs	r24, 5
    439e:	fc cf       	rjmp	.-8      	; 0x4398 <Stabily_ShellRX+0x9a>
				UDR1 = DataByte;
    43a0:	00 93 ce 00 	sts	0x00CE, r16
			 *  \param[in] DataByte  Byte to transmit through the USART.
			 */
			static inline void Serial_SendByte(const char DataByte) ATTR_ALWAYS_INLINE;
			static inline void Serial_SendByte(const char DataByte)
			{
				while (!(UCSR1A & (1 << UDRE1)));
    43a4:	80 91 c8 00 	lds	r24, 0x00C8
    43a8:	85 ff       	sbrs	r24, 5
    43aa:	fc cf       	rjmp	.-8      	; 0x43a4 <Stabily_ShellRX+0xa6>
				UDR1 = DataByte;
    43ac:	10 93 ce 00 	sts	0x00CE, r17
    43b0:	13 c0       	rjmp	.+38     	; 0x43d8 <Stabily_ShellRX+0xda>
			}
	        break;
			
           
	    default:
			if (g_EchoOnOff)
    43b2:	90 91 b9 01 	lds	r25, 0x01B9
    43b6:	99 23       	and	r25, r25
    43b8:	31 f0       	breq	.+12     	; 0x43c6 <Stabily_ShellRX+0xc8>
			 *  \param[in] DataByte  Byte to transmit through the USART.
			 */
			static inline void Serial_SendByte(const char DataByte) ATTR_ALWAYS_INLINE;
			static inline void Serial_SendByte(const char DataByte)
			{
				while (!(UCSR1A & (1 << UDRE1)));
    43ba:	90 91 c8 00 	lds	r25, 0x00C8
    43be:	95 ff       	sbrs	r25, 5
    43c0:	fc cf       	rjmp	.-8      	; 0x43ba <Stabily_ShellRX+0xbc>
				UDR1 = DataByte;
    43c2:	80 93 ce 00 	sts	0x00CE, r24
				Serial_SendByte ( c );

	        *msg_ptr++ = c;
    43c6:	e0 91 e8 02 	lds	r30, 0x02E8
    43ca:	f0 91 e9 02 	lds	r31, 0x02E9
    43ce:	81 93       	st	Z+, r24
    43d0:	f0 93 e9 02 	sts	0x02E9, r31
    43d4:	e0 93 e8 02 	sts	0x02E8, r30
			 *  \return Boolean \c true if a character has been received, \c false otherwise.
			 */
			static inline bool Serial_IsCharReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Serial_IsCharReceived(void)
			{
				return ((UCSR1A & (1 << RXC1)) ? true : false);
    43d8:	80 91 c8 00 	lds	r24, 0x00C8
		down arrow = 	0x00 -> 0x50
*/
/**************************************************************************/
void Stabily_ShellRX( void )
{
	while (Serial_IsCharReceived( ))
    43dc:	87 fd       	sbrc	r24, 7
    43de:	98 cf       	rjmp	.-208    	; 0x4310 <Stabily_ShellRX+0x12>

	        *msg_ptr++ = c;
	        break;
	    }
	}
}
    43e0:	df 91       	pop	r29
    43e2:	cf 91       	pop	r28
    43e4:	1f 91       	pop	r17
    43e6:	0f 91       	pop	r16
    43e8:	08 95       	ret

000043ea <atoi>:
    43ea:	fc 01       	movw	r30, r24
    43ec:	88 27       	eor	r24, r24
    43ee:	99 27       	eor	r25, r25
    43f0:	e8 94       	clt
    43f2:	21 91       	ld	r18, Z+
    43f4:	20 32       	cpi	r18, 0x20	; 32
    43f6:	e9 f3       	breq	.-6      	; 0x43f2 <atoi+0x8>
    43f8:	29 30       	cpi	r18, 0x09	; 9
    43fa:	10 f0       	brcs	.+4      	; 0x4400 <atoi+0x16>
    43fc:	2e 30       	cpi	r18, 0x0E	; 14
    43fe:	c8 f3       	brcs	.-14     	; 0x43f2 <atoi+0x8>
    4400:	2b 32       	cpi	r18, 0x2B	; 43
    4402:	39 f0       	breq	.+14     	; 0x4412 <atoi+0x28>
    4404:	2d 32       	cpi	r18, 0x2D	; 45
    4406:	31 f4       	brne	.+12     	; 0x4414 <atoi+0x2a>
    4408:	68 94       	set
    440a:	03 c0       	rjmp	.+6      	; 0x4412 <atoi+0x28>
    440c:	45 d0       	rcall	.+138    	; 0x4498 <__mulhi_const_10>
    440e:	82 0f       	add	r24, r18
    4410:	91 1d       	adc	r25, r1
    4412:	21 91       	ld	r18, Z+
    4414:	20 53       	subi	r18, 0x30	; 48
    4416:	2a 30       	cpi	r18, 0x0A	; 10
    4418:	c8 f3       	brcs	.-14     	; 0x440c <atoi+0x22>
    441a:	1e f4       	brtc	.+6      	; 0x4422 <atoi+0x38>
    441c:	90 95       	com	r25
    441e:	81 95       	neg	r24
    4420:	9f 4f       	sbci	r25, 0xFF	; 255
    4422:	08 95       	ret

00004424 <strtok>:
    4424:	4a ee       	ldi	r20, 0xEA	; 234
    4426:	53 e0       	ldi	r21, 0x03	; 3
    4428:	10 c0       	rjmp	.+32     	; 0x444a <strtok_r>

0000442a <strcmp>:
    442a:	fb 01       	movw	r30, r22
    442c:	dc 01       	movw	r26, r24
    442e:	8d 91       	ld	r24, X+
    4430:	01 90       	ld	r0, Z+
    4432:	80 19       	sub	r24, r0
    4434:	01 10       	cpse	r0, r1
    4436:	d9 f3       	breq	.-10     	; 0x442e <strcmp+0x4>
    4438:	99 0b       	sbc	r25, r25
    443a:	08 95       	ret

0000443c <strcpy>:
    443c:	fb 01       	movw	r30, r22
    443e:	dc 01       	movw	r26, r24
    4440:	01 90       	ld	r0, Z+
    4442:	0d 92       	st	X+, r0
    4444:	00 20       	and	r0, r0
    4446:	e1 f7       	brne	.-8      	; 0x4440 <strcpy+0x4>
    4448:	08 95       	ret

0000444a <strtok_r>:
    444a:	fa 01       	movw	r30, r20
    444c:	a1 91       	ld	r26, Z+
    444e:	b0 81       	ld	r27, Z
    4450:	00 97       	sbiw	r24, 0x00	; 0
    4452:	19 f4       	brne	.+6      	; 0x445a <strtok_r+0x10>
    4454:	10 97       	sbiw	r26, 0x00	; 0
    4456:	e1 f0       	breq	.+56     	; 0x4490 <strtok_r+0x46>
    4458:	cd 01       	movw	r24, r26
    445a:	dc 01       	movw	r26, r24
    445c:	cd 01       	movw	r24, r26
    445e:	0d 90       	ld	r0, X+
    4460:	00 20       	and	r0, r0
    4462:	11 f4       	brne	.+4      	; 0x4468 <strtok_r+0x1e>
    4464:	c0 01       	movw	r24, r0
    4466:	13 c0       	rjmp	.+38     	; 0x448e <strtok_r+0x44>
    4468:	fb 01       	movw	r30, r22
    446a:	21 91       	ld	r18, Z+
    446c:	22 23       	and	r18, r18
    446e:	19 f0       	breq	.+6      	; 0x4476 <strtok_r+0x2c>
    4470:	20 15       	cp	r18, r0
    4472:	d9 f7       	brne	.-10     	; 0x446a <strtok_r+0x20>
    4474:	f3 cf       	rjmp	.-26     	; 0x445c <strtok_r+0x12>
    4476:	fb 01       	movw	r30, r22
    4478:	21 91       	ld	r18, Z+
    447a:	20 15       	cp	r18, r0
    447c:	19 f4       	brne	.+6      	; 0x4484 <strtok_r+0x3a>
    447e:	1e 92       	st	-X, r1
    4480:	11 96       	adiw	r26, 0x01	; 1
    4482:	06 c0       	rjmp	.+12     	; 0x4490 <strtok_r+0x46>
    4484:	22 23       	and	r18, r18
    4486:	c1 f7       	brne	.-16     	; 0x4478 <strtok_r+0x2e>
    4488:	0d 90       	ld	r0, X+
    448a:	00 20       	and	r0, r0
    448c:	a1 f7       	brne	.-24     	; 0x4476 <strtok_r+0x2c>
    448e:	d0 01       	movw	r26, r0
    4490:	fa 01       	movw	r30, r20
    4492:	a1 93       	st	Z+, r26
    4494:	b0 83       	st	Z, r27
    4496:	08 95       	ret

00004498 <__mulhi_const_10>:
    4498:	7a e0       	ldi	r23, 0x0A	; 10
    449a:	97 9f       	mul	r25, r23
    449c:	90 2d       	mov	r25, r0
    449e:	87 9f       	mul	r24, r23
    44a0:	80 2d       	mov	r24, r0
    44a2:	91 0d       	add	r25, r1
    44a4:	11 24       	eor	r1, r1
    44a6:	08 95       	ret

000044a8 <fputc>:
    44a8:	0f 93       	push	r16
    44aa:	1f 93       	push	r17
    44ac:	cf 93       	push	r28
    44ae:	df 93       	push	r29
    44b0:	8c 01       	movw	r16, r24
    44b2:	eb 01       	movw	r28, r22
    44b4:	8b 81       	ldd	r24, Y+3	; 0x03
    44b6:	81 ff       	sbrs	r24, 1
    44b8:	1b c0       	rjmp	.+54     	; 0x44f0 <fputc+0x48>
    44ba:	82 ff       	sbrs	r24, 2
    44bc:	0d c0       	rjmp	.+26     	; 0x44d8 <fputc+0x30>
    44be:	2e 81       	ldd	r18, Y+6	; 0x06
    44c0:	3f 81       	ldd	r19, Y+7	; 0x07
    44c2:	8c 81       	ldd	r24, Y+4	; 0x04
    44c4:	9d 81       	ldd	r25, Y+5	; 0x05
    44c6:	28 17       	cp	r18, r24
    44c8:	39 07       	cpc	r19, r25
    44ca:	64 f4       	brge	.+24     	; 0x44e4 <fputc+0x3c>
    44cc:	e8 81       	ld	r30, Y
    44ce:	f9 81       	ldd	r31, Y+1	; 0x01
    44d0:	01 93       	st	Z+, r16
    44d2:	f9 83       	std	Y+1, r31	; 0x01
    44d4:	e8 83       	st	Y, r30
    44d6:	06 c0       	rjmp	.+12     	; 0x44e4 <fputc+0x3c>
    44d8:	e8 85       	ldd	r30, Y+8	; 0x08
    44da:	f9 85       	ldd	r31, Y+9	; 0x09
    44dc:	80 2f       	mov	r24, r16
    44de:	09 95       	icall
    44e0:	00 97       	sbiw	r24, 0x00	; 0
    44e2:	31 f4       	brne	.+12     	; 0x44f0 <fputc+0x48>
    44e4:	8e 81       	ldd	r24, Y+6	; 0x06
    44e6:	9f 81       	ldd	r25, Y+7	; 0x07
    44e8:	01 96       	adiw	r24, 0x01	; 1
    44ea:	9f 83       	std	Y+7, r25	; 0x07
    44ec:	8e 83       	std	Y+6, r24	; 0x06
    44ee:	02 c0       	rjmp	.+4      	; 0x44f4 <fputc+0x4c>
    44f0:	0f ef       	ldi	r16, 0xFF	; 255
    44f2:	1f ef       	ldi	r17, 0xFF	; 255
    44f4:	c8 01       	movw	r24, r16
    44f6:	df 91       	pop	r29
    44f8:	cf 91       	pop	r28
    44fa:	1f 91       	pop	r17
    44fc:	0f 91       	pop	r16
    44fe:	08 95       	ret

00004500 <printf>:
    4500:	df 93       	push	r29
    4502:	cf 93       	push	r28
    4504:	cd b7       	in	r28, 0x3d	; 61
    4506:	de b7       	in	r29, 0x3e	; 62
    4508:	fe 01       	movw	r30, r28
    450a:	35 96       	adiw	r30, 0x05	; 5
    450c:	61 91       	ld	r22, Z+
    450e:	71 91       	ld	r23, Z+
    4510:	80 91 ff 04 	lds	r24, 0x04FF
    4514:	90 91 00 05 	lds	r25, 0x0500
    4518:	af 01       	movw	r20, r30
    451a:	b3 d0       	rcall	.+358    	; 0x4682 <vfprintf>
    451c:	cf 91       	pop	r28
    451e:	df 91       	pop	r29
    4520:	08 95       	ret

00004522 <printf_P>:
    4522:	df 93       	push	r29
    4524:	cf 93       	push	r28
    4526:	cd b7       	in	r28, 0x3d	; 61
    4528:	de b7       	in	r29, 0x3e	; 62
    452a:	fe 01       	movw	r30, r28
    452c:	35 96       	adiw	r30, 0x05	; 5
    452e:	61 91       	ld	r22, Z+
    4530:	71 91       	ld	r23, Z+
    4532:	80 91 ff 04 	lds	r24, 0x04FF
    4536:	90 91 00 05 	lds	r25, 0x0500
    453a:	dc 01       	movw	r26, r24
    453c:	13 96       	adiw	r26, 0x03	; 3
    453e:	2c 91       	ld	r18, X
    4540:	13 97       	sbiw	r26, 0x03	; 3
    4542:	28 60       	ori	r18, 0x08	; 8
    4544:	13 96       	adiw	r26, 0x03	; 3
    4546:	2c 93       	st	X, r18
    4548:	af 01       	movw	r20, r30
    454a:	9b d0       	rcall	.+310    	; 0x4682 <vfprintf>
    454c:	e0 91 ff 04 	lds	r30, 0x04FF
    4550:	f0 91 00 05 	lds	r31, 0x0500
    4554:	23 81       	ldd	r18, Z+3	; 0x03
    4556:	27 7f       	andi	r18, 0xF7	; 247
    4558:	23 83       	std	Z+3, r18	; 0x03
    455a:	cf 91       	pop	r28
    455c:	df 91       	pop	r29
    455e:	08 95       	ret

00004560 <puts>:
    4560:	ef 92       	push	r14
    4562:	ff 92       	push	r15
    4564:	0f 93       	push	r16
    4566:	1f 93       	push	r17
    4568:	cf 93       	push	r28
    456a:	df 93       	push	r29
    456c:	8c 01       	movw	r16, r24
    456e:	e0 91 ff 04 	lds	r30, 0x04FF
    4572:	f0 91 00 05 	lds	r31, 0x0500
    4576:	83 81       	ldd	r24, Z+3	; 0x03
    4578:	81 ff       	sbrs	r24, 1
    457a:	1f c0       	rjmp	.+62     	; 0x45ba <puts+0x5a>
    457c:	c0 e0       	ldi	r28, 0x00	; 0
    457e:	d0 e0       	ldi	r29, 0x00	; 0
    4580:	0a c0       	rjmp	.+20     	; 0x4596 <puts+0x36>
    4582:	db 01       	movw	r26, r22
    4584:	18 96       	adiw	r26, 0x08	; 8
    4586:	ed 91       	ld	r30, X+
    4588:	fc 91       	ld	r31, X
    458a:	19 97       	sbiw	r26, 0x09	; 9
    458c:	09 95       	icall
    458e:	00 97       	sbiw	r24, 0x00	; 0
    4590:	11 f0       	breq	.+4      	; 0x4596 <puts+0x36>
    4592:	cf ef       	ldi	r28, 0xFF	; 255
    4594:	df ef       	ldi	r29, 0xFF	; 255
    4596:	f8 01       	movw	r30, r16
    4598:	81 91       	ld	r24, Z+
    459a:	8f 01       	movw	r16, r30
    459c:	60 91 ff 04 	lds	r22, 0x04FF
    45a0:	70 91 00 05 	lds	r23, 0x0500
    45a4:	88 23       	and	r24, r24
    45a6:	69 f7       	brne	.-38     	; 0x4582 <puts+0x22>
    45a8:	db 01       	movw	r26, r22
    45aa:	18 96       	adiw	r26, 0x08	; 8
    45ac:	ed 91       	ld	r30, X+
    45ae:	fc 91       	ld	r31, X
    45b0:	19 97       	sbiw	r26, 0x09	; 9
    45b2:	8a e0       	ldi	r24, 0x0A	; 10
    45b4:	09 95       	icall
    45b6:	00 97       	sbiw	r24, 0x00	; 0
    45b8:	11 f0       	breq	.+4      	; 0x45be <puts+0x5e>
    45ba:	cf ef       	ldi	r28, 0xFF	; 255
    45bc:	df ef       	ldi	r29, 0xFF	; 255
    45be:	ce 01       	movw	r24, r28
    45c0:	df 91       	pop	r29
    45c2:	cf 91       	pop	r28
    45c4:	1f 91       	pop	r17
    45c6:	0f 91       	pop	r16
    45c8:	ff 90       	pop	r15
    45ca:	ef 90       	pop	r14
    45cc:	08 95       	ret

000045ce <puts_P>:
    45ce:	ef 92       	push	r14
    45d0:	ff 92       	push	r15
    45d2:	0f 93       	push	r16
    45d4:	1f 93       	push	r17
    45d6:	cf 93       	push	r28
    45d8:	df 93       	push	r29
    45da:	8c 01       	movw	r16, r24
    45dc:	e0 91 ff 04 	lds	r30, 0x04FF
    45e0:	f0 91 00 05 	lds	r31, 0x0500
    45e4:	83 81       	ldd	r24, Z+3	; 0x03
    45e6:	81 ff       	sbrs	r24, 1
    45e8:	20 c0       	rjmp	.+64     	; 0x462a <puts_P+0x5c>
    45ea:	c0 e0       	ldi	r28, 0x00	; 0
    45ec:	d0 e0       	ldi	r29, 0x00	; 0
    45ee:	0c c0       	rjmp	.+24     	; 0x4608 <puts_P+0x3a>
    45f0:	db 01       	movw	r26, r22
    45f2:	18 96       	adiw	r26, 0x08	; 8
    45f4:	ed 91       	ld	r30, X+
    45f6:	fc 91       	ld	r31, X
    45f8:	19 97       	sbiw	r26, 0x09	; 9
    45fa:	09 95       	icall
    45fc:	00 97       	sbiw	r24, 0x00	; 0
    45fe:	11 f0       	breq	.+4      	; 0x4604 <puts_P+0x36>
    4600:	cf ef       	ldi	r28, 0xFF	; 255
    4602:	df ef       	ldi	r29, 0xFF	; 255
    4604:	0f 5f       	subi	r16, 0xFF	; 255
    4606:	1f 4f       	sbci	r17, 0xFF	; 255
    4608:	f8 01       	movw	r30, r16
    460a:	84 91       	lpm	r24, Z+
    460c:	60 91 ff 04 	lds	r22, 0x04FF
    4610:	70 91 00 05 	lds	r23, 0x0500
    4614:	88 23       	and	r24, r24
    4616:	61 f7       	brne	.-40     	; 0x45f0 <puts_P+0x22>
    4618:	db 01       	movw	r26, r22
    461a:	18 96       	adiw	r26, 0x08	; 8
    461c:	ed 91       	ld	r30, X+
    461e:	fc 91       	ld	r31, X
    4620:	19 97       	sbiw	r26, 0x09	; 9
    4622:	8a e0       	ldi	r24, 0x0A	; 10
    4624:	09 95       	icall
    4626:	00 97       	sbiw	r24, 0x00	; 0
    4628:	11 f0       	breq	.+4      	; 0x462e <puts_P+0x60>
    462a:	cf ef       	ldi	r28, 0xFF	; 255
    462c:	df ef       	ldi	r29, 0xFF	; 255
    462e:	ce 01       	movw	r24, r28
    4630:	df 91       	pop	r29
    4632:	cf 91       	pop	r28
    4634:	1f 91       	pop	r17
    4636:	0f 91       	pop	r16
    4638:	ff 90       	pop	r15
    463a:	ef 90       	pop	r14
    463c:	08 95       	ret

0000463e <sscanf>:
    463e:	df 93       	push	r29
    4640:	cf 93       	push	r28
    4642:	cd b7       	in	r28, 0x3d	; 61
    4644:	de b7       	in	r29, 0x3e	; 62
    4646:	2e 97       	sbiw	r28, 0x0e	; 14
    4648:	0f b6       	in	r0, 0x3f	; 63
    464a:	f8 94       	cli
    464c:	de bf       	out	0x3e, r29	; 62
    464e:	0f be       	out	0x3f, r0	; 63
    4650:	cd bf       	out	0x3d, r28	; 61
    4652:	85 e0       	ldi	r24, 0x05	; 5
    4654:	8c 83       	std	Y+4, r24	; 0x04
    4656:	8b 89       	ldd	r24, Y+19	; 0x13
    4658:	9c 89       	ldd	r25, Y+20	; 0x14
    465a:	9a 83       	std	Y+2, r25	; 0x02
    465c:	89 83       	std	Y+1, r24	; 0x01
    465e:	9e 01       	movw	r18, r28
    4660:	29 5e       	subi	r18, 0xE9	; 233
    4662:	3f 4f       	sbci	r19, 0xFF	; 255
    4664:	ce 01       	movw	r24, r28
    4666:	01 96       	adiw	r24, 0x01	; 1
    4668:	6d 89       	ldd	r22, Y+21	; 0x15
    466a:	7e 89       	ldd	r23, Y+22	; 0x16
    466c:	a9 01       	movw	r20, r18
    466e:	b6 d3       	rcall	.+1900   	; 0x4ddc <vfscanf>
    4670:	2e 96       	adiw	r28, 0x0e	; 14
    4672:	0f b6       	in	r0, 0x3f	; 63
    4674:	f8 94       	cli
    4676:	de bf       	out	0x3e, r29	; 62
    4678:	0f be       	out	0x3f, r0	; 63
    467a:	cd bf       	out	0x3d, r28	; 61
    467c:	cf 91       	pop	r28
    467e:	df 91       	pop	r29
    4680:	08 95       	ret

00004682 <vfprintf>:
    4682:	2f 92       	push	r2
    4684:	3f 92       	push	r3
    4686:	4f 92       	push	r4
    4688:	5f 92       	push	r5
    468a:	6f 92       	push	r6
    468c:	7f 92       	push	r7
    468e:	8f 92       	push	r8
    4690:	9f 92       	push	r9
    4692:	af 92       	push	r10
    4694:	bf 92       	push	r11
    4696:	cf 92       	push	r12
    4698:	df 92       	push	r13
    469a:	ef 92       	push	r14
    469c:	ff 92       	push	r15
    469e:	0f 93       	push	r16
    46a0:	1f 93       	push	r17
    46a2:	df 93       	push	r29
    46a4:	cf 93       	push	r28
    46a6:	cd b7       	in	r28, 0x3d	; 61
    46a8:	de b7       	in	r29, 0x3e	; 62
    46aa:	2c 97       	sbiw	r28, 0x0c	; 12
    46ac:	0f b6       	in	r0, 0x3f	; 63
    46ae:	f8 94       	cli
    46b0:	de bf       	out	0x3e, r29	; 62
    46b2:	0f be       	out	0x3f, r0	; 63
    46b4:	cd bf       	out	0x3d, r28	; 61
    46b6:	6c 01       	movw	r12, r24
    46b8:	1b 01       	movw	r2, r22
    46ba:	8a 01       	movw	r16, r20
    46bc:	fc 01       	movw	r30, r24
    46be:	17 82       	std	Z+7, r1	; 0x07
    46c0:	16 82       	std	Z+6, r1	; 0x06
    46c2:	83 81       	ldd	r24, Z+3	; 0x03
    46c4:	81 ff       	sbrs	r24, 1
    46c6:	c4 c1       	rjmp	.+904    	; 0x4a50 <vfprintf+0x3ce>
    46c8:	2e 01       	movw	r4, r28
    46ca:	08 94       	sec
    46cc:	41 1c       	adc	r4, r1
    46ce:	51 1c       	adc	r5, r1
    46d0:	f6 01       	movw	r30, r12
    46d2:	93 81       	ldd	r25, Z+3	; 0x03
    46d4:	f1 01       	movw	r30, r2
    46d6:	93 fd       	sbrc	r25, 3
    46d8:	85 91       	lpm	r24, Z+
    46da:	93 ff       	sbrs	r25, 3
    46dc:	81 91       	ld	r24, Z+
    46de:	1f 01       	movw	r2, r30
    46e0:	88 23       	and	r24, r24
    46e2:	09 f4       	brne	.+2      	; 0x46e6 <vfprintf+0x64>
    46e4:	b1 c1       	rjmp	.+866    	; 0x4a48 <vfprintf+0x3c6>
    46e6:	85 32       	cpi	r24, 0x25	; 37
    46e8:	39 f4       	brne	.+14     	; 0x46f8 <vfprintf+0x76>
    46ea:	93 fd       	sbrc	r25, 3
    46ec:	85 91       	lpm	r24, Z+
    46ee:	93 ff       	sbrs	r25, 3
    46f0:	81 91       	ld	r24, Z+
    46f2:	1f 01       	movw	r2, r30
    46f4:	85 32       	cpi	r24, 0x25	; 37
    46f6:	21 f4       	brne	.+8      	; 0x4700 <vfprintf+0x7e>
    46f8:	90 e0       	ldi	r25, 0x00	; 0
    46fa:	b6 01       	movw	r22, r12
    46fc:	d5 de       	rcall	.-598    	; 0x44a8 <fputc>
    46fe:	e8 cf       	rjmp	.-48     	; 0x46d0 <vfprintf+0x4e>
    4700:	ee 24       	eor	r14, r14
    4702:	ff 24       	eor	r15, r15
    4704:	20 e0       	ldi	r18, 0x00	; 0
    4706:	20 32       	cpi	r18, 0x20	; 32
    4708:	b0 f4       	brcc	.+44     	; 0x4736 <vfprintf+0xb4>
    470a:	8b 32       	cpi	r24, 0x2B	; 43
    470c:	69 f0       	breq	.+26     	; 0x4728 <vfprintf+0xa6>
    470e:	8c 32       	cpi	r24, 0x2C	; 44
    4710:	28 f4       	brcc	.+10     	; 0x471c <vfprintf+0x9a>
    4712:	80 32       	cpi	r24, 0x20	; 32
    4714:	51 f0       	breq	.+20     	; 0x472a <vfprintf+0xa8>
    4716:	83 32       	cpi	r24, 0x23	; 35
    4718:	71 f4       	brne	.+28     	; 0x4736 <vfprintf+0xb4>
    471a:	0b c0       	rjmp	.+22     	; 0x4732 <vfprintf+0xb0>
    471c:	8d 32       	cpi	r24, 0x2D	; 45
    471e:	39 f0       	breq	.+14     	; 0x472e <vfprintf+0xac>
    4720:	80 33       	cpi	r24, 0x30	; 48
    4722:	49 f4       	brne	.+18     	; 0x4736 <vfprintf+0xb4>
    4724:	21 60       	ori	r18, 0x01	; 1
    4726:	2c c0       	rjmp	.+88     	; 0x4780 <vfprintf+0xfe>
    4728:	22 60       	ori	r18, 0x02	; 2
    472a:	24 60       	ori	r18, 0x04	; 4
    472c:	29 c0       	rjmp	.+82     	; 0x4780 <vfprintf+0xfe>
    472e:	28 60       	ori	r18, 0x08	; 8
    4730:	27 c0       	rjmp	.+78     	; 0x4780 <vfprintf+0xfe>
    4732:	20 61       	ori	r18, 0x10	; 16
    4734:	25 c0       	rjmp	.+74     	; 0x4780 <vfprintf+0xfe>
    4736:	27 fd       	sbrc	r18, 7
    4738:	2c c0       	rjmp	.+88     	; 0x4792 <vfprintf+0x110>
    473a:	38 2f       	mov	r19, r24
    473c:	30 53       	subi	r19, 0x30	; 48
    473e:	3a 30       	cpi	r19, 0x0A	; 10
    4740:	98 f4       	brcc	.+38     	; 0x4768 <vfprintf+0xe6>
    4742:	26 ff       	sbrs	r18, 6
    4744:	08 c0       	rjmp	.+16     	; 0x4756 <vfprintf+0xd4>
    4746:	8e 2d       	mov	r24, r14
    4748:	88 0f       	add	r24, r24
    474a:	e8 2e       	mov	r14, r24
    474c:	ee 0c       	add	r14, r14
    474e:	ee 0c       	add	r14, r14
    4750:	e8 0e       	add	r14, r24
    4752:	e3 0e       	add	r14, r19
    4754:	15 c0       	rjmp	.+42     	; 0x4780 <vfprintf+0xfe>
    4756:	8f 2d       	mov	r24, r15
    4758:	88 0f       	add	r24, r24
    475a:	f8 2e       	mov	r15, r24
    475c:	ff 0c       	add	r15, r15
    475e:	ff 0c       	add	r15, r15
    4760:	f8 0e       	add	r15, r24
    4762:	f3 0e       	add	r15, r19
    4764:	20 62       	ori	r18, 0x20	; 32
    4766:	0c c0       	rjmp	.+24     	; 0x4780 <vfprintf+0xfe>
    4768:	8e 32       	cpi	r24, 0x2E	; 46
    476a:	21 f4       	brne	.+8      	; 0x4774 <vfprintf+0xf2>
    476c:	26 fd       	sbrc	r18, 6
    476e:	6c c1       	rjmp	.+728    	; 0x4a48 <vfprintf+0x3c6>
    4770:	20 64       	ori	r18, 0x40	; 64
    4772:	06 c0       	rjmp	.+12     	; 0x4780 <vfprintf+0xfe>
    4774:	8c 36       	cpi	r24, 0x6C	; 108
    4776:	11 f4       	brne	.+4      	; 0x477c <vfprintf+0xfa>
    4778:	20 68       	ori	r18, 0x80	; 128
    477a:	02 c0       	rjmp	.+4      	; 0x4780 <vfprintf+0xfe>
    477c:	88 36       	cpi	r24, 0x68	; 104
    477e:	49 f4       	brne	.+18     	; 0x4792 <vfprintf+0x110>
    4780:	f1 01       	movw	r30, r2
    4782:	93 fd       	sbrc	r25, 3
    4784:	85 91       	lpm	r24, Z+
    4786:	93 ff       	sbrs	r25, 3
    4788:	81 91       	ld	r24, Z+
    478a:	1f 01       	movw	r2, r30
    478c:	88 23       	and	r24, r24
    478e:	09 f0       	breq	.+2      	; 0x4792 <vfprintf+0x110>
    4790:	ba cf       	rjmp	.-140    	; 0x4706 <vfprintf+0x84>
    4792:	98 2f       	mov	r25, r24
    4794:	95 54       	subi	r25, 0x45	; 69
    4796:	93 30       	cpi	r25, 0x03	; 3
    4798:	18 f0       	brcs	.+6      	; 0x47a0 <vfprintf+0x11e>
    479a:	90 52       	subi	r25, 0x20	; 32
    479c:	93 30       	cpi	r25, 0x03	; 3
    479e:	28 f4       	brcc	.+10     	; 0x47aa <vfprintf+0x128>
    47a0:	0c 5f       	subi	r16, 0xFC	; 252
    47a2:	1f 4f       	sbci	r17, 0xFF	; 255
    47a4:	ff e3       	ldi	r31, 0x3F	; 63
    47a6:	f9 83       	std	Y+1, r31	; 0x01
    47a8:	0d c0       	rjmp	.+26     	; 0x47c4 <vfprintf+0x142>
    47aa:	83 36       	cpi	r24, 0x63	; 99
    47ac:	31 f0       	breq	.+12     	; 0x47ba <vfprintf+0x138>
    47ae:	83 37       	cpi	r24, 0x73	; 115
    47b0:	71 f0       	breq	.+28     	; 0x47ce <vfprintf+0x14c>
    47b2:	83 35       	cpi	r24, 0x53	; 83
    47b4:	09 f0       	breq	.+2      	; 0x47b8 <vfprintf+0x136>
    47b6:	5c c0       	rjmp	.+184    	; 0x4870 <vfprintf+0x1ee>
    47b8:	21 c0       	rjmp	.+66     	; 0x47fc <vfprintf+0x17a>
    47ba:	f8 01       	movw	r30, r16
    47bc:	80 81       	ld	r24, Z
    47be:	89 83       	std	Y+1, r24	; 0x01
    47c0:	0e 5f       	subi	r16, 0xFE	; 254
    47c2:	1f 4f       	sbci	r17, 0xFF	; 255
    47c4:	42 01       	movw	r8, r4
    47c6:	71 e0       	ldi	r23, 0x01	; 1
    47c8:	a7 2e       	mov	r10, r23
    47ca:	b1 2c       	mov	r11, r1
    47cc:	15 c0       	rjmp	.+42     	; 0x47f8 <vfprintf+0x176>
    47ce:	62 e0       	ldi	r22, 0x02	; 2
    47d0:	66 2e       	mov	r6, r22
    47d2:	71 2c       	mov	r7, r1
    47d4:	60 0e       	add	r6, r16
    47d6:	71 1e       	adc	r7, r17
    47d8:	f8 01       	movw	r30, r16
    47da:	80 80       	ld	r8, Z
    47dc:	91 80       	ldd	r9, Z+1	; 0x01
    47de:	26 ff       	sbrs	r18, 6
    47e0:	03 c0       	rjmp	.+6      	; 0x47e8 <vfprintf+0x166>
    47e2:	6e 2d       	mov	r22, r14
    47e4:	70 e0       	ldi	r23, 0x00	; 0
    47e6:	02 c0       	rjmp	.+4      	; 0x47ec <vfprintf+0x16a>
    47e8:	6f ef       	ldi	r22, 0xFF	; 255
    47ea:	7f ef       	ldi	r23, 0xFF	; 255
    47ec:	c4 01       	movw	r24, r8
    47ee:	2c 87       	std	Y+12, r18	; 0x0c
    47f0:	2c d4       	rcall	.+2136   	; 0x504a <strnlen>
    47f2:	5c 01       	movw	r10, r24
    47f4:	83 01       	movw	r16, r6
    47f6:	2c 85       	ldd	r18, Y+12	; 0x0c
    47f8:	2f 77       	andi	r18, 0x7F	; 127
    47fa:	16 c0       	rjmp	.+44     	; 0x4828 <vfprintf+0x1a6>
    47fc:	52 e0       	ldi	r21, 0x02	; 2
    47fe:	65 2e       	mov	r6, r21
    4800:	71 2c       	mov	r7, r1
    4802:	60 0e       	add	r6, r16
    4804:	71 1e       	adc	r7, r17
    4806:	f8 01       	movw	r30, r16
    4808:	80 80       	ld	r8, Z
    480a:	91 80       	ldd	r9, Z+1	; 0x01
    480c:	26 ff       	sbrs	r18, 6
    480e:	03 c0       	rjmp	.+6      	; 0x4816 <vfprintf+0x194>
    4810:	6e 2d       	mov	r22, r14
    4812:	70 e0       	ldi	r23, 0x00	; 0
    4814:	02 c0       	rjmp	.+4      	; 0x481a <vfprintf+0x198>
    4816:	6f ef       	ldi	r22, 0xFF	; 255
    4818:	7f ef       	ldi	r23, 0xFF	; 255
    481a:	c4 01       	movw	r24, r8
    481c:	2c 87       	std	Y+12, r18	; 0x0c
    481e:	0a d4       	rcall	.+2068   	; 0x5034 <strnlen_P>
    4820:	5c 01       	movw	r10, r24
    4822:	2c 85       	ldd	r18, Y+12	; 0x0c
    4824:	20 68       	ori	r18, 0x80	; 128
    4826:	83 01       	movw	r16, r6
    4828:	23 fd       	sbrc	r18, 3
    482a:	1e c0       	rjmp	.+60     	; 0x4868 <vfprintf+0x1e6>
    482c:	07 c0       	rjmp	.+14     	; 0x483c <vfprintf+0x1ba>
    482e:	80 e2       	ldi	r24, 0x20	; 32
    4830:	90 e0       	ldi	r25, 0x00	; 0
    4832:	b6 01       	movw	r22, r12
    4834:	2c 87       	std	Y+12, r18	; 0x0c
    4836:	38 de       	rcall	.-912    	; 0x44a8 <fputc>
    4838:	fa 94       	dec	r15
    483a:	2c 85       	ldd	r18, Y+12	; 0x0c
    483c:	8f 2d       	mov	r24, r15
    483e:	90 e0       	ldi	r25, 0x00	; 0
    4840:	a8 16       	cp	r10, r24
    4842:	b9 06       	cpc	r11, r25
    4844:	a0 f3       	brcs	.-24     	; 0x482e <vfprintf+0x1ac>
    4846:	10 c0       	rjmp	.+32     	; 0x4868 <vfprintf+0x1e6>
    4848:	f4 01       	movw	r30, r8
    484a:	27 fd       	sbrc	r18, 7
    484c:	85 91       	lpm	r24, Z+
    484e:	27 ff       	sbrs	r18, 7
    4850:	81 91       	ld	r24, Z+
    4852:	4f 01       	movw	r8, r30
    4854:	90 e0       	ldi	r25, 0x00	; 0
    4856:	b6 01       	movw	r22, r12
    4858:	2c 87       	std	Y+12, r18	; 0x0c
    485a:	26 de       	rcall	.-948    	; 0x44a8 <fputc>
    485c:	2c 85       	ldd	r18, Y+12	; 0x0c
    485e:	f1 10       	cpse	r15, r1
    4860:	fa 94       	dec	r15
    4862:	08 94       	sec
    4864:	a1 08       	sbc	r10, r1
    4866:	b1 08       	sbc	r11, r1
    4868:	a1 14       	cp	r10, r1
    486a:	b1 04       	cpc	r11, r1
    486c:	69 f7       	brne	.-38     	; 0x4848 <vfprintf+0x1c6>
    486e:	e9 c0       	rjmp	.+466    	; 0x4a42 <vfprintf+0x3c0>
    4870:	84 36       	cpi	r24, 0x64	; 100
    4872:	11 f0       	breq	.+4      	; 0x4878 <vfprintf+0x1f6>
    4874:	89 36       	cpi	r24, 0x69	; 105
    4876:	41 f5       	brne	.+80     	; 0x48c8 <vfprintf+0x246>
    4878:	27 ff       	sbrs	r18, 7
    487a:	08 c0       	rjmp	.+16     	; 0x488c <vfprintf+0x20a>
    487c:	f8 01       	movw	r30, r16
    487e:	60 81       	ld	r22, Z
    4880:	71 81       	ldd	r23, Z+1	; 0x01
    4882:	82 81       	ldd	r24, Z+2	; 0x02
    4884:	93 81       	ldd	r25, Z+3	; 0x03
    4886:	0c 5f       	subi	r16, 0xFC	; 252
    4888:	1f 4f       	sbci	r17, 0xFF	; 255
    488a:	09 c0       	rjmp	.+18     	; 0x489e <vfprintf+0x21c>
    488c:	f8 01       	movw	r30, r16
    488e:	60 81       	ld	r22, Z
    4890:	71 81       	ldd	r23, Z+1	; 0x01
    4892:	88 27       	eor	r24, r24
    4894:	77 fd       	sbrc	r23, 7
    4896:	80 95       	com	r24
    4898:	98 2f       	mov	r25, r24
    489a:	0e 5f       	subi	r16, 0xFE	; 254
    489c:	1f 4f       	sbci	r17, 0xFF	; 255
    489e:	4f e6       	ldi	r20, 0x6F	; 111
    48a0:	b4 2e       	mov	r11, r20
    48a2:	b2 22       	and	r11, r18
    48a4:	97 ff       	sbrs	r25, 7
    48a6:	09 c0       	rjmp	.+18     	; 0x48ba <vfprintf+0x238>
    48a8:	90 95       	com	r25
    48aa:	80 95       	com	r24
    48ac:	70 95       	com	r23
    48ae:	61 95       	neg	r22
    48b0:	7f 4f       	sbci	r23, 0xFF	; 255
    48b2:	8f 4f       	sbci	r24, 0xFF	; 255
    48b4:	9f 4f       	sbci	r25, 0xFF	; 255
    48b6:	f0 e8       	ldi	r31, 0x80	; 128
    48b8:	bf 2a       	or	r11, r31
    48ba:	a2 01       	movw	r20, r4
    48bc:	2a e0       	ldi	r18, 0x0A	; 10
    48be:	30 e0       	ldi	r19, 0x00	; 0
    48c0:	2c d4       	rcall	.+2136   	; 0x511a <__ultoa_invert>
    48c2:	78 2e       	mov	r7, r24
    48c4:	74 18       	sub	r7, r4
    48c6:	44 c0       	rjmp	.+136    	; 0x4950 <vfprintf+0x2ce>
    48c8:	85 37       	cpi	r24, 0x75	; 117
    48ca:	31 f4       	brne	.+12     	; 0x48d8 <vfprintf+0x256>
    48cc:	3f ee       	ldi	r19, 0xEF	; 239
    48ce:	b3 2e       	mov	r11, r19
    48d0:	b2 22       	and	r11, r18
    48d2:	2a e0       	ldi	r18, 0x0A	; 10
    48d4:	30 e0       	ldi	r19, 0x00	; 0
    48d6:	25 c0       	rjmp	.+74     	; 0x4922 <vfprintf+0x2a0>
    48d8:	99 ef       	ldi	r25, 0xF9	; 249
    48da:	b9 2e       	mov	r11, r25
    48dc:	b2 22       	and	r11, r18
    48de:	8f 36       	cpi	r24, 0x6F	; 111
    48e0:	c1 f0       	breq	.+48     	; 0x4912 <vfprintf+0x290>
    48e2:	80 37       	cpi	r24, 0x70	; 112
    48e4:	20 f4       	brcc	.+8      	; 0x48ee <vfprintf+0x26c>
    48e6:	88 35       	cpi	r24, 0x58	; 88
    48e8:	09 f0       	breq	.+2      	; 0x48ec <vfprintf+0x26a>
    48ea:	ae c0       	rjmp	.+348    	; 0x4a48 <vfprintf+0x3c6>
    48ec:	0d c0       	rjmp	.+26     	; 0x4908 <vfprintf+0x286>
    48ee:	80 37       	cpi	r24, 0x70	; 112
    48f0:	21 f0       	breq	.+8      	; 0x48fa <vfprintf+0x278>
    48f2:	88 37       	cpi	r24, 0x78	; 120
    48f4:	09 f0       	breq	.+2      	; 0x48f8 <vfprintf+0x276>
    48f6:	a8 c0       	rjmp	.+336    	; 0x4a48 <vfprintf+0x3c6>
    48f8:	02 c0       	rjmp	.+4      	; 0x48fe <vfprintf+0x27c>
    48fa:	20 e1       	ldi	r18, 0x10	; 16
    48fc:	b2 2a       	or	r11, r18
    48fe:	b4 fe       	sbrs	r11, 4
    4900:	0b c0       	rjmp	.+22     	; 0x4918 <vfprintf+0x296>
    4902:	84 e0       	ldi	r24, 0x04	; 4
    4904:	b8 2a       	or	r11, r24
    4906:	08 c0       	rjmp	.+16     	; 0x4918 <vfprintf+0x296>
    4908:	b4 fe       	sbrs	r11, 4
    490a:	09 c0       	rjmp	.+18     	; 0x491e <vfprintf+0x29c>
    490c:	e6 e0       	ldi	r30, 0x06	; 6
    490e:	be 2a       	or	r11, r30
    4910:	06 c0       	rjmp	.+12     	; 0x491e <vfprintf+0x29c>
    4912:	28 e0       	ldi	r18, 0x08	; 8
    4914:	30 e0       	ldi	r19, 0x00	; 0
    4916:	05 c0       	rjmp	.+10     	; 0x4922 <vfprintf+0x2a0>
    4918:	20 e1       	ldi	r18, 0x10	; 16
    491a:	30 e0       	ldi	r19, 0x00	; 0
    491c:	02 c0       	rjmp	.+4      	; 0x4922 <vfprintf+0x2a0>
    491e:	20 e1       	ldi	r18, 0x10	; 16
    4920:	32 e0       	ldi	r19, 0x02	; 2
    4922:	b7 fe       	sbrs	r11, 7
    4924:	08 c0       	rjmp	.+16     	; 0x4936 <vfprintf+0x2b4>
    4926:	f8 01       	movw	r30, r16
    4928:	60 81       	ld	r22, Z
    492a:	71 81       	ldd	r23, Z+1	; 0x01
    492c:	82 81       	ldd	r24, Z+2	; 0x02
    492e:	93 81       	ldd	r25, Z+3	; 0x03
    4930:	0c 5f       	subi	r16, 0xFC	; 252
    4932:	1f 4f       	sbci	r17, 0xFF	; 255
    4934:	07 c0       	rjmp	.+14     	; 0x4944 <vfprintf+0x2c2>
    4936:	f8 01       	movw	r30, r16
    4938:	60 81       	ld	r22, Z
    493a:	71 81       	ldd	r23, Z+1	; 0x01
    493c:	80 e0       	ldi	r24, 0x00	; 0
    493e:	90 e0       	ldi	r25, 0x00	; 0
    4940:	0e 5f       	subi	r16, 0xFE	; 254
    4942:	1f 4f       	sbci	r17, 0xFF	; 255
    4944:	a2 01       	movw	r20, r4
    4946:	e9 d3       	rcall	.+2002   	; 0x511a <__ultoa_invert>
    4948:	78 2e       	mov	r7, r24
    494a:	74 18       	sub	r7, r4
    494c:	ff e7       	ldi	r31, 0x7F	; 127
    494e:	bf 22       	and	r11, r31
    4950:	b6 fe       	sbrs	r11, 6
    4952:	0b c0       	rjmp	.+22     	; 0x496a <vfprintf+0x2e8>
    4954:	2e ef       	ldi	r18, 0xFE	; 254
    4956:	b2 22       	and	r11, r18
    4958:	7e 14       	cp	r7, r14
    495a:	38 f4       	brcc	.+14     	; 0x496a <vfprintf+0x2e8>
    495c:	b4 fe       	sbrs	r11, 4
    495e:	07 c0       	rjmp	.+14     	; 0x496e <vfprintf+0x2ec>
    4960:	b2 fc       	sbrc	r11, 2
    4962:	05 c0       	rjmp	.+10     	; 0x496e <vfprintf+0x2ec>
    4964:	8f ee       	ldi	r24, 0xEF	; 239
    4966:	b8 22       	and	r11, r24
    4968:	02 c0       	rjmp	.+4      	; 0x496e <vfprintf+0x2ec>
    496a:	a7 2c       	mov	r10, r7
    496c:	01 c0       	rjmp	.+2      	; 0x4970 <vfprintf+0x2ee>
    496e:	ae 2c       	mov	r10, r14
    4970:	8b 2d       	mov	r24, r11
    4972:	90 e0       	ldi	r25, 0x00	; 0
    4974:	b4 fe       	sbrs	r11, 4
    4976:	0d c0       	rjmp	.+26     	; 0x4992 <vfprintf+0x310>
    4978:	fe 01       	movw	r30, r28
    497a:	e7 0d       	add	r30, r7
    497c:	f1 1d       	adc	r31, r1
    497e:	20 81       	ld	r18, Z
    4980:	20 33       	cpi	r18, 0x30	; 48
    4982:	19 f4       	brne	.+6      	; 0x498a <vfprintf+0x308>
    4984:	e9 ee       	ldi	r30, 0xE9	; 233
    4986:	be 22       	and	r11, r30
    4988:	09 c0       	rjmp	.+18     	; 0x499c <vfprintf+0x31a>
    498a:	a3 94       	inc	r10
    498c:	b2 fe       	sbrs	r11, 2
    498e:	06 c0       	rjmp	.+12     	; 0x499c <vfprintf+0x31a>
    4990:	04 c0       	rjmp	.+8      	; 0x499a <vfprintf+0x318>
    4992:	86 78       	andi	r24, 0x86	; 134
    4994:	90 70       	andi	r25, 0x00	; 0
    4996:	00 97       	sbiw	r24, 0x00	; 0
    4998:	09 f0       	breq	.+2      	; 0x499c <vfprintf+0x31a>
    499a:	a3 94       	inc	r10
    499c:	8b 2c       	mov	r8, r11
    499e:	99 24       	eor	r9, r9
    49a0:	b3 fc       	sbrc	r11, 3
    49a2:	13 c0       	rjmp	.+38     	; 0x49ca <vfprintf+0x348>
    49a4:	b0 fe       	sbrs	r11, 0
    49a6:	0e c0       	rjmp	.+28     	; 0x49c4 <vfprintf+0x342>
    49a8:	af 14       	cp	r10, r15
    49aa:	28 f4       	brcc	.+10     	; 0x49b6 <vfprintf+0x334>
    49ac:	e7 2c       	mov	r14, r7
    49ae:	ef 0c       	add	r14, r15
    49b0:	ea 18       	sub	r14, r10
    49b2:	af 2c       	mov	r10, r15
    49b4:	07 c0       	rjmp	.+14     	; 0x49c4 <vfprintf+0x342>
    49b6:	e7 2c       	mov	r14, r7
    49b8:	05 c0       	rjmp	.+10     	; 0x49c4 <vfprintf+0x342>
    49ba:	80 e2       	ldi	r24, 0x20	; 32
    49bc:	90 e0       	ldi	r25, 0x00	; 0
    49be:	b6 01       	movw	r22, r12
    49c0:	73 dd       	rcall	.-1306   	; 0x44a8 <fputc>
    49c2:	a3 94       	inc	r10
    49c4:	af 14       	cp	r10, r15
    49c6:	c8 f3       	brcs	.-14     	; 0x49ba <vfprintf+0x338>
    49c8:	04 c0       	rjmp	.+8      	; 0x49d2 <vfprintf+0x350>
    49ca:	af 14       	cp	r10, r15
    49cc:	10 f4       	brcc	.+4      	; 0x49d2 <vfprintf+0x350>
    49ce:	fa 18       	sub	r15, r10
    49d0:	01 c0       	rjmp	.+2      	; 0x49d4 <vfprintf+0x352>
    49d2:	ff 24       	eor	r15, r15
    49d4:	84 fe       	sbrs	r8, 4
    49d6:	0e c0       	rjmp	.+28     	; 0x49f4 <vfprintf+0x372>
    49d8:	80 e3       	ldi	r24, 0x30	; 48
    49da:	90 e0       	ldi	r25, 0x00	; 0
    49dc:	b6 01       	movw	r22, r12
    49de:	64 dd       	rcall	.-1336   	; 0x44a8 <fputc>
    49e0:	82 fe       	sbrs	r8, 2
    49e2:	1d c0       	rjmp	.+58     	; 0x4a1e <vfprintf+0x39c>
    49e4:	81 fe       	sbrs	r8, 1
    49e6:	03 c0       	rjmp	.+6      	; 0x49ee <vfprintf+0x36c>
    49e8:	88 e5       	ldi	r24, 0x58	; 88
    49ea:	90 e0       	ldi	r25, 0x00	; 0
    49ec:	10 c0       	rjmp	.+32     	; 0x4a0e <vfprintf+0x38c>
    49ee:	88 e7       	ldi	r24, 0x78	; 120
    49f0:	90 e0       	ldi	r25, 0x00	; 0
    49f2:	0d c0       	rjmp	.+26     	; 0x4a0e <vfprintf+0x38c>
    49f4:	c4 01       	movw	r24, r8
    49f6:	86 78       	andi	r24, 0x86	; 134
    49f8:	90 70       	andi	r25, 0x00	; 0
    49fa:	00 97       	sbiw	r24, 0x00	; 0
    49fc:	81 f0       	breq	.+32     	; 0x4a1e <vfprintf+0x39c>
    49fe:	81 fc       	sbrc	r8, 1
    4a00:	02 c0       	rjmp	.+4      	; 0x4a06 <vfprintf+0x384>
    4a02:	80 e2       	ldi	r24, 0x20	; 32
    4a04:	01 c0       	rjmp	.+2      	; 0x4a08 <vfprintf+0x386>
    4a06:	8b e2       	ldi	r24, 0x2B	; 43
    4a08:	b7 fc       	sbrc	r11, 7
    4a0a:	8d e2       	ldi	r24, 0x2D	; 45
    4a0c:	90 e0       	ldi	r25, 0x00	; 0
    4a0e:	b6 01       	movw	r22, r12
    4a10:	4b dd       	rcall	.-1386   	; 0x44a8 <fputc>
    4a12:	05 c0       	rjmp	.+10     	; 0x4a1e <vfprintf+0x39c>
    4a14:	80 e3       	ldi	r24, 0x30	; 48
    4a16:	90 e0       	ldi	r25, 0x00	; 0
    4a18:	b6 01       	movw	r22, r12
    4a1a:	46 dd       	rcall	.-1396   	; 0x44a8 <fputc>
    4a1c:	ea 94       	dec	r14
    4a1e:	7e 14       	cp	r7, r14
    4a20:	c8 f3       	brcs	.-14     	; 0x4a14 <vfprintf+0x392>
    4a22:	7a 94       	dec	r7
    4a24:	f2 01       	movw	r30, r4
    4a26:	e7 0d       	add	r30, r7
    4a28:	f1 1d       	adc	r31, r1
    4a2a:	80 81       	ld	r24, Z
    4a2c:	90 e0       	ldi	r25, 0x00	; 0
    4a2e:	b6 01       	movw	r22, r12
    4a30:	3b dd       	rcall	.-1418   	; 0x44a8 <fputc>
    4a32:	77 20       	and	r7, r7
    4a34:	b1 f7       	brne	.-20     	; 0x4a22 <vfprintf+0x3a0>
    4a36:	05 c0       	rjmp	.+10     	; 0x4a42 <vfprintf+0x3c0>
    4a38:	80 e2       	ldi	r24, 0x20	; 32
    4a3a:	90 e0       	ldi	r25, 0x00	; 0
    4a3c:	b6 01       	movw	r22, r12
    4a3e:	34 dd       	rcall	.-1432   	; 0x44a8 <fputc>
    4a40:	fa 94       	dec	r15
    4a42:	ff 20       	and	r15, r15
    4a44:	c9 f7       	brne	.-14     	; 0x4a38 <vfprintf+0x3b6>
    4a46:	44 ce       	rjmp	.-888    	; 0x46d0 <vfprintf+0x4e>
    4a48:	f6 01       	movw	r30, r12
    4a4a:	26 81       	ldd	r18, Z+6	; 0x06
    4a4c:	37 81       	ldd	r19, Z+7	; 0x07
    4a4e:	02 c0       	rjmp	.+4      	; 0x4a54 <vfprintf+0x3d2>
    4a50:	2f ef       	ldi	r18, 0xFF	; 255
    4a52:	3f ef       	ldi	r19, 0xFF	; 255
    4a54:	c9 01       	movw	r24, r18
    4a56:	2c 96       	adiw	r28, 0x0c	; 12
    4a58:	0f b6       	in	r0, 0x3f	; 63
    4a5a:	f8 94       	cli
    4a5c:	de bf       	out	0x3e, r29	; 62
    4a5e:	0f be       	out	0x3f, r0	; 63
    4a60:	cd bf       	out	0x3d, r28	; 61
    4a62:	cf 91       	pop	r28
    4a64:	df 91       	pop	r29
    4a66:	1f 91       	pop	r17
    4a68:	0f 91       	pop	r16
    4a6a:	ff 90       	pop	r15
    4a6c:	ef 90       	pop	r14
    4a6e:	df 90       	pop	r13
    4a70:	cf 90       	pop	r12
    4a72:	bf 90       	pop	r11
    4a74:	af 90       	pop	r10
    4a76:	9f 90       	pop	r9
    4a78:	8f 90       	pop	r8
    4a7a:	7f 90       	pop	r7
    4a7c:	6f 90       	pop	r6
    4a7e:	5f 90       	pop	r5
    4a80:	4f 90       	pop	r4
    4a82:	3f 90       	pop	r3
    4a84:	2f 90       	pop	r2
    4a86:	08 95       	ret

00004a88 <putval>:
    4a88:	20 fd       	sbrc	r18, 0
    4a8a:	09 c0       	rjmp	.+18     	; 0x4a9e <putval+0x16>
    4a8c:	fc 01       	movw	r30, r24
    4a8e:	23 fd       	sbrc	r18, 3
    4a90:	05 c0       	rjmp	.+10     	; 0x4a9c <putval+0x14>
    4a92:	22 ff       	sbrs	r18, 2
    4a94:	02 c0       	rjmp	.+4      	; 0x4a9a <putval+0x12>
    4a96:	73 83       	std	Z+3, r23	; 0x03
    4a98:	62 83       	std	Z+2, r22	; 0x02
    4a9a:	51 83       	std	Z+1, r21	; 0x01
    4a9c:	40 83       	st	Z, r20
    4a9e:	08 95       	ret

00004aa0 <mulacc>:
    4aa0:	ef 92       	push	r14
    4aa2:	ff 92       	push	r15
    4aa4:	0f 93       	push	r16
    4aa6:	1f 93       	push	r17
    4aa8:	44 fd       	sbrc	r20, 4
    4aaa:	10 c0       	rjmp	.+32     	; 0x4acc <mulacc+0x2c>
    4aac:	46 fd       	sbrc	r20, 6
    4aae:	10 c0       	rjmp	.+32     	; 0x4ad0 <mulacc+0x30>
    4ab0:	db 01       	movw	r26, r22
    4ab2:	fc 01       	movw	r30, r24
    4ab4:	aa 0f       	add	r26, r26
    4ab6:	bb 1f       	adc	r27, r27
    4ab8:	ee 1f       	adc	r30, r30
    4aba:	ff 1f       	adc	r31, r31
    4abc:	10 94       	com	r1
    4abe:	d1 f7       	brne	.-12     	; 0x4ab4 <mulacc+0x14>
    4ac0:	6a 0f       	add	r22, r26
    4ac2:	7b 1f       	adc	r23, r27
    4ac4:	8e 1f       	adc	r24, r30
    4ac6:	9f 1f       	adc	r25, r31
    4ac8:	31 e0       	ldi	r19, 0x01	; 1
    4aca:	03 c0       	rjmp	.+6      	; 0x4ad2 <mulacc+0x32>
    4acc:	33 e0       	ldi	r19, 0x03	; 3
    4ace:	01 c0       	rjmp	.+2      	; 0x4ad2 <mulacc+0x32>
    4ad0:	34 e0       	ldi	r19, 0x04	; 4
    4ad2:	66 0f       	add	r22, r22
    4ad4:	77 1f       	adc	r23, r23
    4ad6:	88 1f       	adc	r24, r24
    4ad8:	99 1f       	adc	r25, r25
    4ada:	31 50       	subi	r19, 0x01	; 1
    4adc:	d1 f7       	brne	.-12     	; 0x4ad2 <mulacc+0x32>
    4ade:	7b 01       	movw	r14, r22
    4ae0:	8c 01       	movw	r16, r24
    4ae2:	e2 0e       	add	r14, r18
    4ae4:	f1 1c       	adc	r15, r1
    4ae6:	01 1d       	adc	r16, r1
    4ae8:	11 1d       	adc	r17, r1
    4aea:	a8 01       	movw	r20, r16
    4aec:	97 01       	movw	r18, r14
    4aee:	b7 01       	movw	r22, r14
    4af0:	ca 01       	movw	r24, r20
    4af2:	1f 91       	pop	r17
    4af4:	0f 91       	pop	r16
    4af6:	ff 90       	pop	r15
    4af8:	ef 90       	pop	r14
    4afa:	08 95       	ret

00004afc <skip_spaces>:
    4afc:	ef 92       	push	r14
    4afe:	ff 92       	push	r15
    4b00:	0f 93       	push	r16
    4b02:	1f 93       	push	r17
    4b04:	cf 93       	push	r28
    4b06:	df 93       	push	r29
    4b08:	8c 01       	movw	r16, r24
    4b0a:	c8 01       	movw	r24, r16
    4b0c:	a9 d2       	rcall	.+1362   	; 0x5060 <fgetc>
    4b0e:	ec 01       	movw	r28, r24
    4b10:	97 fd       	sbrc	r25, 7
    4b12:	06 c0       	rjmp	.+12     	; 0x4b20 <skip_spaces+0x24>
    4b14:	7c d2       	rcall	.+1272   	; 0x500e <isspace>
    4b16:	00 97       	sbiw	r24, 0x00	; 0
    4b18:	c1 f7       	brne	.-16     	; 0x4b0a <skip_spaces+0xe>
    4b1a:	ce 01       	movw	r24, r28
    4b1c:	b8 01       	movw	r22, r16
    4b1e:	e2 d2       	rcall	.+1476   	; 0x50e4 <ungetc>
    4b20:	ce 01       	movw	r24, r28
    4b22:	df 91       	pop	r29
    4b24:	cf 91       	pop	r28
    4b26:	1f 91       	pop	r17
    4b28:	0f 91       	pop	r16
    4b2a:	ff 90       	pop	r15
    4b2c:	ef 90       	pop	r14
    4b2e:	08 95       	ret

00004b30 <conv_int>:
    4b30:	8f 92       	push	r8
    4b32:	9f 92       	push	r9
    4b34:	af 92       	push	r10
    4b36:	bf 92       	push	r11
    4b38:	df 92       	push	r13
    4b3a:	ef 92       	push	r14
    4b3c:	ff 92       	push	r15
    4b3e:	0f 93       	push	r16
    4b40:	1f 93       	push	r17
    4b42:	df 93       	push	r29
    4b44:	cf 93       	push	r28
    4b46:	0f 92       	push	r0
    4b48:	cd b7       	in	r28, 0x3d	; 61
    4b4a:	de b7       	in	r29, 0x3e	; 62
    4b4c:	4c 01       	movw	r8, r24
    4b4e:	d6 2e       	mov	r13, r22
    4b50:	5a 01       	movw	r10, r20
    4b52:	12 2f       	mov	r17, r18
    4b54:	85 d2       	rcall	.+1290   	; 0x5060 <fgetc>
    4b56:	8b 32       	cpi	r24, 0x2B	; 43
    4b58:	19 f0       	breq	.+6      	; 0x4b60 <conv_int+0x30>
    4b5a:	8d 32       	cpi	r24, 0x2D	; 45
    4b5c:	41 f4       	brne	.+16     	; 0x4b6e <conv_int+0x3e>
    4b5e:	10 68       	ori	r17, 0x80	; 128
    4b60:	da 94       	dec	r13
    4b62:	09 f4       	brne	.+2      	; 0x4b66 <conv_int+0x36>
    4b64:	65 c0       	rjmp	.+202    	; 0x4c30 <conv_int+0x100>
    4b66:	c4 01       	movw	r24, r8
    4b68:	7b d2       	rcall	.+1270   	; 0x5060 <fgetc>
    4b6a:	97 fd       	sbrc	r25, 7
    4b6c:	61 c0       	rjmp	.+194    	; 0x4c30 <conv_int+0x100>
    4b6e:	31 2f       	mov	r19, r17
    4b70:	3d 7f       	andi	r19, 0xFD	; 253
    4b72:	23 2f       	mov	r18, r19
    4b74:	20 73       	andi	r18, 0x30	; 48
    4b76:	e1 f4       	brne	.+56     	; 0x4bb0 <conv_int+0x80>
    4b78:	80 33       	cpi	r24, 0x30	; 48
    4b7a:	d1 f4       	brne	.+52     	; 0x4bb0 <conv_int+0x80>
    4b7c:	da 94       	dec	r13
    4b7e:	09 f4       	brne	.+2      	; 0x4b82 <conv_int+0x52>
    4b80:	43 c0       	rjmp	.+134    	; 0x4c08 <conv_int+0xd8>
    4b82:	c4 01       	movw	r24, r8
    4b84:	39 83       	std	Y+1, r19	; 0x01
    4b86:	6c d2       	rcall	.+1240   	; 0x5060 <fgetc>
    4b88:	39 81       	ldd	r19, Y+1	; 0x01
    4b8a:	97 fd       	sbrc	r25, 7
    4b8c:	3d c0       	rjmp	.+122    	; 0x4c08 <conv_int+0xd8>
    4b8e:	32 60       	ori	r19, 0x02	; 2
    4b90:	88 37       	cpi	r24, 0x78	; 120
    4b92:	11 f0       	breq	.+4      	; 0x4b98 <conv_int+0x68>
    4b94:	88 35       	cpi	r24, 0x58	; 88
    4b96:	51 f4       	brne	.+20     	; 0x4bac <conv_int+0x7c>
    4b98:	30 64       	ori	r19, 0x40	; 64
    4b9a:	da 94       	dec	r13
    4b9c:	a9 f1       	breq	.+106    	; 0x4c08 <conv_int+0xd8>
    4b9e:	c4 01       	movw	r24, r8
    4ba0:	39 83       	std	Y+1, r19	; 0x01
    4ba2:	5e d2       	rcall	.+1212   	; 0x5060 <fgetc>
    4ba4:	39 81       	ldd	r19, Y+1	; 0x01
    4ba6:	97 ff       	sbrs	r25, 7
    4ba8:	03 c0       	rjmp	.+6      	; 0x4bb0 <conv_int+0x80>
    4baa:	2e c0       	rjmp	.+92     	; 0x4c08 <conv_int+0xd8>
    4bac:	36 ff       	sbrs	r19, 6
    4bae:	30 61       	ori	r19, 0x10	; 16
    4bb0:	ee 24       	eor	r14, r14
    4bb2:	ff 24       	eor	r15, r15
    4bb4:	87 01       	movw	r16, r14
    4bb6:	28 2f       	mov	r18, r24
    4bb8:	20 53       	subi	r18, 0x30	; 48
    4bba:	28 30       	cpi	r18, 0x08	; 8
    4bbc:	88 f0       	brcs	.+34     	; 0x4be0 <conv_int+0xb0>
    4bbe:	34 fd       	sbrc	r19, 4
    4bc0:	09 c0       	rjmp	.+18     	; 0x4bd4 <conv_int+0xa4>
    4bc2:	2a 30       	cpi	r18, 0x0A	; 10
    4bc4:	68 f0       	brcs	.+26     	; 0x4be0 <conv_int+0xb0>
    4bc6:	36 ff       	sbrs	r19, 6
    4bc8:	05 c0       	rjmp	.+10     	; 0x4bd4 <conv_int+0xa4>
    4bca:	2f 7d       	andi	r18, 0xDF	; 223
    4bcc:	42 2f       	mov	r20, r18
    4bce:	41 51       	subi	r20, 0x11	; 17
    4bd0:	46 30       	cpi	r20, 0x06	; 6
    4bd2:	28 f0       	brcs	.+10     	; 0x4bde <conv_int+0xae>
    4bd4:	b4 01       	movw	r22, r8
    4bd6:	39 83       	std	Y+1, r19	; 0x01
    4bd8:	85 d2       	rcall	.+1290   	; 0x50e4 <ungetc>
    4bda:	39 81       	ldd	r19, Y+1	; 0x01
    4bdc:	12 c0       	rjmp	.+36     	; 0x4c02 <conv_int+0xd2>
    4bde:	27 50       	subi	r18, 0x07	; 7
    4be0:	c8 01       	movw	r24, r16
    4be2:	b7 01       	movw	r22, r14
    4be4:	43 2f       	mov	r20, r19
    4be6:	39 83       	std	Y+1, r19	; 0x01
    4be8:	5b df       	rcall	.-330    	; 0x4aa0 <mulacc>
    4bea:	7b 01       	movw	r14, r22
    4bec:	8c 01       	movw	r16, r24
    4bee:	39 81       	ldd	r19, Y+1	; 0x01
    4bf0:	32 60       	ori	r19, 0x02	; 2
    4bf2:	da 94       	dec	r13
    4bf4:	61 f0       	breq	.+24     	; 0x4c0e <conv_int+0xde>
    4bf6:	c4 01       	movw	r24, r8
    4bf8:	39 83       	std	Y+1, r19	; 0x01
    4bfa:	32 d2       	rcall	.+1124   	; 0x5060 <fgetc>
    4bfc:	39 81       	ldd	r19, Y+1	; 0x01
    4bfe:	97 ff       	sbrs	r25, 7
    4c00:	da cf       	rjmp	.-76     	; 0x4bb6 <conv_int+0x86>
    4c02:	31 fd       	sbrc	r19, 1
    4c04:	04 c0       	rjmp	.+8      	; 0x4c0e <conv_int+0xde>
    4c06:	14 c0       	rjmp	.+40     	; 0x4c30 <conv_int+0x100>
    4c08:	ee 24       	eor	r14, r14
    4c0a:	ff 24       	eor	r15, r15
    4c0c:	87 01       	movw	r16, r14
    4c0e:	37 ff       	sbrs	r19, 7
    4c10:	08 c0       	rjmp	.+16     	; 0x4c22 <conv_int+0xf2>
    4c12:	10 95       	com	r17
    4c14:	00 95       	com	r16
    4c16:	f0 94       	com	r15
    4c18:	e0 94       	com	r14
    4c1a:	e1 1c       	adc	r14, r1
    4c1c:	f1 1c       	adc	r15, r1
    4c1e:	01 1d       	adc	r16, r1
    4c20:	11 1d       	adc	r17, r1
    4c22:	c5 01       	movw	r24, r10
    4c24:	b8 01       	movw	r22, r16
    4c26:	a7 01       	movw	r20, r14
    4c28:	23 2f       	mov	r18, r19
    4c2a:	2e df       	rcall	.-420    	; 0x4a88 <putval>
    4c2c:	81 e0       	ldi	r24, 0x01	; 1
    4c2e:	01 c0       	rjmp	.+2      	; 0x4c32 <conv_int+0x102>
    4c30:	80 e0       	ldi	r24, 0x00	; 0
    4c32:	0f 90       	pop	r0
    4c34:	cf 91       	pop	r28
    4c36:	df 91       	pop	r29
    4c38:	1f 91       	pop	r17
    4c3a:	0f 91       	pop	r16
    4c3c:	ff 90       	pop	r15
    4c3e:	ef 90       	pop	r14
    4c40:	df 90       	pop	r13
    4c42:	bf 90       	pop	r11
    4c44:	af 90       	pop	r10
    4c46:	9f 90       	pop	r9
    4c48:	8f 90       	pop	r8
    4c4a:	08 95       	ret

00004c4c <conv_brk>:
    4c4c:	6f 92       	push	r6
    4c4e:	7f 92       	push	r7
    4c50:	8f 92       	push	r8
    4c52:	9f 92       	push	r9
    4c54:	af 92       	push	r10
    4c56:	bf 92       	push	r11
    4c58:	cf 92       	push	r12
    4c5a:	df 92       	push	r13
    4c5c:	ef 92       	push	r14
    4c5e:	ff 92       	push	r15
    4c60:	0f 93       	push	r16
    4c62:	1f 93       	push	r17
    4c64:	df 93       	push	r29
    4c66:	cf 93       	push	r28
    4c68:	cd b7       	in	r28, 0x3d	; 61
    4c6a:	de b7       	in	r29, 0x3e	; 62
    4c6c:	a1 97       	sbiw	r28, 0x21	; 33
    4c6e:	0f b6       	in	r0, 0x3f	; 63
    4c70:	f8 94       	cli
    4c72:	de bf       	out	0x3e, r29	; 62
    4c74:	0f be       	out	0x3f, r0	; 63
    4c76:	cd bf       	out	0x3d, r28	; 61
    4c78:	6c 01       	movw	r12, r24
    4c7a:	8a 01       	movw	r16, r20
    4c7c:	79 01       	movw	r14, r18
    4c7e:	9e 01       	movw	r18, r28
    4c80:	2f 5f       	subi	r18, 0xFF	; 255
    4c82:	3f 4f       	sbci	r19, 0xFF	; 255
    4c84:	80 e2       	ldi	r24, 0x20	; 32
    4c86:	f9 01       	movw	r30, r18
    4c88:	11 92       	st	Z+, r1
    4c8a:	8a 95       	dec	r24
    4c8c:	e9 f7       	brne	.-6      	; 0x4c88 <conv_brk+0x3c>
    4c8e:	f6 01       	movw	r30, r12
    4c90:	83 80       	ldd	r8, Z+3	; 0x03
    4c92:	80 e0       	ldi	r24, 0x00	; 0
    4c94:	90 e0       	ldi	r25, 0x00	; 0
    4c96:	bb 24       	eor	r11, r11
    4c98:	99 24       	eor	r9, r9
    4c9a:	70 e0       	ldi	r23, 0x00	; 0
    4c9c:	a1 e0       	ldi	r26, 0x01	; 1
    4c9e:	b0 e0       	ldi	r27, 0x00	; 0
    4ca0:	f7 01       	movw	r30, r14
    4ca2:	83 fc       	sbrc	r8, 3
    4ca4:	a5 90       	lpm	r10, Z+
    4ca6:	83 fe       	sbrs	r8, 3
    4ca8:	a1 90       	ld	r10, Z+
    4caa:	7f 01       	movw	r14, r30
    4cac:	aa 20       	and	r10, r10
    4cae:	09 f4       	brne	.+2      	; 0x4cb2 <conv_brk+0x66>
    4cb0:	7d c0       	rjmp	.+250    	; 0x4dac <conv_brk+0x160>
    4cb2:	fa 2d       	mov	r31, r10
    4cb4:	fe 35       	cpi	r31, 0x5E	; 94
    4cb6:	11 f4       	brne	.+4      	; 0x4cbc <conv_brk+0x70>
    4cb8:	00 97       	sbiw	r24, 0x00	; 0
    4cba:	51 f1       	breq	.+84     	; 0x4d10 <conv_brk+0xc4>
    4cbc:	47 2f       	mov	r20, r23
    4cbe:	50 e0       	ldi	r21, 0x00	; 0
    4cc0:	48 17       	cp	r20, r24
    4cc2:	59 07       	cpc	r21, r25
    4cc4:	44 f4       	brge	.+16     	; 0x4cd6 <conv_brk+0x8a>
    4cc6:	4a 2d       	mov	r20, r10
    4cc8:	4d 35       	cpi	r20, 0x5D	; 93
    4cca:	51 f1       	breq	.+84     	; 0x4d20 <conv_brk+0xd4>
    4ccc:	4d 32       	cpi	r20, 0x2D	; 45
    4cce:	19 f4       	brne	.+6      	; 0x4cd6 <conv_brk+0x8a>
    4cd0:	99 20       	and	r9, r9
    4cd2:	01 f1       	breq	.+64     	; 0x4d14 <conv_brk+0xc8>
    4cd4:	03 c0       	rjmp	.+6      	; 0x4cdc <conv_brk+0x90>
    4cd6:	99 20       	and	r9, r9
    4cd8:	09 f4       	brne	.+2      	; 0x4cdc <conv_brk+0x90>
    4cda:	ba 2c       	mov	r11, r10
    4cdc:	4a 2d       	mov	r20, r10
    4cde:	46 95       	lsr	r20
    4ce0:	46 95       	lsr	r20
    4ce2:	46 95       	lsr	r20
    4ce4:	f9 01       	movw	r30, r18
    4ce6:	e4 0f       	add	r30, r20
    4ce8:	f1 1d       	adc	r31, r1
    4cea:	4a 2d       	mov	r20, r10
    4cec:	47 70       	andi	r20, 0x07	; 7
    4cee:	3d 01       	movw	r6, r26
    4cf0:	02 c0       	rjmp	.+4      	; 0x4cf6 <conv_brk+0xaa>
    4cf2:	66 0c       	add	r6, r6
    4cf4:	77 1c       	adc	r7, r7
    4cf6:	4a 95       	dec	r20
    4cf8:	e2 f7       	brpl	.-8      	; 0x4cf2 <conv_brk+0xa6>
    4cfa:	90 80       	ld	r9, Z
    4cfc:	96 28       	or	r9, r6
    4cfe:	90 82       	st	Z, r9
    4d00:	ab 14       	cp	r10, r11
    4d02:	59 f0       	breq	.+22     	; 0x4d1a <conv_brk+0xce>
    4d04:	ab 14       	cp	r10, r11
    4d06:	10 f4       	brcc	.+4      	; 0x4d0c <conv_brk+0xc0>
    4d08:	a3 94       	inc	r10
    4d0a:	e8 cf       	rjmp	.-48     	; 0x4cdc <conv_brk+0x90>
    4d0c:	aa 94       	dec	r10
    4d0e:	e6 cf       	rjmp	.-52     	; 0x4cdc <conv_brk+0x90>
    4d10:	71 e0       	ldi	r23, 0x01	; 1
    4d12:	04 c0       	rjmp	.+8      	; 0x4d1c <conv_brk+0xd0>
    4d14:	99 24       	eor	r9, r9
    4d16:	93 94       	inc	r9
    4d18:	01 c0       	rjmp	.+2      	; 0x4d1c <conv_brk+0xd0>
    4d1a:	99 24       	eor	r9, r9
    4d1c:	01 96       	adiw	r24, 0x01	; 1
    4d1e:	c0 cf       	rjmp	.-128    	; 0x4ca0 <conv_brk+0x54>
    4d20:	99 20       	and	r9, r9
    4d22:	19 f0       	breq	.+6      	; 0x4d2a <conv_brk+0xde>
    4d24:	8e 81       	ldd	r24, Y+6	; 0x06
    4d26:	80 62       	ori	r24, 0x20	; 32
    4d28:	8e 83       	std	Y+6, r24	; 0x06
    4d2a:	77 23       	and	r23, r23
    4d2c:	51 f0       	breq	.+20     	; 0x4d42 <conv_brk+0xf6>
    4d2e:	ce 01       	movw	r24, r28
    4d30:	81 96       	adiw	r24, 0x21	; 33
    4d32:	fe 01       	movw	r30, r28
    4d34:	31 96       	adiw	r30, 0x01	; 1
    4d36:	20 81       	ld	r18, Z
    4d38:	20 95       	com	r18
    4d3a:	21 93       	st	Z+, r18
    4d3c:	e8 17       	cp	r30, r24
    4d3e:	f9 07       	cpc	r31, r25
    4d40:	d1 f7       	brne	.-12     	; 0x4d36 <conv_brk+0xea>
    4d42:	bb 24       	eor	r11, r11
    4d44:	b3 94       	inc	r11
    4d46:	4e 01       	movw	r8, r28
    4d48:	08 94       	sec
    4d4a:	81 1c       	adc	r8, r1
    4d4c:	91 1c       	adc	r9, r1
    4d4e:	01 c0       	rjmp	.+2      	; 0x4d52 <conv_brk+0x106>
    4d50:	bb 24       	eor	r11, r11
    4d52:	c6 01       	movw	r24, r12
    4d54:	69 a3       	std	Y+33, r22	; 0x21
    4d56:	84 d1       	rcall	.+776    	; 0x5060 <fgetc>
    4d58:	69 a1       	ldd	r22, Y+33	; 0x21
    4d5a:	97 fd       	sbrc	r25, 7
    4d5c:	1f c0       	rjmp	.+62     	; 0x4d9c <conv_brk+0x150>
    4d5e:	28 2f       	mov	r18, r24
    4d60:	26 95       	lsr	r18
    4d62:	26 95       	lsr	r18
    4d64:	26 95       	lsr	r18
    4d66:	f4 01       	movw	r30, r8
    4d68:	e2 0f       	add	r30, r18
    4d6a:	f1 1d       	adc	r31, r1
    4d6c:	20 81       	ld	r18, Z
    4d6e:	30 e0       	ldi	r19, 0x00	; 0
    4d70:	ac 01       	movw	r20, r24
    4d72:	47 70       	andi	r20, 0x07	; 7
    4d74:	50 70       	andi	r21, 0x00	; 0
    4d76:	02 c0       	rjmp	.+4      	; 0x4d7c <conv_brk+0x130>
    4d78:	35 95       	asr	r19
    4d7a:	27 95       	ror	r18
    4d7c:	4a 95       	dec	r20
    4d7e:	e2 f7       	brpl	.-8      	; 0x4d78 <conv_brk+0x12c>
    4d80:	20 fd       	sbrc	r18, 0
    4d82:	03 c0       	rjmp	.+6      	; 0x4d8a <conv_brk+0x13e>
    4d84:	b6 01       	movw	r22, r12
    4d86:	ae d1       	rcall	.+860    	; 0x50e4 <ungetc>
    4d88:	09 c0       	rjmp	.+18     	; 0x4d9c <conv_brk+0x150>
    4d8a:	01 15       	cp	r16, r1
    4d8c:	11 05       	cpc	r17, r1
    4d8e:	19 f0       	breq	.+6      	; 0x4d96 <conv_brk+0x14a>
    4d90:	f8 01       	movw	r30, r16
    4d92:	81 93       	st	Z+, r24
    4d94:	8f 01       	movw	r16, r30
    4d96:	61 50       	subi	r22, 0x01	; 1
    4d98:	d9 f6       	brne	.-74     	; 0x4d50 <conv_brk+0x104>
    4d9a:	02 c0       	rjmp	.+4      	; 0x4da0 <conv_brk+0x154>
    4d9c:	bb 20       	and	r11, r11
    4d9e:	31 f4       	brne	.+12     	; 0x4dac <conv_brk+0x160>
    4da0:	01 15       	cp	r16, r1
    4da2:	11 05       	cpc	r17, r1
    4da4:	29 f0       	breq	.+10     	; 0x4db0 <conv_brk+0x164>
    4da6:	f8 01       	movw	r30, r16
    4da8:	10 82       	st	Z, r1
    4daa:	02 c0       	rjmp	.+4      	; 0x4db0 <conv_brk+0x164>
    4dac:	ee 24       	eor	r14, r14
    4dae:	ff 24       	eor	r15, r15
    4db0:	c7 01       	movw	r24, r14
    4db2:	a1 96       	adiw	r28, 0x21	; 33
    4db4:	0f b6       	in	r0, 0x3f	; 63
    4db6:	f8 94       	cli
    4db8:	de bf       	out	0x3e, r29	; 62
    4dba:	0f be       	out	0x3f, r0	; 63
    4dbc:	cd bf       	out	0x3d, r28	; 61
    4dbe:	cf 91       	pop	r28
    4dc0:	df 91       	pop	r29
    4dc2:	1f 91       	pop	r17
    4dc4:	0f 91       	pop	r16
    4dc6:	ff 90       	pop	r15
    4dc8:	ef 90       	pop	r14
    4dca:	df 90       	pop	r13
    4dcc:	cf 90       	pop	r12
    4dce:	bf 90       	pop	r11
    4dd0:	af 90       	pop	r10
    4dd2:	9f 90       	pop	r9
    4dd4:	8f 90       	pop	r8
    4dd6:	7f 90       	pop	r7
    4dd8:	6f 90       	pop	r6
    4dda:	08 95       	ret

00004ddc <vfscanf>:
    4ddc:	4f 92       	push	r4
    4dde:	5f 92       	push	r5
    4de0:	6f 92       	push	r6
    4de2:	7f 92       	push	r7
    4de4:	9f 92       	push	r9
    4de6:	af 92       	push	r10
    4de8:	bf 92       	push	r11
    4dea:	cf 92       	push	r12
    4dec:	df 92       	push	r13
    4dee:	ef 92       	push	r14
    4df0:	ff 92       	push	r15
    4df2:	0f 93       	push	r16
    4df4:	1f 93       	push	r17
    4df6:	df 93       	push	r29
    4df8:	cf 93       	push	r28
    4dfa:	0f 92       	push	r0
    4dfc:	cd b7       	in	r28, 0x3d	; 61
    4dfe:	de b7       	in	r29, 0x3e	; 62
    4e00:	7c 01       	movw	r14, r24
    4e02:	6b 01       	movw	r12, r22
    4e04:	3a 01       	movw	r6, r20
    4e06:	fc 01       	movw	r30, r24
    4e08:	17 82       	std	Z+7, r1	; 0x07
    4e0a:	16 82       	std	Z+6, r1	; 0x06
    4e0c:	00 e0       	ldi	r16, 0x00	; 0
    4e0e:	db c0       	rjmp	.+438    	; 0x4fc6 <vfscanf+0x1ea>
    4e10:	81 2f       	mov	r24, r17
    4e12:	90 e0       	ldi	r25, 0x00	; 0
    4e14:	fc d0       	rcall	.+504    	; 0x500e <isspace>
    4e16:	00 97       	sbiw	r24, 0x00	; 0
    4e18:	19 f0       	breq	.+6      	; 0x4e20 <vfscanf+0x44>
    4e1a:	c7 01       	movw	r24, r14
    4e1c:	6f de       	rcall	.-802    	; 0x4afc <skip_spaces>
    4e1e:	d3 c0       	rjmp	.+422    	; 0x4fc6 <vfscanf+0x1ea>
    4e20:	15 32       	cpi	r17, 0x25	; 37
    4e22:	41 f4       	brne	.+16     	; 0x4e34 <vfscanf+0x58>
    4e24:	f6 01       	movw	r30, r12
    4e26:	a3 fc       	sbrc	r10, 3
    4e28:	35 91       	lpm	r19, Z+
    4e2a:	a3 fe       	sbrs	r10, 3
    4e2c:	31 91       	ld	r19, Z+
    4e2e:	6f 01       	movw	r12, r30
    4e30:	35 32       	cpi	r19, 0x25	; 37
    4e32:	51 f4       	brne	.+20     	; 0x4e48 <vfscanf+0x6c>
    4e34:	c7 01       	movw	r24, r14
    4e36:	14 d1       	rcall	.+552    	; 0x5060 <fgetc>
    4e38:	97 fd       	sbrc	r25, 7
    4e3a:	d1 c0       	rjmp	.+418    	; 0x4fde <vfscanf+0x202>
    4e3c:	18 17       	cp	r17, r24
    4e3e:	09 f4       	brne	.+2      	; 0x4e42 <vfscanf+0x66>
    4e40:	c2 c0       	rjmp	.+388    	; 0x4fc6 <vfscanf+0x1ea>
    4e42:	b7 01       	movw	r22, r14
    4e44:	4f d1       	rcall	.+670    	; 0x50e4 <ungetc>
    4e46:	cd c0       	rjmp	.+410    	; 0x4fe2 <vfscanf+0x206>
    4e48:	3a 32       	cpi	r19, 0x2A	; 42
    4e4a:	39 f4       	brne	.+14     	; 0x4e5a <vfscanf+0x7e>
    4e4c:	a3 fc       	sbrc	r10, 3
    4e4e:	35 91       	lpm	r19, Z+
    4e50:	a3 fe       	sbrs	r10, 3
    4e52:	31 91       	ld	r19, Z+
    4e54:	6f 01       	movw	r12, r30
    4e56:	11 e0       	ldi	r17, 0x01	; 1
    4e58:	01 c0       	rjmp	.+2      	; 0x4e5c <vfscanf+0x80>
    4e5a:	10 e0       	ldi	r17, 0x00	; 0
    4e5c:	99 24       	eor	r9, r9
    4e5e:	0e c0       	rjmp	.+28     	; 0x4e7c <vfscanf+0xa0>
    4e60:	12 60       	ori	r17, 0x02	; 2
    4e62:	69 2d       	mov	r22, r9
    4e64:	70 e0       	ldi	r23, 0x00	; 0
    4e66:	80 e0       	ldi	r24, 0x00	; 0
    4e68:	90 e0       	ldi	r25, 0x00	; 0
    4e6a:	40 e2       	ldi	r20, 0x20	; 32
    4e6c:	19 de       	rcall	.-974    	; 0x4aa0 <mulacc>
    4e6e:	96 2e       	mov	r9, r22
    4e70:	f6 01       	movw	r30, r12
    4e72:	a3 fc       	sbrc	r10, 3
    4e74:	35 91       	lpm	r19, Z+
    4e76:	a3 fe       	sbrs	r10, 3
    4e78:	31 91       	ld	r19, Z+
    4e7a:	6f 01       	movw	r12, r30
    4e7c:	23 2f       	mov	r18, r19
    4e7e:	20 53       	subi	r18, 0x30	; 48
    4e80:	2a 30       	cpi	r18, 0x0A	; 10
    4e82:	70 f3       	brcs	.-36     	; 0x4e60 <vfscanf+0x84>
    4e84:	11 ff       	sbrs	r17, 1
    4e86:	03 c0       	rjmp	.+6      	; 0x4e8e <vfscanf+0xb2>
    4e88:	99 20       	and	r9, r9
    4e8a:	19 f4       	brne	.+6      	; 0x4e92 <vfscanf+0xb6>
    4e8c:	aa c0       	rjmp	.+340    	; 0x4fe2 <vfscanf+0x206>
    4e8e:	99 24       	eor	r9, r9
    4e90:	9a 94       	dec	r9
    4e92:	38 36       	cpi	r19, 0x68	; 104
    4e94:	19 f0       	breq	.+6      	; 0x4e9c <vfscanf+0xc0>
    4e96:	3c 36       	cpi	r19, 0x6C	; 108
    4e98:	89 f4       	brne	.+34     	; 0x4ebc <vfscanf+0xe0>
    4e9a:	09 c0       	rjmp	.+18     	; 0x4eae <vfscanf+0xd2>
    4e9c:	f6 01       	movw	r30, r12
    4e9e:	a3 fc       	sbrc	r10, 3
    4ea0:	35 91       	lpm	r19, Z+
    4ea2:	a3 fe       	sbrs	r10, 3
    4ea4:	31 91       	ld	r19, Z+
    4ea6:	6f 01       	movw	r12, r30
    4ea8:	38 36       	cpi	r19, 0x68	; 104
    4eaa:	41 f4       	brne	.+16     	; 0x4ebc <vfscanf+0xe0>
    4eac:	18 60       	ori	r17, 0x08	; 8
    4eae:	14 60       	ori	r17, 0x04	; 4
    4eb0:	f6 01       	movw	r30, r12
    4eb2:	a3 fc       	sbrc	r10, 3
    4eb4:	35 91       	lpm	r19, Z+
    4eb6:	a3 fe       	sbrs	r10, 3
    4eb8:	31 91       	ld	r19, Z+
    4eba:	6f 01       	movw	r12, r30
    4ebc:	33 23       	and	r19, r19
    4ebe:	09 f4       	brne	.+2      	; 0x4ec2 <vfscanf+0xe6>
    4ec0:	90 c0       	rjmp	.+288    	; 0x4fe2 <vfscanf+0x206>
    4ec2:	89 e7       	ldi	r24, 0x79	; 121
    4ec4:	9f e0       	ldi	r25, 0x0F	; 15
    4ec6:	63 2f       	mov	r22, r19
    4ec8:	70 e0       	ldi	r23, 0x00	; 0
    4eca:	39 83       	std	Y+1, r19	; 0x01
    4ecc:	a8 d0       	rcall	.+336    	; 0x501e <strchr_P>
    4ece:	39 81       	ldd	r19, Y+1	; 0x01
    4ed0:	00 97       	sbiw	r24, 0x00	; 0
    4ed2:	09 f4       	brne	.+2      	; 0x4ed6 <vfscanf+0xfa>
    4ed4:	86 c0       	rjmp	.+268    	; 0x4fe2 <vfscanf+0x206>
    4ed6:	81 2f       	mov	r24, r17
    4ed8:	10 fd       	sbrc	r17, 0
    4eda:	08 c0       	rjmp	.+16     	; 0x4eec <vfscanf+0x110>
    4edc:	f3 01       	movw	r30, r6
    4ede:	40 80       	ld	r4, Z
    4ee0:	51 80       	ldd	r5, Z+1	; 0x01
    4ee2:	42 e0       	ldi	r20, 0x02	; 2
    4ee4:	50 e0       	ldi	r21, 0x00	; 0
    4ee6:	64 0e       	add	r6, r20
    4ee8:	75 1e       	adc	r7, r21
    4eea:	02 c0       	rjmp	.+4      	; 0x4ef0 <vfscanf+0x114>
    4eec:	44 24       	eor	r4, r4
    4eee:	55 24       	eor	r5, r5
    4ef0:	3e 36       	cpi	r19, 0x6E	; 110
    4ef2:	49 f4       	brne	.+18     	; 0x4f06 <vfscanf+0x12a>
    4ef4:	f7 01       	movw	r30, r14
    4ef6:	46 81       	ldd	r20, Z+6	; 0x06
    4ef8:	57 81       	ldd	r21, Z+7	; 0x07
    4efa:	60 e0       	ldi	r22, 0x00	; 0
    4efc:	70 e0       	ldi	r23, 0x00	; 0
    4efe:	c2 01       	movw	r24, r4
    4f00:	21 2f       	mov	r18, r17
    4f02:	c2 dd       	rcall	.-1148   	; 0x4a88 <putval>
    4f04:	60 c0       	rjmp	.+192    	; 0x4fc6 <vfscanf+0x1ea>
    4f06:	33 36       	cpi	r19, 0x63	; 99
    4f08:	89 f4       	brne	.+34     	; 0x4f2c <vfscanf+0x150>
    4f0a:	81 fd       	sbrc	r24, 1
    4f0c:	02 c0       	rjmp	.+4      	; 0x4f12 <vfscanf+0x136>
    4f0e:	99 24       	eor	r9, r9
    4f10:	93 94       	inc	r9
    4f12:	c7 01       	movw	r24, r14
    4f14:	a5 d0       	rcall	.+330    	; 0x5060 <fgetc>
    4f16:	97 fd       	sbrc	r25, 7
    4f18:	62 c0       	rjmp	.+196    	; 0x4fde <vfscanf+0x202>
    4f1a:	41 14       	cp	r4, r1
    4f1c:	51 04       	cpc	r5, r1
    4f1e:	19 f0       	breq	.+6      	; 0x4f26 <vfscanf+0x14a>
    4f20:	f2 01       	movw	r30, r4
    4f22:	81 93       	st	Z+, r24
    4f24:	2f 01       	movw	r4, r30
    4f26:	9a 94       	dec	r9
    4f28:	a1 f7       	brne	.-24     	; 0x4f12 <vfscanf+0x136>
    4f2a:	4b c0       	rjmp	.+150    	; 0x4fc2 <vfscanf+0x1e6>
    4f2c:	3b 35       	cpi	r19, 0x5B	; 91
    4f2e:	51 f4       	brne	.+20     	; 0x4f44 <vfscanf+0x168>
    4f30:	c7 01       	movw	r24, r14
    4f32:	69 2d       	mov	r22, r9
    4f34:	a2 01       	movw	r20, r4
    4f36:	96 01       	movw	r18, r12
    4f38:	89 de       	rcall	.-750    	; 0x4c4c <conv_brk>
    4f3a:	6c 01       	movw	r12, r24
    4f3c:	00 97       	sbiw	r24, 0x00	; 0
    4f3e:	09 f0       	breq	.+2      	; 0x4f42 <vfscanf+0x166>
    4f40:	40 c0       	rjmp	.+128    	; 0x4fc2 <vfscanf+0x1e6>
    4f42:	3a c0       	rjmp	.+116    	; 0x4fb8 <vfscanf+0x1dc>
    4f44:	c7 01       	movw	r24, r14
    4f46:	39 83       	std	Y+1, r19	; 0x01
    4f48:	d9 dd       	rcall	.-1102   	; 0x4afc <skip_spaces>
    4f4a:	39 81       	ldd	r19, Y+1	; 0x01
    4f4c:	97 fd       	sbrc	r25, 7
    4f4e:	47 c0       	rjmp	.+142    	; 0x4fde <vfscanf+0x202>
    4f50:	3f 36       	cpi	r19, 0x6F	; 111
    4f52:	41 f1       	breq	.+80     	; 0x4fa4 <vfscanf+0x1c8>
    4f54:	30 37       	cpi	r19, 0x70	; 112
    4f56:	28 f4       	brcc	.+10     	; 0x4f62 <vfscanf+0x186>
    4f58:	34 36       	cpi	r19, 0x64	; 100
    4f5a:	11 f1       	breq	.+68     	; 0x4fa0 <vfscanf+0x1c4>
    4f5c:	39 36       	cpi	r19, 0x69	; 105
    4f5e:	21 f5       	brne	.+72     	; 0x4fa8 <vfscanf+0x1cc>
    4f60:	24 c0       	rjmp	.+72     	; 0x4faa <vfscanf+0x1ce>
    4f62:	33 37       	cpi	r19, 0x73	; 115
    4f64:	19 f0       	breq	.+6      	; 0x4f6c <vfscanf+0x190>
    4f66:	35 37       	cpi	r19, 0x75	; 117
    4f68:	f9 f4       	brne	.+62     	; 0x4fa8 <vfscanf+0x1cc>
    4f6a:	1a c0       	rjmp	.+52     	; 0x4fa0 <vfscanf+0x1c4>
    4f6c:	c7 01       	movw	r24, r14
    4f6e:	78 d0       	rcall	.+240    	; 0x5060 <fgetc>
    4f70:	5c 01       	movw	r10, r24
    4f72:	97 fd       	sbrc	r25, 7
    4f74:	0f c0       	rjmp	.+30     	; 0x4f94 <vfscanf+0x1b8>
    4f76:	4b d0       	rcall	.+150    	; 0x500e <isspace>
    4f78:	00 97       	sbiw	r24, 0x00	; 0
    4f7a:	21 f0       	breq	.+8      	; 0x4f84 <vfscanf+0x1a8>
    4f7c:	c5 01       	movw	r24, r10
    4f7e:	b7 01       	movw	r22, r14
    4f80:	b1 d0       	rcall	.+354    	; 0x50e4 <ungetc>
    4f82:	08 c0       	rjmp	.+16     	; 0x4f94 <vfscanf+0x1b8>
    4f84:	41 14       	cp	r4, r1
    4f86:	51 04       	cpc	r5, r1
    4f88:	19 f0       	breq	.+6      	; 0x4f90 <vfscanf+0x1b4>
    4f8a:	f2 01       	movw	r30, r4
    4f8c:	a1 92       	st	Z+, r10
    4f8e:	2f 01       	movw	r4, r30
    4f90:	9a 94       	dec	r9
    4f92:	61 f7       	brne	.-40     	; 0x4f6c <vfscanf+0x190>
    4f94:	41 14       	cp	r4, r1
    4f96:	51 04       	cpc	r5, r1
    4f98:	a1 f0       	breq	.+40     	; 0x4fc2 <vfscanf+0x1e6>
    4f9a:	f2 01       	movw	r30, r4
    4f9c:	10 82       	st	Z, r1
    4f9e:	11 c0       	rjmp	.+34     	; 0x4fc2 <vfscanf+0x1e6>
    4fa0:	10 62       	ori	r17, 0x20	; 32
    4fa2:	03 c0       	rjmp	.+6      	; 0x4faa <vfscanf+0x1ce>
    4fa4:	10 61       	ori	r17, 0x10	; 16
    4fa6:	01 c0       	rjmp	.+2      	; 0x4faa <vfscanf+0x1ce>
    4fa8:	10 64       	ori	r17, 0x40	; 64
    4faa:	c7 01       	movw	r24, r14
    4fac:	69 2d       	mov	r22, r9
    4fae:	a2 01       	movw	r20, r4
    4fb0:	21 2f       	mov	r18, r17
    4fb2:	be dd       	rcall	.-1156   	; 0x4b30 <conv_int>
    4fb4:	88 23       	and	r24, r24
    4fb6:	29 f4       	brne	.+10     	; 0x4fc2 <vfscanf+0x1e6>
    4fb8:	f7 01       	movw	r30, r14
    4fba:	83 81       	ldd	r24, Z+3	; 0x03
    4fbc:	80 73       	andi	r24, 0x30	; 48
    4fbe:	79 f4       	brne	.+30     	; 0x4fde <vfscanf+0x202>
    4fc0:	10 c0       	rjmp	.+32     	; 0x4fe2 <vfscanf+0x206>
    4fc2:	10 ff       	sbrs	r17, 0
    4fc4:	0f 5f       	subi	r16, 0xFF	; 255
    4fc6:	f7 01       	movw	r30, r14
    4fc8:	a3 80       	ldd	r10, Z+3	; 0x03
    4fca:	f6 01       	movw	r30, r12
    4fcc:	a3 fc       	sbrc	r10, 3
    4fce:	15 91       	lpm	r17, Z+
    4fd0:	a3 fe       	sbrs	r10, 3
    4fd2:	11 91       	ld	r17, Z+
    4fd4:	6f 01       	movw	r12, r30
    4fd6:	11 23       	and	r17, r17
    4fd8:	09 f0       	breq	.+2      	; 0x4fdc <vfscanf+0x200>
    4fda:	1a cf       	rjmp	.-460    	; 0x4e10 <vfscanf+0x34>
    4fdc:	02 c0       	rjmp	.+4      	; 0x4fe2 <vfscanf+0x206>
    4fde:	00 23       	and	r16, r16
    4fe0:	11 f0       	breq	.+4      	; 0x4fe6 <vfscanf+0x20a>
    4fe2:	10 e0       	ldi	r17, 0x00	; 0
    4fe4:	02 c0       	rjmp	.+4      	; 0x4fea <vfscanf+0x20e>
    4fe6:	0f ef       	ldi	r16, 0xFF	; 255
    4fe8:	1f ef       	ldi	r17, 0xFF	; 255
    4fea:	c8 01       	movw	r24, r16
    4fec:	0f 90       	pop	r0
    4fee:	cf 91       	pop	r28
    4ff0:	df 91       	pop	r29
    4ff2:	1f 91       	pop	r17
    4ff4:	0f 91       	pop	r16
    4ff6:	ff 90       	pop	r15
    4ff8:	ef 90       	pop	r14
    4ffa:	df 90       	pop	r13
    4ffc:	cf 90       	pop	r12
    4ffe:	bf 90       	pop	r11
    5000:	af 90       	pop	r10
    5002:	9f 90       	pop	r9
    5004:	7f 90       	pop	r7
    5006:	6f 90       	pop	r6
    5008:	5f 90       	pop	r5
    500a:	4f 90       	pop	r4
    500c:	08 95       	ret

0000500e <isspace>:
    500e:	91 11       	cpse	r25, r1
    5010:	e2 c0       	rjmp	.+452    	; 0x51d6 <__ctype_isfalse>
    5012:	80 32       	cpi	r24, 0x20	; 32
    5014:	19 f0       	breq	.+6      	; 0x501c <isspace+0xe>
    5016:	89 50       	subi	r24, 0x09	; 9
    5018:	85 50       	subi	r24, 0x05	; 5
    501a:	d0 f7       	brcc	.-12     	; 0x5010 <isspace+0x2>
    501c:	08 95       	ret

0000501e <strchr_P>:
    501e:	fc 01       	movw	r30, r24
    5020:	05 90       	lpm	r0, Z+
    5022:	06 16       	cp	r0, r22
    5024:	21 f0       	breq	.+8      	; 0x502e <strchr_P+0x10>
    5026:	00 20       	and	r0, r0
    5028:	d9 f7       	brne	.-10     	; 0x5020 <strchr_P+0x2>
    502a:	c0 01       	movw	r24, r0
    502c:	08 95       	ret
    502e:	31 97       	sbiw	r30, 0x01	; 1
    5030:	cf 01       	movw	r24, r30
    5032:	08 95       	ret

00005034 <strnlen_P>:
    5034:	fc 01       	movw	r30, r24
    5036:	05 90       	lpm	r0, Z+
    5038:	61 50       	subi	r22, 0x01	; 1
    503a:	70 40       	sbci	r23, 0x00	; 0
    503c:	01 10       	cpse	r0, r1
    503e:	d8 f7       	brcc	.-10     	; 0x5036 <strnlen_P+0x2>
    5040:	80 95       	com	r24
    5042:	90 95       	com	r25
    5044:	8e 0f       	add	r24, r30
    5046:	9f 1f       	adc	r25, r31
    5048:	08 95       	ret

0000504a <strnlen>:
    504a:	fc 01       	movw	r30, r24
    504c:	61 50       	subi	r22, 0x01	; 1
    504e:	70 40       	sbci	r23, 0x00	; 0
    5050:	01 90       	ld	r0, Z+
    5052:	01 10       	cpse	r0, r1
    5054:	d8 f7       	brcc	.-10     	; 0x504c <strnlen+0x2>
    5056:	80 95       	com	r24
    5058:	90 95       	com	r25
    505a:	8e 0f       	add	r24, r30
    505c:	9f 1f       	adc	r25, r31
    505e:	08 95       	ret

00005060 <fgetc>:
    5060:	cf 93       	push	r28
    5062:	df 93       	push	r29
    5064:	ec 01       	movw	r28, r24
    5066:	3b 81       	ldd	r19, Y+3	; 0x03
    5068:	30 ff       	sbrs	r19, 0
    506a:	36 c0       	rjmp	.+108    	; 0x50d8 <fgetc+0x78>
    506c:	36 ff       	sbrs	r19, 6
    506e:	09 c0       	rjmp	.+18     	; 0x5082 <fgetc+0x22>
    5070:	3f 7b       	andi	r19, 0xBF	; 191
    5072:	3b 83       	std	Y+3, r19	; 0x03
    5074:	8e 81       	ldd	r24, Y+6	; 0x06
    5076:	9f 81       	ldd	r25, Y+7	; 0x07
    5078:	01 96       	adiw	r24, 0x01	; 1
    507a:	9f 83       	std	Y+7, r25	; 0x07
    507c:	8e 83       	std	Y+6, r24	; 0x06
    507e:	2a 81       	ldd	r18, Y+2	; 0x02
    5080:	29 c0       	rjmp	.+82     	; 0x50d4 <fgetc+0x74>
    5082:	32 ff       	sbrs	r19, 2
    5084:	0f c0       	rjmp	.+30     	; 0x50a4 <fgetc+0x44>
    5086:	e8 81       	ld	r30, Y
    5088:	f9 81       	ldd	r31, Y+1	; 0x01
    508a:	80 81       	ld	r24, Z
    508c:	99 27       	eor	r25, r25
    508e:	87 fd       	sbrc	r24, 7
    5090:	90 95       	com	r25
    5092:	00 97       	sbiw	r24, 0x00	; 0
    5094:	19 f4       	brne	.+6      	; 0x509c <fgetc+0x3c>
    5096:	30 62       	ori	r19, 0x20	; 32
    5098:	3b 83       	std	Y+3, r19	; 0x03
    509a:	1e c0       	rjmp	.+60     	; 0x50d8 <fgetc+0x78>
    509c:	31 96       	adiw	r30, 0x01	; 1
    509e:	f9 83       	std	Y+1, r31	; 0x01
    50a0:	e8 83       	st	Y, r30
    50a2:	11 c0       	rjmp	.+34     	; 0x50c6 <fgetc+0x66>
    50a4:	ea 85       	ldd	r30, Y+10	; 0x0a
    50a6:	fb 85       	ldd	r31, Y+11	; 0x0b
    50a8:	ce 01       	movw	r24, r28
    50aa:	09 95       	icall
    50ac:	97 ff       	sbrs	r25, 7
    50ae:	0b c0       	rjmp	.+22     	; 0x50c6 <fgetc+0x66>
    50b0:	2b 81       	ldd	r18, Y+3	; 0x03
    50b2:	3f ef       	ldi	r19, 0xFF	; 255
    50b4:	8f 3f       	cpi	r24, 0xFF	; 255
    50b6:	93 07       	cpc	r25, r19
    50b8:	11 f4       	brne	.+4      	; 0x50be <fgetc+0x5e>
    50ba:	80 e1       	ldi	r24, 0x10	; 16
    50bc:	01 c0       	rjmp	.+2      	; 0x50c0 <fgetc+0x60>
    50be:	80 e2       	ldi	r24, 0x20	; 32
    50c0:	82 2b       	or	r24, r18
    50c2:	8b 83       	std	Y+3, r24	; 0x03
    50c4:	09 c0       	rjmp	.+18     	; 0x50d8 <fgetc+0x78>
    50c6:	2e 81       	ldd	r18, Y+6	; 0x06
    50c8:	3f 81       	ldd	r19, Y+7	; 0x07
    50ca:	2f 5f       	subi	r18, 0xFF	; 255
    50cc:	3f 4f       	sbci	r19, 0xFF	; 255
    50ce:	3f 83       	std	Y+7, r19	; 0x07
    50d0:	2e 83       	std	Y+6, r18	; 0x06
    50d2:	28 2f       	mov	r18, r24
    50d4:	30 e0       	ldi	r19, 0x00	; 0
    50d6:	02 c0       	rjmp	.+4      	; 0x50dc <fgetc+0x7c>
    50d8:	2f ef       	ldi	r18, 0xFF	; 255
    50da:	3f ef       	ldi	r19, 0xFF	; 255
    50dc:	c9 01       	movw	r24, r18
    50de:	df 91       	pop	r29
    50e0:	cf 91       	pop	r28
    50e2:	08 95       	ret

000050e4 <ungetc>:
    50e4:	fb 01       	movw	r30, r22
    50e6:	23 81       	ldd	r18, Z+3	; 0x03
    50e8:	20 ff       	sbrs	r18, 0
    50ea:	13 c0       	rjmp	.+38     	; 0x5112 <ungetc+0x2e>
    50ec:	26 fd       	sbrc	r18, 6
    50ee:	11 c0       	rjmp	.+34     	; 0x5112 <ungetc+0x2e>
    50f0:	3f ef       	ldi	r19, 0xFF	; 255
    50f2:	8f 3f       	cpi	r24, 0xFF	; 255
    50f4:	93 07       	cpc	r25, r19
    50f6:	69 f0       	breq	.+26     	; 0x5112 <ungetc+0x2e>
    50f8:	82 83       	std	Z+2, r24	; 0x02
    50fa:	20 64       	ori	r18, 0x40	; 64
    50fc:	2f 7d       	andi	r18, 0xDF	; 223
    50fe:	23 83       	std	Z+3, r18	; 0x03
    5100:	26 81       	ldd	r18, Z+6	; 0x06
    5102:	37 81       	ldd	r19, Z+7	; 0x07
    5104:	21 50       	subi	r18, 0x01	; 1
    5106:	30 40       	sbci	r19, 0x00	; 0
    5108:	37 83       	std	Z+7, r19	; 0x07
    510a:	26 83       	std	Z+6, r18	; 0x06
    510c:	28 2f       	mov	r18, r24
    510e:	30 e0       	ldi	r19, 0x00	; 0
    5110:	02 c0       	rjmp	.+4      	; 0x5116 <ungetc+0x32>
    5112:	2f ef       	ldi	r18, 0xFF	; 255
    5114:	3f ef       	ldi	r19, 0xFF	; 255
    5116:	c9 01       	movw	r24, r18
    5118:	08 95       	ret

0000511a <__ultoa_invert>:
    511a:	fa 01       	movw	r30, r20
    511c:	aa 27       	eor	r26, r26
    511e:	28 30       	cpi	r18, 0x08	; 8
    5120:	51 f1       	breq	.+84     	; 0x5176 <__ultoa_invert+0x5c>
    5122:	20 31       	cpi	r18, 0x10	; 16
    5124:	81 f1       	breq	.+96     	; 0x5186 <__ultoa_invert+0x6c>
    5126:	e8 94       	clt
    5128:	6f 93       	push	r22
    512a:	6e 7f       	andi	r22, 0xFE	; 254
    512c:	6e 5f       	subi	r22, 0xFE	; 254
    512e:	7f 4f       	sbci	r23, 0xFF	; 255
    5130:	8f 4f       	sbci	r24, 0xFF	; 255
    5132:	9f 4f       	sbci	r25, 0xFF	; 255
    5134:	af 4f       	sbci	r26, 0xFF	; 255
    5136:	b1 e0       	ldi	r27, 0x01	; 1
    5138:	3e d0       	rcall	.+124    	; 0x51b6 <__ultoa_invert+0x9c>
    513a:	b4 e0       	ldi	r27, 0x04	; 4
    513c:	3c d0       	rcall	.+120    	; 0x51b6 <__ultoa_invert+0x9c>
    513e:	67 0f       	add	r22, r23
    5140:	78 1f       	adc	r23, r24
    5142:	89 1f       	adc	r24, r25
    5144:	9a 1f       	adc	r25, r26
    5146:	a1 1d       	adc	r26, r1
    5148:	68 0f       	add	r22, r24
    514a:	79 1f       	adc	r23, r25
    514c:	8a 1f       	adc	r24, r26
    514e:	91 1d       	adc	r25, r1
    5150:	a1 1d       	adc	r26, r1
    5152:	6a 0f       	add	r22, r26
    5154:	71 1d       	adc	r23, r1
    5156:	81 1d       	adc	r24, r1
    5158:	91 1d       	adc	r25, r1
    515a:	a1 1d       	adc	r26, r1
    515c:	20 d0       	rcall	.+64     	; 0x519e <__ultoa_invert+0x84>
    515e:	09 f4       	brne	.+2      	; 0x5162 <__ultoa_invert+0x48>
    5160:	68 94       	set
    5162:	3f 91       	pop	r19
    5164:	2a e0       	ldi	r18, 0x0A	; 10
    5166:	26 9f       	mul	r18, r22
    5168:	11 24       	eor	r1, r1
    516a:	30 19       	sub	r19, r0
    516c:	30 5d       	subi	r19, 0xD0	; 208
    516e:	31 93       	st	Z+, r19
    5170:	de f6       	brtc	.-74     	; 0x5128 <__ultoa_invert+0xe>
    5172:	cf 01       	movw	r24, r30
    5174:	08 95       	ret
    5176:	46 2f       	mov	r20, r22
    5178:	47 70       	andi	r20, 0x07	; 7
    517a:	40 5d       	subi	r20, 0xD0	; 208
    517c:	41 93       	st	Z+, r20
    517e:	b3 e0       	ldi	r27, 0x03	; 3
    5180:	0f d0       	rcall	.+30     	; 0x51a0 <__ultoa_invert+0x86>
    5182:	c9 f7       	brne	.-14     	; 0x5176 <__ultoa_invert+0x5c>
    5184:	f6 cf       	rjmp	.-20     	; 0x5172 <__ultoa_invert+0x58>
    5186:	46 2f       	mov	r20, r22
    5188:	4f 70       	andi	r20, 0x0F	; 15
    518a:	40 5d       	subi	r20, 0xD0	; 208
    518c:	4a 33       	cpi	r20, 0x3A	; 58
    518e:	18 f0       	brcs	.+6      	; 0x5196 <__ultoa_invert+0x7c>
    5190:	49 5d       	subi	r20, 0xD9	; 217
    5192:	31 fd       	sbrc	r19, 1
    5194:	40 52       	subi	r20, 0x20	; 32
    5196:	41 93       	st	Z+, r20
    5198:	02 d0       	rcall	.+4      	; 0x519e <__ultoa_invert+0x84>
    519a:	a9 f7       	brne	.-22     	; 0x5186 <__ultoa_invert+0x6c>
    519c:	ea cf       	rjmp	.-44     	; 0x5172 <__ultoa_invert+0x58>
    519e:	b4 e0       	ldi	r27, 0x04	; 4
    51a0:	a6 95       	lsr	r26
    51a2:	97 95       	ror	r25
    51a4:	87 95       	ror	r24
    51a6:	77 95       	ror	r23
    51a8:	67 95       	ror	r22
    51aa:	ba 95       	dec	r27
    51ac:	c9 f7       	brne	.-14     	; 0x51a0 <__ultoa_invert+0x86>
    51ae:	00 97       	sbiw	r24, 0x00	; 0
    51b0:	61 05       	cpc	r22, r1
    51b2:	71 05       	cpc	r23, r1
    51b4:	08 95       	ret
    51b6:	9b 01       	movw	r18, r22
    51b8:	ac 01       	movw	r20, r24
    51ba:	0a 2e       	mov	r0, r26
    51bc:	06 94       	lsr	r0
    51be:	57 95       	ror	r21
    51c0:	47 95       	ror	r20
    51c2:	37 95       	ror	r19
    51c4:	27 95       	ror	r18
    51c6:	ba 95       	dec	r27
    51c8:	c9 f7       	brne	.-14     	; 0x51bc <__ultoa_invert+0xa2>
    51ca:	62 0f       	add	r22, r18
    51cc:	73 1f       	adc	r23, r19
    51ce:	84 1f       	adc	r24, r20
    51d0:	95 1f       	adc	r25, r21
    51d2:	a0 1d       	adc	r26, r0
    51d4:	08 95       	ret

000051d6 <__ctype_isfalse>:
    51d6:	99 27       	eor	r25, r25
    51d8:	88 27       	eor	r24, r24

000051da <__ctype_istrue>:
    51da:	08 95       	ret

000051dc <_exit>:
    51dc:	f8 94       	cli

000051de <__stop_program>:
    51de:	ff cf       	rjmp	.-2      	; 0x51de <__stop_program>
